[{"url":"https://api.github.com/repos/facebook/react/issues/19956","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19956/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19956/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19956/events","html_url":"https://github.com/facebook/react/issues/19956","id":714318102,"node_id":"MDU6SXNzdWU3MTQzMTgxMDI=","number":19956,"title":"Hooks are really great innovation in react","user":{"login":"perfectionist1","id":11949922,"node_id":"MDQ6VXNlcjExOTQ5OTIy","avatar_url":"https://avatars2.githubusercontent.com/u/11949922?v=4","gravatar_id":"","url":"https://api.github.com/users/perfectionist1","html_url":"https://github.com/perfectionist1","followers_url":"https://api.github.com/users/perfectionist1/followers","following_url":"https://api.github.com/users/perfectionist1/following{/other_user}","gists_url":"https://api.github.com/users/perfectionist1/gists{/gist_id}","starred_url":"https://api.github.com/users/perfectionist1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/perfectionist1/subscriptions","organizations_url":"https://api.github.com/users/perfectionist1/orgs","repos_url":"https://api.github.com/users/perfectionist1/repos","events_url":"https://api.github.com/users/perfectionist1/events{/privacy}","received_events_url":"https://api.github.com/users/perfectionist1/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-04T13:48:50Z","updated_at":"2020-10-04T13:48:50Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Dear Team, \r\nHooks are pretty precise to use and efficient to implement. Thanks a lot guys for initiating hooks.\r\nWarm Regards.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19954","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19954/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19954/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19954/events","html_url":"https://github.com/facebook/react/issues/19954","id":714126574,"node_id":"MDU6SXNzdWU3MTQxMjY1NzQ=","number":19954,"title":"Features/Improvements: Local/Network address only shown when code compiled successfully without any warnings.","user":{"login":"taruntosh","id":53813832,"node_id":"MDQ6VXNlcjUzODEzODMy","avatar_url":"https://avatars0.githubusercontent.com/u/53813832?v=4","gravatar_id":"","url":"https://api.github.com/users/taruntosh","html_url":"https://github.com/taruntosh","followers_url":"https://api.github.com/users/taruntosh/followers","following_url":"https://api.github.com/users/taruntosh/following{/other_user}","gists_url":"https://api.github.com/users/taruntosh/gists{/gist_id}","starred_url":"https://api.github.com/users/taruntosh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taruntosh/subscriptions","organizations_url":"https://api.github.com/users/taruntosh/orgs","repos_url":"https://api.github.com/users/taruntosh/repos","events_url":"https://api.github.com/users/taruntosh/events{/privacy}","received_events_url":"https://api.github.com/users/taruntosh/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-10-03T16:34:58Z","updated_at":"2020-10-03T18:22:02Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"![suceess-server](https://user-images.githubusercontent.com/53813832/94996653-8f8bd680-05c3-11eb-9ac1-7dd6a84be562.JPG)\r\nLocal/Network address shown only when the code **COMPILES SUCCESSFULLY** without any warnings. \r\n\r\n![server-fail](https://user-images.githubusercontent.com/53813832/94996655-90bd0380-05c3-11eb-923c-0bcc7a8f470f.JPG)\r\nIt would be a great feature, if the Local/Network address is shown even when the code compiles with warnings.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19952","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19952/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19952/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19952/events","html_url":"https://github.com/facebook/react/issues/19952","id":714055215,"node_id":"MDU6SXNzdWU3MTQwNTUyMTU=","number":19952,"title":"ReactDOM.render cause chrome debug react stuck","user":{"login":"chikadance","id":2714293,"node_id":"MDQ6VXNlcjI3MTQyOTM=","avatar_url":"https://avatars3.githubusercontent.com/u/2714293?v=4","gravatar_id":"","url":"https://api.github.com/users/chikadance","html_url":"https://github.com/chikadance","followers_url":"https://api.github.com/users/chikadance/followers","following_url":"https://api.github.com/users/chikadance/following{/other_user}","gists_url":"https://api.github.com/users/chikadance/gists{/gist_id}","starred_url":"https://api.github.com/users/chikadance/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chikadance/subscriptions","organizations_url":"https://api.github.com/users/chikadance/orgs","repos_url":"https://api.github.com/users/chikadance/repos","events_url":"https://api.github.com/users/chikadance/events{/privacy}","received_events_url":"https://api.github.com/users/chikadance/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-03T09:58:22Z","updated_at":"2020-10-04T01:55:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I report this bug in https://youtrack.jetbrains.com/issue/WEB-47656\r\nabove issue I upload how-to-reproduce video\r\nI guess it's react bug not webstorm bug, since I remove all `import react*` in project, debug not stuck\r\nand when i use vue and angular, it has no this bug\r\nso I guess some react inner code cause debug stuck\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19951","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19951/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19951/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19951/events","html_url":"https://github.com/facebook/react/pull/19951","id":714028759,"node_id":"MDExOlB1bGxSZXF1ZXN0NDk3MjMyNzg2","number":19951,"title":"Treat <time> tag as a normal HTML tag.","user":{"login":"sbs2001","id":28975399,"node_id":"MDQ6VXNlcjI4OTc1Mzk5","avatar_url":"https://avatars1.githubusercontent.com/u/28975399?v=4","gravatar_id":"","url":"https://api.github.com/users/sbs2001","html_url":"https://github.com/sbs2001","followers_url":"https://api.github.com/users/sbs2001/followers","following_url":"https://api.github.com/users/sbs2001/following{/other_user}","gists_url":"https://api.github.com/users/sbs2001/gists{/gist_id}","starred_url":"https://api.github.com/users/sbs2001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sbs2001/subscriptions","organizations_url":"https://api.github.com/users/sbs2001/orgs","repos_url":"https://api.github.com/users/sbs2001/repos","events_url":"https://api.github.com/users/sbs2001/events{/privacy}","received_events_url":"https://api.github.com/users/sbs2001/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-10-03T07:31:02Z","updated_at":"2020-10-03T07:56:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19951","html_url":"https://github.com/facebook/react/pull/19951","diff_url":"https://github.com/facebook/react/pull/19951.diff","patch_url":"https://github.com/facebook/react/pull/19951.patch"},"body":"\r\n<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nBefore Chrome 62(this is in 2017) , chrome didn't support `<time>` despite it being widely used.  At the time the Chrome team probably announced that they will be supporting the `<time>` tag in their next release. To avoid React complain before the Chrome release, some code to suppress these errors is in place.\r\n\r\nIt's 2020 now and there's no need to have the code to suppress errors  as `<time>` tag is supported by Chrome. This PR removes that code.\r\n\r\n## Test Plan\r\nThis is the test log of relevant tests.\r\n\r\n```\r\nshivam@shivam-desktop:~/coding/opensource/react$ yarn test ReactDOMComponent-test.js\r\nyarn run v1.22.5\r\n$ node ./scripts/jest/jest-cli.js ReactDOMComponent-test.js\r\n$ NODE_ENV=development RELEASE_CHANNEL=experimental node ./scripts/jest/jest.js --config ./scripts/jest/config.source.js ReactDOMComponent-test.js\r\n\r\nRunning tests for default (experimental)...\r\n PASS  packages/react-dom/src/__tests__/ReactDOMComponent-test.js (15.737s)\r\n  ReactDOMComponent\r\n    ✓ receives events in specific order (85ms)\r\n    updateDOM\r\n      ✓ should handle className (309ms)\r\n      ✓ should gracefully handle various style value types (95ms)\r\n      ✓ should not update styles when mutating a proxy style object (108ms)\r\n      ✓ should throw when mutating style objects (104ms)\r\n      ✓ should warn for unknown prop (86ms)\r\n      ✓ should group multiple unknown prop warnings together (87ms)\r\n      ✓ should warn for onDblClick prop (84ms)\r\n      ✓ should warn for unknown string event handlers (90ms)\r\n      ✓ should warn for unknown function event handlers (99ms)\r\n      ✓ should warn for badly cased React attributes (85ms)\r\n      ✓ should not warn for \"0\" as a unitless style value (80ms)\r\n      ✓ should warn nicely about NaN in style (86ms)\r\n      ✓ should update styles if initially null (92ms)\r\n      ✓ should update styles if updated to null multiple times (90ms)\r\n      ✓ should allow named slot projection on both web components and regular DOM elements (88ms)\r\n      ✓ should skip reserved props on web components (92ms)\r\n      ✓ should skip dangerouslySetInnerHTML on web components (83ms)\r\n      ✓ should render null and undefined as empty but print other falsy values (86ms)\r\n      ✓ should remove attributes (84ms)\r\n      ✓ should remove properties (86ms)\r\n      ✓ should not set null/undefined attributes (94ms)\r\n      ✓ should apply React-specific aliases to HTML elements (86ms)\r\n      ✓ should apply React-specific aliases to SVG elements (101ms)\r\n      ✓ should properly update custom attributes on custom elements (80ms)\r\n      ✓ should not apply React-specific aliases to custom elements (82ms)\r\n      ✓ should clear a single style prop when changing `style` (92ms)\r\n      ✓ should reject attribute key injection attack on markup for regular DOM (SSR) (73ms)\r\n      ✓ should reject attribute key injection attack on markup for custom elements (SSR) (68ms)\r\n      ✓ should reject attribute key injection attack on mount for regular DOM (95ms)\r\n      ✓ should reject attribute key injection attack on mount for custom elements (92ms)\r\n      ✓ should reject attribute key injection attack on update for regular DOM (90ms)\r\n      ✓ should reject attribute key injection attack on update for custom elements (105ms)\r\n      ✓ should update arbitrary attributes for tags containing dashes (82ms)\r\n      ✓ should clear all the styles when removing `style` (80ms)\r\n      ✓ should update styles when `style` changes from null to object (83ms)\r\n      ✓ should not reset innerHTML for when children is null (85ms)\r\n      ✓ should reset innerHTML when switching from a direct text child to an empty child (85ms)\r\n      ✓ should empty element when removing innerHTML (86ms)\r\n      ✓ should transition from string content to innerHTML (90ms)\r\n      ✓ should transition from innerHTML to string content (80ms)\r\n      ✓ should transition from innerHTML to children in nested el (81ms)\r\n      ✓ should transition from children to innerHTML in nested el (84ms)\r\n      ✓ should not incur unnecessary DOM mutations for attributes (91ms)\r\n      ✓ should not incur unnecessary DOM mutations for string properties (91ms)\r\n      ✓ should not incur unnecessary DOM mutations for boolean properties (84ms)\r\n      ✓ should ignore attribute list for elements with the \"is\" attribute (85ms)\r\n      ✓ should warn about non-string \"is\" attribute (79ms)\r\n      ✓ should not update when switching between null/undefined (81ms)\r\n      ✓ handles multiple child updates without interference (83ms)\r\n    createOpenTagMarkup\r\n      ✓ should generate the correct markup with className (85ms)\r\n      ✓ should escape style names and values (70ms)\r\n    createContentMarkup\r\n      ✓ should handle dangerouslySetInnerHTML (66ms)\r\n    mountComponent\r\n      ✓ should work error event on <source> element (84ms)\r\n      ✓ should not duplicate uppercased selfclosing tags (78ms)\r\n      ✓ should warn on upper case HTML tags, not SVG nor custom tags (83ms)\r\n      ✓ should warn on props reserved for future use (86ms)\r\n      ✓ should warn if the tag is unrecognized (98ms)\r\n      ✓ should throw on children for void elements (145ms)\r\n      ✓ should throw on dangerouslySetInnerHTML for void elements (80ms)\r\n      ✓ should treat menuitem as a void element but still create the closing tag (84ms)\r\n      ✓ should validate against multiple children props (86ms)\r\n      ✓ should validate against use of innerHTML (86ms)\r\n      ✓ should validate against use of innerHTML without case sensitivity (82ms)\r\n      ✓ should validate use of dangerouslySetInnerHTML (80ms)\r\n      ✓ should validate use of dangerouslySetInnerHTML (79ms)\r\n      ✓ should allow {__html: null} (84ms)\r\n      ✓ should warn about contentEditable and children (86ms)\r\n      ✓ should respect suppressContentEditableWarning (81ms)\r\n      ✓ should validate against invalid styles (85ms)\r\n      ✓ should throw for children on void elements (85ms)\r\n      ✓ should support custom elements which extend native elements (78ms)\r\n      ✓ should work load and error events on <image> element in SVG (81ms)\r\n      ✓ should receive a load event on <link> elements (92ms)\r\n      ✓ should receive an error event on <link> elements (82ms)\r\n    updateComponent\r\n      ✓ should warn against children for void elements (84ms)\r\n      ✓ should warn against dangerouslySetInnerHTML for void elements (89ms)\r\n      ✓ should validate against multiple children props (82ms)\r\n      ✓ should warn about contentEditable and children (79ms)\r\n      ✓ should validate against invalid styles (89ms)\r\n      ✓ should report component containing invalid styles (91ms)\r\n      ✓ should properly escape text content and attributes values (66ms)\r\n    unmountComponent\r\n      ✓ unmounts children before unsetting DOM node info (80ms)\r\n    tag sanitization\r\n      ✓ should throw when an invalid tag name is used server-side (79ms)\r\n      ✓ should throw when an attack vector is used server-side (64ms)\r\n      ✓ should throw when an invalid tag name is used (78ms)\r\n      ✓ should throw when an attack vector is used (86ms)\r\n    nesting validation\r\n      ✓ warns on invalid nesting (86ms)\r\n      ✓ warns on invalid nesting at root (78ms)\r\n      ✓ warns nicely for table rows (86ms)\r\n      ✓ gives useful context in warnings (85ms)\r\n      ✓ gives useful context in warnings 2 (84ms)\r\n      ✓ gives useful context in warnings 3 (96ms)\r\n      ✓ gives useful context in warnings 4 (86ms)\r\n      ✓ gives useful context in warnings 5 (88ms)\r\n      ✓ should warn about incorrect casing on properties (ssr) (70ms)\r\n      ✓ should warn about incorrect casing on event handlers (ssr) (75ms)\r\n      ✓ should warn about incorrect casing on properties (79ms)\r\n      ✓ should warn about incorrect casing on event handlers (91ms)\r\n      ✓ should warn about class (78ms)\r\n      ✓ should warn about class (ssr) (72ms)\r\n      ✓ should warn about props that are no longer supported (81ms)\r\n      ✓ should warn about props that are no longer supported without case sensitivity (81ms)\r\n      ✓ should warn about props that are no longer supported (ssr) (73ms)\r\n      ✓ should warn about props that are no longer supported without case sensitivity (ssr) (74ms)\r\n      ✓ gives source code refs for unknown prop warning (85ms)\r\n      ✓ gives source code refs for unknown prop warning (ssr) (74ms)\r\n      ✓ gives source code refs for unknown prop warning for update render (81ms)\r\n      ✓ gives source code refs for unknown prop warning for exact elements (82ms)\r\n      ✓ gives source code refs for unknown prop warning for exact elements (ssr) (69ms)\r\n      ✓ gives source code refs for unknown prop warning for exact elements in composition (102ms)\r\n      ✓ gives source code refs for unknown prop warning for exact elements in composition (ssr) (77ms)\r\n      ✓ should suggest property name if available (82ms)\r\n      ✓ should suggest property name if available (ssr) (74ms)\r\n    whitespace\r\n      ✓ renders innerHTML and preserves whitespace (80ms)\r\n      ✓ render and then updates innerHTML and preserves whitespace (83ms)\r\n    Attributes with aliases\r\n      ✓ sets aliased attributes on HTML attributes (92ms)\r\n      ✓ sets incorrectly cased aliased attributes on HTML attributes with a warning (83ms)\r\n      ✓ sets aliased attributes on SVG elements with a warning (87ms)\r\n      ✓ sets aliased attributes on custom elements (78ms)\r\n      ✓ aliased attributes on custom elements with bad casing (83ms)\r\n      ✓ updates aliased attributes on custom elements (80ms)\r\n    Custom attributes\r\n      ✓ allows assignment of custom attributes with string values (83ms)\r\n      ✓ removes custom attributes (91ms)\r\n      ✓ does not assign a boolean custom attributes as a string (80ms)\r\n      ✓ does not assign an implicit boolean custom attributes (83ms)\r\n      ✓ assigns a numeric custom attributes as a string (78ms)\r\n      ✓ will not assign a function custom attributes (86ms)\r\n      ✓ will assign an object custom attributes (84ms)\r\n      ✓ allows cased data attributes (83ms)\r\n      ✓ allows cased custom attributes (79ms)\r\n      ✓ warns on NaN attributes (85ms)\r\n      ✓ removes a property when it becomes invalid (81ms)\r\n      ✓ warns on bad casing of known HTML attributes (80ms)\r\n    Object stringification\r\n      ✓ allows objects on known properties (90ms)\r\n      ✓ should pass objects as attributes if they define toString (88ms)\r\n      ✓ passes objects on known SVG attributes if they do not define toString (78ms)\r\n      ✓ passes objects on custom attributes if they do not define toString (77ms)\r\n      ✓ allows objects that inherit a custom toString method (83ms)\r\n      ✓ assigns ajaxify (an important internal FB attribute) (78ms)\r\n    String boolean attributes\r\n      ✓ does not assign string boolean attributes for custom attributes (79ms)\r\n      ✓ stringifies the boolean true for allowed attributes (87ms)\r\n      ✓ stringifies the boolean false for allowed attributes (84ms)\r\n      ✓ stringifies implicit booleans for allowed attributes (76ms)\r\n    Boolean attributes\r\n      ✓ warns on the ambiguous string value \"false\" (79ms)\r\n      ✓ warns on the potentially-ambiguous string value \"true\" (90ms)\r\n    Hyphenated SVG elements\r\n      ✓ the font-face element is not a custom element (81ms)\r\n      ✓ the font-face element does not allow unknown boolean values (89ms)\r\n    Custom elements\r\n      ✓ does not strip unknown boolean attributes (81ms)\r\n      ✓ does not strip the on* attributes (86ms)\r\n    iOS Tap Highlight\r\n      ✓ adds onclick handler to elements with onClick prop (78ms)\r\n      ✓ adds onclick handler to a portal root (79ms)\r\n      ✓ does not add onclick handler to the React root (97ms)\r\n\r\nTest Suites: 1 passed, 1 total\r\nTests:       153 passed, 153 total\r\nSnapshots:   0 total\r\nTime:        16.557s\r\nRan all test suites matching /ReactDOMComponent-test.js/i.\r\nDone in 18.45s.\r\n\r\n```\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19950","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19950/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19950/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19950/events","html_url":"https://github.com/facebook/react/issues/19950","id":714002414,"node_id":"MDU6SXNzdWU3MTQwMDI0MTQ=","number":19950,"title":"Bug: React 17 dev mode too slow EVENTS","user":{"login":"joacub","id":2091228,"node_id":"MDQ6VXNlcjIwOTEyMjg=","avatar_url":"https://avatars0.githubusercontent.com/u/2091228?v=4","gravatar_id":"","url":"https://api.github.com/users/joacub","html_url":"https://github.com/joacub","followers_url":"https://api.github.com/users/joacub/followers","following_url":"https://api.github.com/users/joacub/following{/other_user}","gists_url":"https://api.github.com/users/joacub/gists{/gist_id}","starred_url":"https://api.github.com/users/joacub/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joacub/subscriptions","organizations_url":"https://api.github.com/users/joacub/orgs","repos_url":"https://api.github.com/users/joacub/repos","events_url":"https://api.github.com/users/joacub/events{/privacy}","received_events_url":"https://api.github.com/users/joacub/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-03T04:34:48Z","updated_at":"2020-10-03T04:34:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"React version: 17.0.0.rc2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Install in dev mode\r\n2. all events, click, onBlur all of them are too slowly every time you click in a input or something freeze the browser\r\n\r\nAnd even more if you open the chrome dev tools or others becomes more slow\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19948","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19948/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19948/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19948/events","html_url":"https://github.com/facebook/react/issues/19948","id":713866569,"node_id":"MDU6SXNzdWU3MTM4NjY1Njk=","number":19948,"title":"Bug: unstable_useMutableSource throws error when mutated before subscribe","user":{"login":"SreeniIO","id":8140606,"node_id":"MDQ6VXNlcjgxNDA2MDY=","avatar_url":"https://avatars2.githubusercontent.com/u/8140606?v=4","gravatar_id":"","url":"https://api.github.com/users/SreeniIO","html_url":"https://github.com/SreeniIO","followers_url":"https://api.github.com/users/SreeniIO/followers","following_url":"https://api.github.com/users/SreeniIO/following{/other_user}","gists_url":"https://api.github.com/users/SreeniIO/gists{/gist_id}","starred_url":"https://api.github.com/users/SreeniIO/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SreeniIO/subscriptions","organizations_url":"https://api.github.com/users/SreeniIO/orgs","repos_url":"https://api.github.com/users/SreeniIO/repos","events_url":"https://api.github.com/users/SreeniIO/events{/privacy}","received_events_url":"https://api.github.com/users/SreeniIO/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"assignees":[{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2020-10-02T19:53:35Z","updated_at":"2020-10-02T19:59:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"React version: 0.0.0-experimental-94c0244ba\r\n\r\n## Steps To Reproduce\r\n\r\nMutating the external source during the initial render before subscribe throws error. \r\n\r\nhttps://codesandbox.io/s/usemutablesource-7nbs6?file=/src/App.js\r\n\r\n![image](https://user-images.githubusercontent.com/8140606/94963407-f7033280-04ac-11eb-9cf7-e00c6630f55e.png)\r\n\r\n1. Navigate to the above code sandbox\r\n2. Click on the Mutate button. Final Value is rendered without any error. (Success Mode)\r\n3. Toggle to Error Mode and click on the Mutate button again.\r\n4. Error thrown (and the UI is rendered with the Final Value when run from vscode)\r\n\r\n> Note: In our actual codebase (private), we are seeing this error at different instances e.g. component getting updated due to `setState` call in `useLayoutEffect` etc.\r\n\r\n## The current behavior\r\n\r\nSeeing errors in development build.\r\n\r\n![image](https://user-images.githubusercontent.com/8140606/94962796-e3a39780-04ab-11eb-82d9-b24e4eaa5cc1.png)\r\n\r\n## The expected behavior\r\n\r\nThese errors thrown by useMutableSource should not showup on the UI and not passed to the error boundary as the component is eventually re-rendered with the latest state without any error.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19947","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19947/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19947/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19947/events","html_url":"https://github.com/facebook/react/issues/19947","id":713865839,"node_id":"MDU6SXNzdWU3MTM4NjU4Mzk=","number":19947,"title":"Suggested code cleanup: Update all old https://facebook.github.io and https://github.com/facebookincubator/create-react-app links","user":{"login":"sktguha","id":8387608,"node_id":"MDQ6VXNlcjgzODc2MDg=","avatar_url":"https://avatars3.githubusercontent.com/u/8387608?v=4","gravatar_id":"","url":"https://api.github.com/users/sktguha","html_url":"https://github.com/sktguha","followers_url":"https://api.github.com/users/sktguha/followers","following_url":"https://api.github.com/users/sktguha/following{/other_user}","gists_url":"https://api.github.com/users/sktguha/gists{/gist_id}","starred_url":"https://api.github.com/users/sktguha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sktguha/subscriptions","organizations_url":"https://api.github.com/users/sktguha/orgs","repos_url":"https://api.github.com/users/sktguha/repos","events_url":"https://api.github.com/users/sktguha/events{/privacy}","received_events_url":"https://api.github.com/users/sktguha/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-10-02T19:52:07Z","updated_at":"2020-10-03T16:34:26Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"So I suggest replacing the links to https://facebook.github.io and https://github.com/facebookincubator/create-react-app with the correct updated links. \r\nYes I understand that redirects are setup properly, so there is no broken links but still it is much cleaner if they had the updated links. For example seeing the old link, a person might go to https://github.com/facebookincubator to find some other important projects there, but of course the important projects like flow type checker etc, are at https://github.com/facebook instead\r\n\r\nI think atleast for some places like Readme(these old links are there in some Readme files) it should definitely be done, if not all places\r\nIf so, I **want to volunteer** for this effort. Please assign this issue to me in that case\r\n\r\nHere is a search for these two links in the codebase: \r\nhttps://github.com/facebook/react/search?q=https%3A%2F%2Fgithub.com%2Ffacebookincubator%2Fcreate-react-app\r\nhttps://github.com/facebook/react/search?q=%22facebook.github.io%22","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19940","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19940/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19940/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19940/events","html_url":"https://github.com/facebook/react/issues/19940","id":712664425,"node_id":"MDU6SXNzdWU3MTI2NjQ0MjU=","number":19940,"title":"Bug: eslint-plugin-react-hooks (4.1.2) - The prop value with an expression type of ChainExpression could not be resolved","user":{"login":"LauraBeatris","id":48022589,"node_id":"MDQ6VXNlcjQ4MDIyNTg5","avatar_url":"https://avatars2.githubusercontent.com/u/48022589?v=4","gravatar_id":"","url":"https://api.github.com/users/LauraBeatris","html_url":"https://github.com/LauraBeatris","followers_url":"https://api.github.com/users/LauraBeatris/followers","following_url":"https://api.github.com/users/LauraBeatris/following{/other_user}","gists_url":"https://api.github.com/users/LauraBeatris/gists{/gist_id}","starred_url":"https://api.github.com/users/LauraBeatris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LauraBeatris/subscriptions","organizations_url":"https://api.github.com/users/LauraBeatris/orgs","repos_url":"https://api.github.com/users/LauraBeatris/repos","events_url":"https://api.github.com/users/LauraBeatris/events{/privacy}","received_events_url":"https://api.github.com/users/LauraBeatris/received_events","type":"User","site_admin":false},"labels":[{"id":1249821345,"node_id":"MDU6TGFiZWwxMjQ5ODIxMzQ1","url":"https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules","name":"Component: ESLint Rules","color":"f7afdb","default":false,"description":""},{"id":620368407,"node_id":"MDU6TGFiZWw2MjAzNjg0MDc=","url":"https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information","name":"Resolution: Needs More Information","color":"fffde7","default":false,"description":null},{"id":710722093,"node_id":"MDU6TGFiZWw3MTA3MjIwOTM=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation","name":"Type: Needs Investigation","color":"fbca04","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-10-01T09:24:59Z","updated_at":"2020-10-01T16:06:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: ^16.10.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. Install ``eslint-plugin-react-hooks@4.1.2`` \r\n2. Run ``yarn eslint src --ext=js,jsx,ts,tsx`` \r\n\r\nRelated issue: https://github.com/facebook/react/issues/19810#issuecomment-698470876\r\n\r\n## The current behavior\r\n\r\nThe linter is showing the following message:\r\n\r\n```\r\nThe prop value with an expression type of ChainExpression could not be resolved. Please file issue to get this fixed immediately.\r\n```\r\n\r\nIt started to appear on ``eslint-plugin-react-hooks@4.1.2`` \r\n\r\n## The expected behavior\r\n\r\nDo not show the message\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19932","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19932/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19932/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19932/events","html_url":"https://github.com/facebook/react/issues/19932","id":712135110,"node_id":"MDU6SXNzdWU3MTIxMzUxMTA=","number":19932,"title":"Better support <template> tags","user":{"login":"manuel-mauky","id":328387,"node_id":"MDQ6VXNlcjMyODM4Nw==","avatar_url":"https://avatars3.githubusercontent.com/u/328387?v=4","gravatar_id":"","url":"https://api.github.com/users/manuel-mauky","html_url":"https://github.com/manuel-mauky","followers_url":"https://api.github.com/users/manuel-mauky/followers","following_url":"https://api.github.com/users/manuel-mauky/following{/other_user}","gists_url":"https://api.github.com/users/manuel-mauky/gists{/gist_id}","starred_url":"https://api.github.com/users/manuel-mauky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manuel-mauky/subscriptions","organizations_url":"https://api.github.com/users/manuel-mauky/orgs","repos_url":"https://api.github.com/users/manuel-mauky/repos","events_url":"https://api.github.com/users/manuel-mauky/events{/privacy}","received_events_url":"https://api.github.com/users/manuel-mauky/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-30T17:26:16Z","updated_at":"2020-09-30T17:26:16Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"HTML [`<template>` tag]() is used to pass reusable templates to web components.\r\nHowever, at the moment this doesn't work with React in a way that is useful to users.\r\n\r\n### Context: Basic usage of `<template>`\r\n\r\n\r\nIf you have HTML like this:\r\n\r\n```html\r\n<template>\r\n\t<p>Some Text</p>\r\n</template>\r\n```\r\n\r\nYou can then use this template with pure JS like this:\r\n\r\n```js\r\nconst template = document.querySelector(\"template\")\r\n\r\nconst node = template.content.cloneNode(true)\r\n\r\ndocument.append(node)\r\n```\r\nThe important part here is the `content` property of the template.\r\n\r\n### Whats the problem?\r\n\r\nWriting the template code in HTML is OK. However, if you create the template DOM nodes with JS like this, it won't work:\r\n\r\n```js\r\nconst template = document.createElement(\"template\")\r\nconst p = document.createElement(\"p\")\r\np.textContent = \"Some Text\"\r\ntemplate.appendChild(p)\r\n```\r\n\r\nIn this case, the `content` property of the template will be empty. Instead, one would have to do either of these:\r\n\r\n```js\r\nconst template = document.createElement(\"template\")\r\ntemplate.innerHTML = \"<p>Some Text</p>\"\r\n```\r\n\r\nor\r\n\r\n```js\r\nconst template = document.createElement(\"template\")\r\nconst p = document.createElement(\"p\")\r\np.textContent = \"Some Text\"\r\ntemplate.content.appendChild(p) // notice `content`\r\n```\r\n\r\nThe first does work because there is a special case in `innerHTML` for template tags (see [mdn](https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML#Operational_details)).\r\nThe second example works because the `<p>` DOM node is added directly to the `content` of the template.\r\n\r\n### What does this has to do with React?\r\n\r\nWhen using React to create the template, React is appending the generated DOM nodes directly to the template node and not to the `content` property of the template node. For this reason at the moment you can't really use template tags in React apps.\r\n\r\nI have the impression that this is not the fault of React as the same problem exists for angular and most likely other spa frameworks too. Instead this looks like a misconception of the `template` tag to me (mayby I'm wrong on this and there is a good reason for this behavior). \r\nHowever, maybe React could do something to make this usecase less anoying? A possible solution could be to detect if the parent node is a `template` and to add the child nodes to the `content` property instead of the node itself. But I'm not sure if there would be any negative side-effects of this.\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19927","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19927/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19927/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19927/events","html_url":"https://github.com/facebook/react/issues/19927","id":711586723,"node_id":"MDU6SXNzdWU3MTE1ODY3MjM=","number":19927,"title":"Error: \"Cannot read property 'isCollapsed' of undefined\"","user":{"login":"jellydn","id":870029,"node_id":"MDQ6VXNlcjg3MDAyOQ==","avatar_url":"https://avatars0.githubusercontent.com/u/870029?v=4","gravatar_id":"","url":"https://api.github.com/users/jellydn","html_url":"https://github.com/jellydn","followers_url":"https://api.github.com/users/jellydn/followers","following_url":"https://api.github.com/users/jellydn/following{/other_user}","gists_url":"https://api.github.com/users/jellydn/gists{/gist_id}","starred_url":"https://api.github.com/users/jellydn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jellydn/subscriptions","organizations_url":"https://api.github.com/users/jellydn/orgs","repos_url":"https://api.github.com/users/jellydn/repos","events_url":"https://api.github.com/users/jellydn/events{/privacy}","received_events_url":"https://api.github.com/users/jellydn/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":710722093,"node_id":"MDU6TGFiZWw3MTA3MjIwOTM=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation","name":"Type: Needs Investigation","color":"fbca04","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-30T02:34:29Z","updated_at":"2020-09-30T07:14:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Describe what you were doing when the bug occurred:\r\n1. Open React Devtool\r\n2. Select the Component tab\r\n3. Got below error\r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.8.2-fed4ae024\r\n\r\nCall stack: at Store.getElementAtIndex (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:19359:35)\r\n    at Store.getElementIDAtIndex (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:19376:26)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26594:18\r\n    at List.render (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:21229:18)\r\n    at li (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11802:76)\r\n    at ki (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11793:10)\r\n    at ck (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:14433:86)\r\n    at bk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13779:11)\r\n    at ak (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13768:5)\r\n    at Sj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13750:7)\r\n\r\nComponent stack: at List (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:20924:30)\r\n    at div\r\n    at AutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:2786:5)\r\n    at div\r\n    at div\r\n    at Tree_Tree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26368:45)\r\n    at div\r\n    at div\r\n    at InspectedElementContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26848:23)\r\n    at OwnersListContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25520:23)\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26139:23)\r\n    at Components_Components (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30926:50)\r\n    at ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27172:5)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27303:32)\r\n    at div\r\n    at div\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30463:23)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:22538:23)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:23040:27)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28328:23)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33797:21)","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19925","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19925/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19925/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19925/events","html_url":"https://github.com/facebook/react/issues/19925","id":711470380,"node_id":"MDU6SXNzdWU3MTE0NzAzODA=","number":19925,"title":"Bug: useDeferredValue with a value that is new every render hangs browser","user":{"login":"chriserickson","id":1971519,"node_id":"MDQ6VXNlcjE5NzE1MTk=","avatar_url":"https://avatars1.githubusercontent.com/u/1971519?v=4","gravatar_id":"","url":"https://api.github.com/users/chriserickson","html_url":"https://github.com/chriserickson","followers_url":"https://api.github.com/users/chriserickson/followers","following_url":"https://api.github.com/users/chriserickson/following{/other_user}","gists_url":"https://api.github.com/users/chriserickson/gists{/gist_id}","starred_url":"https://api.github.com/users/chriserickson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chriserickson/subscriptions","organizations_url":"https://api.github.com/users/chriserickson/orgs","repos_url":"https://api.github.com/users/chriserickson/repos","events_url":"https://api.github.com/users/chriserickson/events{/privacy}","received_events_url":"https://api.github.com/users/chriserickson/received_events","type":"User","site_admin":false},"labels":[{"id":1205087127,"node_id":"MDU6TGFiZWwxMjA1MDg3MTI3","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Concurrent%20Mode","name":"Component: Concurrent Mode","color":"ffccd3","default":false,"description":""},{"id":710722093,"node_id":"MDU6TGFiZWw3MTA3MjIwOTM=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation","name":"Type: Needs Investigation","color":"fbca04","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-29T21:40:54Z","updated_at":"2020-09-30T14:38:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"React version: 0.0.0-experimental-94c0244ba\r\n\r\n## Steps To Reproduce\r\n\r\nAttempt to load the following component:\r\n```jsx\r\nexport default function Component() {\r\n  const value = { something: \"I'm new every render\" };\r\n  const deferredValue = React.unstable_useDeferredValue(value, {\r\n     timeoutMs: 3000\r\n  });\r\n  console.log(\"Component render\");\r\n  return (\r\n    <div>{deferredValue}</div>\r\n  );\r\n}\r\n```\r\n\r\nThe above (buggy) component will peg the CPU and hang the browser. While this is understandable (there are theoretically infinite concurrent trees), it is an easy pitfall for someone to fall into.\r\n\r\nNot sure if this could be identified by a console warning or lint rule.\r\n\r\n## The current behavior\r\nBrowser hangs.\r\n\r\n## The expected behavior\r\nA lint rule informs me of my error or the console warns me that the deferred value changes every render.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19921","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19921/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19921/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19921/events","html_url":"https://github.com/facebook/react/issues/19921","id":710712191,"node_id":"MDU6SXNzdWU3MTA3MTIxOTE=","number":19921,"title":"Bug: shallowEqual() is flawed","user":{"login":"Salmatron","id":337125,"node_id":"MDQ6VXNlcjMzNzEyNQ==","avatar_url":"https://avatars3.githubusercontent.com/u/337125?v=4","gravatar_id":"","url":"https://api.github.com/users/Salmatron","html_url":"https://github.com/Salmatron","followers_url":"https://api.github.com/users/Salmatron/followers","following_url":"https://api.github.com/users/Salmatron/following{/other_user}","gists_url":"https://api.github.com/users/Salmatron/gists{/gist_id}","starred_url":"https://api.github.com/users/Salmatron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Salmatron/subscriptions","organizations_url":"https://api.github.com/users/Salmatron/orgs","repos_url":"https://api.github.com/users/Salmatron/repos","events_url":"https://api.github.com/users/Salmatron/events{/privacy}","received_events_url":"https://api.github.com/users/Salmatron/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-29T03:02:42Z","updated_at":"2020-09-30T20:44:30Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The `shallowEqual()` function located in `packages/shared/shallowEqual.js` is incorrectly using `Object.prototype.hasOwnProperty()` instead of `Object.prototype.propertyIsEnumerable()`, which is the correct counterpart for `Object.keys()`. \r\n\r\nExplanation:\r\n------------\r\nThe `Object.keys()` method used inside `shallowEqual()` returns an array of a given object's own enumerable property names. But `hasOwnProperty.call(...)` (used in the `for` loop titled `Test for A's keys different from B`), checks only one of those things: ownership. Which causes the bug pointed out below. `Object.prototype.propertyIsEnumerable()` must be used instead which checks both direct ownership and enumerable-ity.\r\n\r\nReact version: v16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n```\r\nconst person = {\r\n  name: 'Salman',\r\n  age: 25,\r\n};\r\n\r\nconst personWithProfession = {\r\n  name: 'Salman',\r\n  profession: 'Software Engineer', // This property goes undetected by shallowEqual()\r\n};\r\n\r\n// Add age\r\nObject.defineProperty(personWithProfession, 'age', {\r\n  value: 25, // non-enumerable by default\r\n});\r\n\r\nconst keysA = Object.keys(person);\r\nconst keysB = Object.keys(personWithProfession);\r\n\r\nconsole.log(keysA); // name,age\r\nconsole.log(keysB); // name,profession\r\n\r\nconsole.log(keysA.length === keysB.length); // true // Passes the length check\r\n```\r\n\r\nLink to code example with a demonstration and fixed version:\r\n[https://codesandbox.io/s/infallible-keldysh-r98gl?file=/src/index.js](https://codesandbox.io/s/infallible-keldysh-r98gl?file=/src/index.js)\r\n\r\n## The current behavior\r\n```\r\nshallowEqual(person, personWithProfession) // true\r\n```\r\n\r\n## The expected behavior\r\n```\r\nshallowEqual(person, personWithProfession) // false\r\n```\r\n\r\n## The fix\r\nReplace\r\n`!hasOwnProperty.call(objB, keysA[i])`\r\nwith:\r\n`!propertyIsEnumerable.call(objB, keysA[i])`","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19920","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19920/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19920/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19920/events","html_url":"https://github.com/facebook/react/pull/19920","id":710581044,"node_id":"MDExOlB1bGxSZXF1ZXN0NDk0NDA0NjY3","number":19920,"title":"Update jest to v26 along with packages related to it","user":{"login":"abnud1","id":12657077,"node_id":"MDQ6VXNlcjEyNjU3MDc3","avatar_url":"https://avatars3.githubusercontent.com/u/12657077?v=4","gravatar_id":"","url":"https://api.github.com/users/abnud1","html_url":"https://github.com/abnud1","followers_url":"https://api.github.com/users/abnud1/followers","following_url":"https://api.github.com/users/abnud1/following{/other_user}","gists_url":"https://api.github.com/users/abnud1/gists{/gist_id}","starred_url":"https://api.github.com/users/abnud1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abnud1/subscriptions","organizations_url":"https://api.github.com/users/abnud1/orgs","repos_url":"https://api.github.com/users/abnud1/repos","events_url":"https://api.github.com/users/abnud1/events{/privacy}","received_events_url":"https://api.github.com/users/abnud1/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-09-28T21:11:43Z","updated_at":"2020-10-02T15:22:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19920","html_url":"https://github.com/facebook/react/pull/19920","diff_url":"https://github.com/facebook/react/pull/19920.diff","patch_url":"https://github.com/facebook/react/pull/19920.patch"},"body":"## Summary\r\nThe only problem is jest-snapshot-serializer-raw, it hasn't been updated for 2 years but tests fail without it and I couldn't find a replacement.\r\n\r\nI see only two options here:\r\n\r\n1. migrate the snapshot tests to another serializer or to jest default serializer.\r\n2. fork jest-snapshot-serializer-raw\r\n\r\n## Test Plan\r\nrun the tests, tests that passed before should not fail after the upgrade, and tests that failed before should fail too\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19918","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19918/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19918/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19918/events","html_url":"https://github.com/facebook/react/pull/19918","id":710445666,"node_id":"MDExOlB1bGxSZXF1ZXN0NDk0MjkzMTc5","number":19918,"title":"Updated rollup to version 2 and also its plugins to the latest version","user":{"login":"abnud1","id":12657077,"node_id":"MDQ6VXNlcjEyNjU3MDc3","avatar_url":"https://avatars3.githubusercontent.com/u/12657077?v=4","gravatar_id":"","url":"https://api.github.com/users/abnud1","html_url":"https://github.com/abnud1","followers_url":"https://api.github.com/users/abnud1/followers","following_url":"https://api.github.com/users/abnud1/following{/other_user}","gists_url":"https://api.github.com/users/abnud1/gists{/gist_id}","starred_url":"https://api.github.com/users/abnud1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abnud1/subscriptions","organizations_url":"https://api.github.com/users/abnud1/orgs","repos_url":"https://api.github.com/users/abnud1/repos","events_url":"https://api.github.com/users/abnud1/events{/privacy}","received_events_url":"https://api.github.com/users/abnud1/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-28T17:21:38Z","updated_at":"2020-09-28T17:29:51Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19918","html_url":"https://github.com/facebook/react/pull/19918","diff_url":"https://github.com/facebook/react/pull/19918.diff","patch_url":"https://github.com/facebook/react/pull/19918.patch"},"body":"## Summary\r\n\r\nI noticed that react is using a rather old version of rollup, so I updated it and updated the plugins to the latest version to ensure they're compatible with the new rollup version\r\n\r\n## Test Plan\r\n\r\nRunning `yarn build` succeeds with the new rollup and all tests pass\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19917","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19917/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19917/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19917/events","html_url":"https://github.com/facebook/react/pull/19917","id":710121046,"node_id":"MDExOlB1bGxSZXF1ZXN0NDk0MDI2MTQ5","number":19917,"title":"Moved createElement, cloneElement & createFactory into the new module","user":{"login":"iscorekin","id":42637271,"node_id":"MDQ6VXNlcjQyNjM3Mjcx","avatar_url":"https://avatars0.githubusercontent.com/u/42637271?v=4","gravatar_id":"","url":"https://api.github.com/users/iscorekin","html_url":"https://github.com/iscorekin","followers_url":"https://api.github.com/users/iscorekin/followers","following_url":"https://api.github.com/users/iscorekin/following{/other_user}","gists_url":"https://api.github.com/users/iscorekin/gists{/gist_id}","starred_url":"https://api.github.com/users/iscorekin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iscorekin/subscriptions","organizations_url":"https://api.github.com/users/iscorekin/orgs","repos_url":"https://api.github.com/users/iscorekin/repos","events_url":"https://api.github.com/users/iscorekin/events{/privacy}","received_events_url":"https://api.github.com/users/iscorekin/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-09-28T09:56:23Z","updated_at":"2020-10-02T14:12:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19917","html_url":"https://github.com/facebook/react/pull/19917","diff_url":"https://github.com/facebook/react/pull/19917.diff","patch_url":"https://github.com/facebook/react/pull/19917.patch"},"body":"## Summary\r\n\r\nThere was 7-month TODO comment. Just moved `__DEV__` branching to independent module and re-exported it. Thereby production build size reduced for 3~ KB.\r\n\r\n## Test Plan\r\n\r\nNo special tests required","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19914","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19914/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19914/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19914/events","html_url":"https://github.com/facebook/react/pull/19914","id":709694638,"node_id":"MDExOlB1bGxSZXF1ZXN0NDkzNjg5MTkx","number":19914,"title":"TypeScript transformer for React Refresh","user":{"login":"Jack-Works","id":5390719,"node_id":"MDQ6VXNlcjUzOTA3MTk=","avatar_url":"https://avatars3.githubusercontent.com/u/5390719?v=4","gravatar_id":"","url":"https://api.github.com/users/Jack-Works","html_url":"https://github.com/Jack-Works","followers_url":"https://api.github.com/users/Jack-Works/followers","following_url":"https://api.github.com/users/Jack-Works/following{/other_user}","gists_url":"https://api.github.com/users/Jack-Works/gists{/gist_id}","starred_url":"https://api.github.com/users/Jack-Works/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jack-Works/subscriptions","organizations_url":"https://api.github.com/users/Jack-Works/orgs","repos_url":"https://api.github.com/users/Jack-Works/repos","events_url":"https://api.github.com/users/Jack-Works/events{/privacy}","received_events_url":"https://api.github.com/users/Jack-Works/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-09-27T08:23:31Z","updated_at":"2020-09-30T23:44:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19914","html_url":"https://github.com/facebook/react/pull/19914","diff_url":"https://github.com/facebook/react/pull/19914.diff","patch_url":"https://github.com/facebook/react/pull/19914.patch"},"body":"# TypeScript transformer for React Refresh\r\n\r\n> Note: If you are using TypeScript (instead of Babel) as a transpiler, you will still need to use babel-loader to process your source code. Check out this sample project on how to set this up.\r\n\r\n-- [React Refresh Webpack Plugin](https://github.com/pmmmwh/react-refresh-webpack-plugin)\r\n\r\nNow it's no longer the case! Here is the TypeScript version of the transformer.\r\n\r\n## Minimal requirement\r\n\r\n-   TypeScript 3.9\r\n\r\n## Example (with ts-loader)\r\n\r\n```js\r\n{\r\n    test: /\\.tsx?$/,\r\n    loader: 'ts-loader',\r\n    exclude: /node_modules/,\r\n    options: {\r\n        getCustomTransformers: () => ({\r\n            before: [require('react-refresh/typescript')()]\r\n        }),\r\n    }\r\n}\r\n```\r\n\r\n## Example (with raw TypeScript transpileModule API)\r\n\r\n```js\r\nimport refresh from 'react-refresh/typescript';\r\nconst out = ts.transpileModule('const App = () => <Something />', {\r\n    compilerOptions: {\r\n        target: ts.ScriptTarget.ESNext,\r\n        jsx: ts.JsxEmit.Preserve,\r\n    },\r\n    fileName: 'test.jsx',\r\n    transformers: {before: [refresh(options)]},\r\n}).outputText,\r\n```\r\n\r\n## Options\r\n\r\n### refreshReg?: string\r\n\r\nSame as the babel version\r\n\r\n### refreshSig?: string\r\n\r\nSame as the babel version\r\n\r\n### emitFullSignatures?: boolean\r\n\r\nSame as the babel version\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19913","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19913/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19913/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19913/events","html_url":"https://github.com/facebook/react/pull/19913","id":709529185,"node_id":"MDExOlB1bGxSZXF1ZXN0NDkzNTcxMDc3","number":19913,"title":"Bug: React Devtools incorrectly updates the setter function of useState hooks","user":{"login":"omarsy","id":15034695,"node_id":"MDQ6VXNlcjE1MDM0Njk1","avatar_url":"https://avatars0.githubusercontent.com/u/15034695?v=4","gravatar_id":"","url":"https://api.github.com/users/omarsy","html_url":"https://github.com/omarsy","followers_url":"https://api.github.com/users/omarsy/followers","following_url":"https://api.github.com/users/omarsy/following{/other_user}","gists_url":"https://api.github.com/users/omarsy/gists{/gist_id}","starred_url":"https://api.github.com/users/omarsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omarsy/subscriptions","organizations_url":"https://api.github.com/users/omarsy/orgs","repos_url":"https://api.github.com/users/omarsy/repos","events_url":"https://api.github.com/users/omarsy/events{/privacy}","received_events_url":"https://api.github.com/users/omarsy/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"assignees":[{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-09-26T12:30:04Z","updated_at":"2020-09-26T14:12:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19913","html_url":"https://github.com/facebook/react/pull/19913","diff_url":"https://github.com/facebook/react/pull/19913.diff","patch_url":"https://github.com/facebook/react/pull/19913.patch"},"body":"<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\nFixes #19114\r\n\r\n## Summary\r\nThe bug is due to the fact that to read the hooks the debug tools use the real object ref. The problem is that if this object is modified by the debug tools it is never cleaned (in our case we created a new function with a dummy setstate). So my fix is to make a shallow copy for the useref case. Maybe we have to do it for all hooks or do a deep copy?\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19912","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19912/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19912/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19912/events","html_url":"https://github.com/facebook/react/pull/19912","id":709511851,"node_id":"MDExOlB1bGxSZXF1ZXN0NDkzNTU4OTA0","number":19912,"title":"Running devtool tests against multiple versions of react","user":{"login":"MoSattler","id":64152453,"node_id":"MDQ6VXNlcjY0MTUyNDUz","avatar_url":"https://avatars2.githubusercontent.com/u/64152453?v=4","gravatar_id":"","url":"https://api.github.com/users/MoSattler","html_url":"https://github.com/MoSattler","followers_url":"https://api.github.com/users/MoSattler/followers","following_url":"https://api.github.com/users/MoSattler/following{/other_user}","gists_url":"https://api.github.com/users/MoSattler/gists{/gist_id}","starred_url":"https://api.github.com/users/MoSattler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MoSattler/subscriptions","organizations_url":"https://api.github.com/users/MoSattler/orgs","repos_url":"https://api.github.com/users/MoSattler/repos","events_url":"https://api.github.com/users/MoSattler/events{/privacy}","received_events_url":"https://api.github.com/users/MoSattler/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-09-26T10:23:24Z","updated_at":"2020-09-26T15:57:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19912","html_url":"https://github.com/facebook/react/pull/19912","diff_url":"https://github.com/facebook/react/pull/19912.diff","patch_url":"https://github.com/facebook/react/pull/19912.patch"},"body":"Trying to fix #19371. I have trouble getting the tests to pass. Some of that might be because of new features, which somehow needs to be gated against, as suggested by @bvaughn. I believe other test failures might be coupling to the newer code, but I am not sure about this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19911","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19911/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19911/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19911/events","html_url":"https://github.com/facebook/react/issues/19911","id":709189210,"node_id":"MDU6SXNzdWU3MDkxODkyMTA=","number":19911,"title":"Bug: devtools Profiler causes unexpected errors","user":{"login":"henryqdineen","id":682132,"node_id":"MDQ6VXNlcjY4MjEzMg==","avatar_url":"https://avatars3.githubusercontent.com/u/682132?v=4","gravatar_id":"","url":"https://api.github.com/users/henryqdineen","html_url":"https://github.com/henryqdineen","followers_url":"https://api.github.com/users/henryqdineen/followers","following_url":"https://api.github.com/users/henryqdineen/following{/other_user}","gists_url":"https://api.github.com/users/henryqdineen/gists{/gist_id}","starred_url":"https://api.github.com/users/henryqdineen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/henryqdineen/subscriptions","organizations_url":"https://api.github.com/users/henryqdineen/orgs","repos_url":"https://api.github.com/users/henryqdineen/repos","events_url":"https://api.github.com/users/henryqdineen/events{/privacy}","received_events_url":"https://api.github.com/users/henryqdineen/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"assignees":[{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-09-25T18:18:33Z","updated_at":"2020-09-28T17:52:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We noticed that our app would behave differently during profiling runs and trigger errors. I'm not totally sure what the underlying issue is but I was able to put together a example app to reproduce. As far as I can tell it has to do with how devtools is overriding `console.warn` and `console.error`. In that case `describeNativeComponentFrame()` will call a function component with no args. This works fine as the error is caught in `describeNativeComponentFrame()` but in it looks like a `useEffect()` that accesses those `props` is still triggered and it does not expect `props` to be undefined. \r\n\r\nI realize that having `props` in the dependencies array of the `useEffect` doesn't really make sense but I still think it probably shouldn't error.\r\n\r\nReact version: 16.13.1\r\nReact devtools version: 4.8.2 \r\n\r\n## Steps To Reproduce\r\n\r\n1. Open link to code example below\r\n2. Click \"Open In New Window\" from the \"Browser\" tab\r\n3. Observe a simple app with only `<h1>Hello World</h1>`\r\n3. Open the React devtools Profiler tab\r\n4. Click \"Reload and start profiling\"\r\n5. Observe an error `Uncaught TypeError: Cannot read property 'foo' of undefined`\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/s/cool-sun-wdrry\r\n\r\n## The current behavior\r\n\r\n![wdrry csb app_](https://user-images.githubusercontent.com/682132/94301311-5b1b7900-ff38-11ea-9c5d-335e2e6f35b9.png)\r\n\r\n## The expected behavior\r\n\r\nThe app should work as it while not profile. It should render a `<h1>Hello World</h1>`\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19910","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19910/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19910/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19910/events","html_url":"https://github.com/facebook/react/issues/19910","id":709137605,"node_id":"MDU6SXNzdWU3MDkxMzc2MDU=","number":19910,"title":"Suggestion: global custom attributes","user":{"login":"jsenaribeiro","id":5367049,"node_id":"MDQ6VXNlcjUzNjcwNDk=","avatar_url":"https://avatars2.githubusercontent.com/u/5367049?v=4","gravatar_id":"","url":"https://api.github.com/users/jsenaribeiro","html_url":"https://github.com/jsenaribeiro","followers_url":"https://api.github.com/users/jsenaribeiro/followers","following_url":"https://api.github.com/users/jsenaribeiro/following{/other_user}","gists_url":"https://api.github.com/users/jsenaribeiro/gists{/gist_id}","starred_url":"https://api.github.com/users/jsenaribeiro/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jsenaribeiro/subscriptions","organizations_url":"https://api.github.com/users/jsenaribeiro/orgs","repos_url":"https://api.github.com/users/jsenaribeiro/repos","events_url":"https://api.github.com/users/jsenaribeiro/events{/privacy}","received_events_url":"https://api.github.com/users/jsenaribeiro/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-25T17:28:43Z","updated_at":"2020-09-25T20:06:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi, \r\n\r\nI would like to suggest this new feature that may be useful: a custom global attribute as a DRY and KISS feature for sharing some repetitive coding or verbose styling. It is a bit familiar to Angular directive concept, but it is more functional and react-like. \r\n\r\n* **alternative 1**: using **@** token in component attribute working as a function injetor\r\n\r\n```jsx\r\nconst glyphIcon = (elm, val) => elm.className = \"glyphicon glyphicon-\" + val + \" icon\";\r\n\r\n<div @glyphIcon=\"ok\" >...</div>\r\n```\r\n\r\n* **alternative 2**: function decorators (not support in ecmascript) would be nice for kebab-case notation\r\n\r\n```jsx\r\n@directive(\"glyph-icon\")\r\nconst glyphIcon = (elm, val) => elm.className = \"glyphicon glyphicon-\" + val + \" icon\";\r\n\r\n<div glyph-icon=\"ok\" >...</div>\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19901","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19901/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19901/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19901/events","html_url":"https://github.com/facebook/react/issues/19901","id":708424556,"node_id":"MDU6SXNzdWU3MDg0MjQ1NTY=","number":19901,"title":"Bug: hydrating fails with nested paragraph and dangerouslySetInnerHTML","user":{"login":"romeovs","id":1250185,"node_id":"MDQ6VXNlcjEyNTAxODU=","avatar_url":"https://avatars0.githubusercontent.com/u/1250185?v=4","gravatar_id":"","url":"https://api.github.com/users/romeovs","html_url":"https://github.com/romeovs","followers_url":"https://api.github.com/users/romeovs/followers","following_url":"https://api.github.com/users/romeovs/following{/other_user}","gists_url":"https://api.github.com/users/romeovs/gists{/gist_id}","starred_url":"https://api.github.com/users/romeovs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/romeovs/subscriptions","organizations_url":"https://api.github.com/users/romeovs/orgs","repos_url":"https://api.github.com/users/romeovs/repos","events_url":"https://api.github.com/users/romeovs/events{/privacy}","received_events_url":"https://api.github.com/users/romeovs/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-24T19:36:39Z","updated_at":"2020-09-24T19:39:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Use the `dangerouslySetInnerHTML` on a `p` element where the `__html` contains a `<p>` tag\r\n2. Server-side render this component and try to hydrate\r\n\r\nLink to code example:\r\n```html\r\n<!doctype html>\r\n<html>\r\n  <head>\r\n    <script crossorigin src=\"https://unpkg.com/react@16/umd/react.development.js\"></script>\r\n    <script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\"></script>\r\n  </head>\r\n  <body>\r\n    <!-- Pretend for an instance that this html was generated on the server by ReactDOM.renderToString() -->\r\n    <div id=\"app\"><p><p>Dope!</p></p></div>\r\n  </body>\r\n  <script>\r\n    function Component() {\r\n      return React.createElement(\"p\", {\r\n        dangerouslySetInnerHTML: { __html: \"<p>Dope!</p>\" },\r\n      })\r\n    }\r\n    const component = React.createElement(Component)\r\n    const root = document.getElementById(\"app\")\r\n    ReactDOM.hydrate(component, root)\r\n  </script>\r\n</html>\r\n```\r\n\r\nJSFiddles:\r\n- This one breaks because it has nesting `p`:  https://jsfiddle.net/mw19p0g3/\r\n- This one works because the wrapper is `div` instead of `p`: https://jsfiddle.net/mw19p0g3/2/\r\n- This one works too because there no nesting `p` in the html: https://jsfiddle.net/mw19p0g3/3/\r\n\r\n## The current behaviour\r\nThe `ReactDOM.hydrate` throws a cryptic error:\r\n```\r\nWarning: Prop `dangerouslySetInnerHTML` did not match. Server: \"\" Client: \"<p>Dope!</p>\"\r\n```\r\nNote the missing `Server: \"\"` string.\r\n\r\n## The expected behavior\r\nDo not throw an error and just hydrate the component as expected.\r\n\r\nI realise that nesting `p` elements does not conform to the [HTML spec for the p element](https://www.w3.org/TR/html401/struct/text.html#h-9.3.1).\r\nIf React chooses not to support the use case of nesting `p` tags through `dangerouslySetInnerHTML`, that's understandable. \r\nIn that case the error should be more descriptive and there should probably also be an error or warning while performing the server side render. \r\nIt should also be documenting somewhere that will easily show up in Google.\r\n\r\nThe current behaviour is very confusing and it took me a while to track down what was going on.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19898","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19898/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19898/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19898/events","html_url":"https://github.com/facebook/react/issues/19898","id":708164279,"node_id":"MDU6SXNzdWU3MDgxNjQyNzk=","number":19898,"title":"Bug: Cannot npm-link other project","user":{"login":"gopoqosntjbfhjjezh","id":71828961,"node_id":"MDQ6VXNlcjcxODI4OTYx","avatar_url":"https://avatars2.githubusercontent.com/u/71828961?v=4","gravatar_id":"","url":"https://api.github.com/users/gopoqosntjbfhjjezh","html_url":"https://github.com/gopoqosntjbfhjjezh","followers_url":"https://api.github.com/users/gopoqosntjbfhjjezh/followers","following_url":"https://api.github.com/users/gopoqosntjbfhjjezh/following{/other_user}","gists_url":"https://api.github.com/users/gopoqosntjbfhjjezh/gists{/gist_id}","starred_url":"https://api.github.com/users/gopoqosntjbfhjjezh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gopoqosntjbfhjjezh/subscriptions","organizations_url":"https://api.github.com/users/gopoqosntjbfhjjezh/orgs","repos_url":"https://api.github.com/users/gopoqosntjbfhjjezh/repos","events_url":"https://api.github.com/users/gopoqosntjbfhjjezh/events{/privacy}","received_events_url":"https://api.github.com/users/gopoqosntjbfhjjezh/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-24T13:18:34Z","updated_at":"2020-09-24T17:01:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I'm not sure its a bug, but I am running out of ideas. \r\n\r\nI'm trying to import a self-written module.\r\n\r\nReact version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\nI have the following setup\r\n\r\n```\r\nmyRoot\r\n  |-- t-lib\r\n  |        |-- src\r\n  |        |-- config-overwrides.js   (I'm using react-app-rewired, but I think it's not relevant)\r\n  |        |-- package.json\r\n  |        |-- ... other stuff\r\n  |-- t-consumer\r\n  |        |-- src\r\n  |        |-- package.json\r\n  |        |-- ... other stuff\r\n```\r\n\r\nInside t-lib/package.json I have `name: 't-lib'`.\r\n\r\nSo, while in the folder of `t-consumer` I did:\r\n```\r\nnpm link ../t-lib\r\n```\r\n\r\nAnd in the t-consumer/src/App.js, I wrote `import myLib from 't-lib'` \r\n\r\nWhat I get is \r\n\r\n```\r\nSyntaxError: C:\\Users\\...\\t-lib\\src\\index.js: Support for the experimental syntax 'jsx' isn't currently enabled (7:3):\r\n\r\n   5 | function MountApp(element) {\r\n   6 |  ReactDOM.render(\r\n>  7 |          <React.StrictMode>\r\n     |          ^\r\n   8 |                  <App />\r\n   9 |          </React.StrictMode>,\r\n  10 |          element\r\n\r\nAdd @babel/plugin-transform-react-jsx (https://git.io/vb4yd) to the 'plugins' section of your Babel config to enable transformation.\r\n\r\n\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! t-consumer@0.1.0 build: `react-app-rewired build`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the t-consumer@0.1.0 build script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in: ...\r\n```\r\n\r\n## The current behavior\r\nI get the error metioned above.\r\n\r\nI would like to note, that the error occures in the t-lib/src/index.js, not in the t-consumer project. So appearently the setup is correct, just babel gets confused somehow about the jsx.\r\n\r\n## The expected behavior\r\nI would like it to actually build the project, or possibly a hint, on which settings I have done wrong.\r\n\r\n## Code\r\n\r\nIn case it's needed, here is the code: (both projects are basicly the same, and just trying to get it to work)\r\n\r\n\r\n### public/index.html\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\t<head>\r\n\t\t<meta charset=\"utf-8\" />\r\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n\t\t<meta name=\"theme-color\" content=\"#000000\" />\r\n\t\t<meta\r\n\t\t\tname=\"description\"\r\n\t\t\tcontent=\"Web site created using create-react-app\"\r\n\t\t/>\r\n\t\t<title>React App</title>\r\n\t</head>\r\n\t<body>\r\n\t\t<noscript>You need to enable JavaScript to run this app.</noscript>\r\n\t\t<div id=\"root\"></div>\r\n\t\t<script>\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// I know this is bad practice, it's just a proof of concept to get a library to work.\r\n\t\t\t\tconst element = document.getElementById('root');\r\n\t\t\t\ttestConsumer.MountApp(element);\r\n\t\t\t}, 1000);\r\n\t\t</script>\r\n\t</body>\r\n</html>\r\n```\r\n\r\n### src/App.js\r\n```\r\nimport React from 'react';\r\nimport myLib from 't-lib';  // only in the consumer\r\n\r\nfunction App() {\r\n\tconsole.log(myLib);\r\n\treturn <div>consumer</div>;\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n### src/index.js\r\n```\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nfunction MountApp(element) {\r\n\tReactDOM.render(\r\n\t\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t\t</React.StrictMode>,\r\n\t\telement\r\n\t);\r\n}\r\n\r\nexport { MountApp };\r\n```\r\n\r\n### config-overrides.js\r\n```\r\nconst path = require('path');\r\n\r\nmodule.exports = {\r\n\twebpack: function (config, env) {\r\n\t\tconfig.output.filename = 'static/js/[name].js';\r\n\t\tconfig.output.chunkFilename = 'static/js/[name].chunk.js';\r\n\t\tconfig.output.library = 'testConsumer';\r\n\t\treturn config;\r\n\t},\r\n\tpaths: function (paths, env) {\r\n\t\t// ...add your paths config\r\n\t\tpaths.appBuild = path.resolve(\r\n\t\t\tpath.join('..', '..', 'MyWebpage', 't-consumer')\r\n\t\t);\r\n\r\n\t\treturn paths;\r\n\t}\r\n};\r\n```\r\n\r\n### package.json\r\n```\r\n{\r\n\t\"name\": \"t-consumer\",\r\n\t\"version\": \"0.1.0\",\r\n\t\"private\": true,\r\n\t\"dependencies\": {\r\n\t\t\"@testing-library/jest-dom\": \"^4.2.4\",\r\n\t\t\"@testing-library/react\": \"^9.5.0\",\r\n\t\t\"@testing-library/user-event\": \"^7.2.1\",\r\n\t\t\"react\": \"^16.13.1\",\r\n\t\t\"react-app-rewired\": \"^2.1.6\",\r\n\t\t\"react-dom\": \"^16.13.1\",\r\n\t\t\"react-scripts\": \"3.4.3\"\r\n\t},\r\n\t\"scripts\": {\r\n\t\t\"build\": \"react-app-rewired build\",\r\n\t\t\"eject\": \"react-scripts eject\"\r\n\t},\r\n\t\"eslintConfig\": {\r\n\t\t\"extends\": \"react-app\"\r\n\t},\r\n\t\"browserslist\": {\r\n\t\t\"production\": [\r\n\t\t\t\">0.2%\",\r\n\t\t\t\"not dead\",\r\n\t\t\t\"not op_mini all\"\r\n\t\t],\r\n\t\t\"development\": [\r\n\t\t\t\"last 1 chrome version\",\r\n\t\t\t\"last 1 firefox version\",\r\n\t\t\t\"last 1 safari version\"\r\n\t\t]\r\n\t},\r\n\t\"browser\": \"./src/index\",\r\n\t\"homepage\": \"t-consumer\"\r\n}\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19896","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19896/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19896/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19896/events","html_url":"https://github.com/facebook/react/issues/19896","id":707649540,"node_id":"MDU6SXNzdWU3MDc2NDk1NDA=","number":19896,"title":"Bug: onBlur events not called when autofilled","user":{"login":"levigunz","id":9252360,"node_id":"MDQ6VXNlcjkyNTIzNjA=","avatar_url":"https://avatars1.githubusercontent.com/u/9252360?v=4","gravatar_id":"","url":"https://api.github.com/users/levigunz","html_url":"https://github.com/levigunz","followers_url":"https://api.github.com/users/levigunz/followers","following_url":"https://api.github.com/users/levigunz/following{/other_user}","gists_url":"https://api.github.com/users/levigunz/gists{/gist_id}","starred_url":"https://api.github.com/users/levigunz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/levigunz/subscriptions","organizations_url":"https://api.github.com/users/levigunz/orgs","repos_url":"https://api.github.com/users/levigunz/repos","events_url":"https://api.github.com/users/levigunz/events{/privacy}","received_events_url":"https://api.github.com/users/levigunz/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-23T20:13:52Z","updated_at":"2020-09-23T20:13:52Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"While testing React 17.0.0-rc.2, we noticed a change in how React handles `onBlur` events when receiving updates via autofill (chrome in this instance). This [might be an intentional change](https://reactjs.org/blog/2020/08/10/react-v17-rc.html#aligning-with-browsers), might be a problematic side effect of the event delegation changes or may just be a browser issue not in scope; I just want to verify.\r\n\r\nIn 16.13.1 when autofilling information, each input's `onBlur` is called.\r\n\r\nIn 17.0.0-rc.2, it appears that none of the input's `onBlur`s are called until you manually blur out of the input that had triggered the autofill. Even then, only the `onBlur` for this single input is called.\r\n\r\nReact version: 17.0.0-rc.2\r\nChrome version: 85.0.4183.102\r\n\r\n## Steps To Reproduce\r\n\r\n1. Click an input and autofill first name, last name and email.\r\n\r\nLink to code example:\r\n\r\n[React 17.0.0-rc.2](https://jsfiddle.net/qe9p3ujn/4/)\r\n[React 16.13.1](https://jsfiddle.net/qe9p3ujn/5/)\r\n\r\n## The current behavior\r\nReact 17: No `onBlur`s called with autofill.\r\nReact < 17: Each input that received autofill value has `onBlur` called.\r\n\r\n## The expected behavior\r\nI'm not really sure which one is correct. I lean toward React 17's current implementation where no `onBlur` is called.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19893","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19893/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19893/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19893/events","html_url":"https://github.com/facebook/react/pull/19893","id":707468493,"node_id":"MDExOlB1bGxSZXF1ZXN0NDkxODY1MzY5","number":19893,"title":"Deprecate old test script commands","user":{"login":"rickhanlonii","id":2440089,"node_id":"MDQ6VXNlcjI0NDAwODk=","avatar_url":"https://avatars0.githubusercontent.com/u/2440089?v=4","gravatar_id":"","url":"https://api.github.com/users/rickhanlonii","html_url":"https://github.com/rickhanlonii","followers_url":"https://api.github.com/users/rickhanlonii/followers","following_url":"https://api.github.com/users/rickhanlonii/following{/other_user}","gists_url":"https://api.github.com/users/rickhanlonii/gists{/gist_id}","starred_url":"https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rickhanlonii/subscriptions","organizations_url":"https://api.github.com/users/rickhanlonii/orgs","repos_url":"https://api.github.com/users/rickhanlonii/repos","events_url":"https://api.github.com/users/rickhanlonii/events{/privacy}","received_events_url":"https://api.github.com/users/rickhanlonii/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-09-23T15:30:21Z","updated_at":"2020-09-23T16:16:29Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19893","html_url":"https://github.com/facebook/react/pull/19893","diff_url":"https://github.com/facebook/react/pull/19893.diff","patch_url":"https://github.com/facebook/react/pull/19893.patch"},"body":"## Overview\r\n\r\nThese aliases have been replaced with the easier to use arguments like `--debug` and `--prod` and the aliases have been proxing to the new commands for awhile now.\r\n\r\nDeprecating the aliases now to give people a chance to use the new commands directly before removing them later.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19892","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19892/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19892/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19892/events","html_url":"https://github.com/facebook/react/pull/19892","id":707388608,"node_id":"MDExOlB1bGxSZXF1ZXN0NDkxNzk5ODg3","number":19892,"title":"RFC: Add scheduling profiler to DevTools","user":{"login":"taneliang","id":12784593,"node_id":"MDQ6VXNlcjEyNzg0NTkz","avatar_url":"https://avatars2.githubusercontent.com/u/12784593?v=4","gravatar_id":"","url":"https://api.github.com/users/taneliang","html_url":"https://github.com/taneliang","followers_url":"https://api.github.com/users/taneliang/followers","following_url":"https://api.github.com/users/taneliang/following{/other_user}","gists_url":"https://api.github.com/users/taneliang/gists{/gist_id}","starred_url":"https://api.github.com/users/taneliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taneliang/subscriptions","organizations_url":"https://api.github.com/users/taneliang/orgs","repos_url":"https://api.github.com/users/taneliang/repos","events_url":"https://api.github.com/users/taneliang/events{/privacy}","received_events_url":"https://api.github.com/users/taneliang/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2020-09-23T13:54:36Z","updated_at":"2020-09-25T14:32:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19892","html_url":"https://github.com/facebook/react/pull/19892","diff_url":"https://github.com/facebook/react/pull/19892.diff","patch_url":"https://github.com/facebook/react/pull/19892.patch"},"body":"<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nThis PR adds the scheduling profiler as a new tab/panel to DevTools. I'm not sure if there are better approaches though; feedback welcome!\r\n\r\n![main](https://user-images.githubusercontent.com/12784593/94020160-2fd44500-fde5-11ea-85f2-a08e6f09ffa4.gif)\r\n\r\nThe main goal of integrating is to allow us to add a record button to record a performance profile in a future PR. I've figured out a way to do it, and I've made a POC here: https://github.com/taneliang/react-scheduling-profiler-devtools-integration-poc.\r\n\r\nThe scheduling profiler is hidden behind a new `enableIntegratedSchedulingProfiler` DevTools feature flag. Apart from a bundle size increase (`main.js` grows from 1.22 MiB to 1.77 MiB), this PR shouldn't affect any functionality in the existing DevTools if the feature flag is off.\r\n\r\nThis PR is nearly complete, but I'm not sure if adding a tab is what you have in mind @bvaughn. I'm also aware that React 17 will be released soon, and I'm not sure if you'll want to wait until after that release. If this approach looks good and we want to proceed, I'll finish the remaining tasks :)\r\n\r\n### Notes\r\n\r\n- Scheduling profiler dark mode isn't disabled in the shell and core packages, even if the dark mode flag is set to false. This is happening because those packages don't mount the scheduling profiler in a different document. As the scheduling profiler has some usability issues in dark mode (from the minor (always-white canvas background), to the major (invisible white tooltip text on a white background)), this likely blocks the scheduling profiler from being released as an integrated part of DevTools. Although we can fix this now by switching the DevTools to light mode when the user opens the scheduling profiler tab, I think it'll be better to just fix the dark mode colors. I/we can do this in future PRs.\r\n- `main.js` bundle size increases from 1.22 MiB to 1.77 MiB. We can trim this to 1.67 MiB if we remove the `profilerBrowser.png` asset.\r\n- The image causes the scheduling profiler to scroll in the shell package.\r\n\r\n### TODO\r\n\r\n- [ ] Ensure Edge extension works (it probably works but I haven't tested it).\r\n- [ ] Fix context menu dismissal behavior.\r\n\r\n### Future work\r\n\r\n- Implement profile record button\r\n- Replace scheduling profiler tab icon (it's currently the same one as the Profiler tab)\r\n- Add Settings modal to non-standalone deployment of scheduling profiler\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n\r\n- Tested Chrome and Firefox extensions.\r\n- Tested Electron app\r\n- Tested shell\r\n\t![image](https://user-images.githubusercontent.com/12784593/94021628-cce3ad80-fde6-11ea-9a9c-473522952f66.png)\r\n- Flipped `enableIntegratedSchedulingProfiler` to false and ensured scheduling profiler tab/panel does not appear.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19891","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19891/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19891/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19891/events","html_url":"https://github.com/facebook/react/issues/19891","id":707312008,"node_id":"MDU6SXNzdWU3MDczMTIwMDg=","number":19891,"title":"FR: Allow displaying debug information for reconcilers in DevTools","user":{"login":"derolf","id":435817,"node_id":"MDQ6VXNlcjQzNTgxNw==","avatar_url":"https://avatars2.githubusercontent.com/u/435817?v=4","gravatar_id":"","url":"https://api.github.com/users/derolf","html_url":"https://github.com/derolf","followers_url":"https://api.github.com/users/derolf/followers","following_url":"https://api.github.com/users/derolf/following{/other_user}","gists_url":"https://api.github.com/users/derolf/gists{/gist_id}","starred_url":"https://api.github.com/users/derolf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/derolf/subscriptions","organizations_url":"https://api.github.com/users/derolf/orgs","repos_url":"https://api.github.com/users/derolf/repos","events_url":"https://api.github.com/users/derolf/events{/privacy}","received_events_url":"https://api.github.com/users/derolf/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":710375792,"node_id":"MDU6TGFiZWw3MTAzNzU3OTI=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Discussion","name":"Type: Discussion","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-09-23T12:18:50Z","updated_at":"2020-09-24T20:06:29Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"React allows to develop custom reconcilers. However, currently it is not possible to display custom debug information about the generated Instances in the react DevTools.\r\n\r\nTherefore, I propose to introduce two functions into `HostConfig`:\r\n\r\n```TypeScript\r\n  getInstanceDebugInfo?: (instance: Instance) => any;\r\n  getTextInstanceDebugInfo?: (textInstance: TextInstance) => any\r\n```\r\n\r\nThey should return an object with custom debug information that would be shown in DevTools whenever an Instance-backed Component is highlighted.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19887","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19887/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19887/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19887/events","html_url":"https://github.com/facebook/react/issues/19887","id":706702738,"node_id":"MDU6SXNzdWU3MDY3MDI3Mzg=","number":19887,"title":"Feature request: dealing with dependencies in custom React hooks","user":{"login":"Patrick-DS","id":28736507,"node_id":"MDQ6VXNlcjI4NzM2NTA3","avatar_url":"https://avatars2.githubusercontent.com/u/28736507?v=4","gravatar_id":"","url":"https://api.github.com/users/Patrick-DS","html_url":"https://github.com/Patrick-DS","followers_url":"https://api.github.com/users/Patrick-DS/followers","following_url":"https://api.github.com/users/Patrick-DS/following{/other_user}","gists_url":"https://api.github.com/users/Patrick-DS/gists{/gist_id}","starred_url":"https://api.github.com/users/Patrick-DS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Patrick-DS/subscriptions","organizations_url":"https://api.github.com/users/Patrick-DS/orgs","repos_url":"https://api.github.com/users/Patrick-DS/repos","events_url":"https://api.github.com/users/Patrick-DS/events{/privacy}","received_events_url":"https://api.github.com/users/Patrick-DS/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-22T21:23:34Z","updated_at":"2020-09-25T16:44:57Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Let's suppose that I'm trying to define a custom hook using useEffect (the same comment applies for other hooks relying on dependencies such as useCallback, useMemo, useLayoutEffect, etc...):\r\n\r\n```\r\nimport {useEffect} from \"react\"\r\n\r\nexport const useWindowScroll = (dependencies) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0,0)\r\n  }, dependencies)\r\n}\r\n```\r\n\r\nThis would be the ideal code to write to make this hook re-usable:\r\n- It encapsulates the exact business logic, which is to scroll back to the top of the page when one of the dependencies change\r\n- It works using similar syntax to a standard React hook, so provides a nice interface to the developer\r\n- It's as simple as it gets: do the exact thing you've always been doing with the standard hooks. \r\n\r\nHowever, this leads to problems because React complains about the 'dependencies' array. There are different ways one could go about solving this, but they all feel sort of hacky and unnatural to me, one of them being replacing 'dependencies' by 'JSON.stringify(dependencies)' (suggested by Dan Abramov according to a quote I cannot find anymore). It works, but it looks strange to remember that this trick needs to be done.\r\n\r\nSomething else that would also be practical would be to be able to write [someOtherVariable, ...dependencies] in that second argument of a useEffect/useCallback/use(...), without having to wrap it in a JSON.stringify.\r\n\r\nIs there anything that we could do in React itself to make the API for custom hooks simpler when it comes to dependencies? ","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19883","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19883/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19883/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19883/events","html_url":"https://github.com/facebook/react/issues/19883","id":706310462,"node_id":"MDU6SXNzdWU3MDYzMTA0NjI=","number":19883,"title":"eslint-plugin-react-hooks feature request: enforce naming convention for useState()","user":{"login":"mbrowne","id":874316,"node_id":"MDQ6VXNlcjg3NDMxNg==","avatar_url":"https://avatars0.githubusercontent.com/u/874316?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrowne","html_url":"https://github.com/mbrowne","followers_url":"https://api.github.com/users/mbrowne/followers","following_url":"https://api.github.com/users/mbrowne/following{/other_user}","gists_url":"https://api.github.com/users/mbrowne/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrowne/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrowne/subscriptions","organizations_url":"https://api.github.com/users/mbrowne/orgs","repos_url":"https://api.github.com/users/mbrowne/repos","events_url":"https://api.github.com/users/mbrowne/events{/privacy}","received_events_url":"https://api.github.com/users/mbrowne/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-22T11:44:30Z","updated_at":"2020-09-23T08:43:48Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n(Re-opening https://github.com/facebook/react/issues/16908)\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nThere is currently no rule to enforce the standard naming convention for `useState`.\r\n\r\n**What is the expected behavior?**\r\n\r\nIt would be great to have a rule to enforce the standard naming convention for `useState()`:\r\n\r\n```\r\nconst [x, setX] = useState(...)\r\n```\r\n\r\nFor example, the rule would consider this an error:\r\n\r\n```\r\nconst [x, setFoo] = useState(...)\r\n```\r\n\r\nThis would ensure that all useState variables followed the same convention, i.e. `${varName}` and `set${upperFirstVarName}`.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nAll versions with hooks\r\n\r\n**Note**\r\n\r\nI originally submitted a feature request for eslint-plugin-react: https://github.com/yannickcr/eslint-plugin-react/issues/2417. It was suggested that I make the feature request here instead. I'm not sure which plugin would be the more appropriate place for this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19881","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19881/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19881/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19881/events","html_url":"https://github.com/facebook/react/pull/19881","id":705971378,"node_id":"MDExOlB1bGxSZXF1ZXN0NDkwNjA0OTI3","number":19881,"title":"[Not for merge yet] Merge the new reconciler fork into the old one","user":{"login":"gaearon","id":810438,"node_id":"MDQ6VXNlcjgxMDQzOA==","avatar_url":"https://avatars0.githubusercontent.com/u/810438?v=4","gravatar_id":"","url":"https://api.github.com/users/gaearon","html_url":"https://github.com/gaearon","followers_url":"https://api.github.com/users/gaearon/followers","following_url":"https://api.github.com/users/gaearon/following{/other_user}","gists_url":"https://api.github.com/users/gaearon/gists{/gist_id}","starred_url":"https://api.github.com/users/gaearon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaearon/subscriptions","organizations_url":"https://api.github.com/users/gaearon/orgs","repos_url":"https://api.github.com/users/gaearon/repos","events_url":"https://api.github.com/users/gaearon/events{/privacy}","received_events_url":"https://api.github.com/users/gaearon/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-21T23:06:42Z","updated_at":"2020-10-01T19:40:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19881","html_url":"https://github.com/facebook/react/pull/19881","diff_url":"https://github.com/facebook/react/pull/19881.diff","patch_url":"https://github.com/facebook/react/pull/19881.patch"},"body":"This is for the npm release. We can't flip the flag, instead we need to replace the fork.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19879","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19879/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19879/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19879/events","html_url":"https://github.com/facebook/react/issues/19879","id":705776611,"node_id":"MDU6SXNzdWU3MDU3NzY2MTE=","number":19879,"title":"lazy state initiation in nested component is called multiple times when promises/resources resolve fast and called only once when promises/resources resolve slowBug: ","user":{"login":"sultanarif-p","id":53237271,"node_id":"MDQ6VXNlcjUzMjM3Mjcx","avatar_url":"https://avatars1.githubusercontent.com/u/53237271?v=4","gravatar_id":"","url":"https://api.github.com/users/sultanarif-p","html_url":"https://github.com/sultanarif-p","followers_url":"https://api.github.com/users/sultanarif-p/followers","following_url":"https://api.github.com/users/sultanarif-p/following{/other_user}","gists_url":"https://api.github.com/users/sultanarif-p/gists{/gist_id}","starred_url":"https://api.github.com/users/sultanarif-p/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sultanarif-p/subscriptions","organizations_url":"https://api.github.com/users/sultanarif-p/orgs","repos_url":"https://api.github.com/users/sultanarif-p/repos","events_url":"https://api.github.com/users/sultanarif-p/events{/privacy}","received_events_url":"https://api.github.com/users/sultanarif-p/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-21T17:14:56Z","updated_at":"2020-09-21T17:47:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n\r\n## Steps To Reproduce\r\n\r\n1.\r\n2.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nlazy state initiation in nested component is called multiple times when promises/resources resolve fast\r\nand called only once when promises/resources resolve slow\r\n## The expected behavior\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19870","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19870/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19870/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19870/events","html_url":"https://github.com/facebook/react/issues/19870","id":705091708,"node_id":"MDU6SXNzdWU3MDUwOTE3MDg=","number":19870,"title":"Bug: Nested Suspense not catching fast resolved Promises","user":{"login":"Xiphe","id":911218,"node_id":"MDQ6VXNlcjkxMTIxOA==","avatar_url":"https://avatars1.githubusercontent.com/u/911218?v=4","gravatar_id":"","url":"https://api.github.com/users/Xiphe","html_url":"https://github.com/Xiphe","followers_url":"https://api.github.com/users/Xiphe/followers","following_url":"https://api.github.com/users/Xiphe/following{/other_user}","gists_url":"https://api.github.com/users/Xiphe/gists{/gist_id}","starred_url":"https://api.github.com/users/Xiphe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Xiphe/subscriptions","organizations_url":"https://api.github.com/users/Xiphe/orgs","repos_url":"https://api.github.com/users/Xiphe/repos","events_url":"https://api.github.com/users/Xiphe/events{/privacy}","received_events_url":"https://api.github.com/users/Xiphe/received_events","type":"User","site_admin":false},"labels":[{"id":1205087127,"node_id":"MDU6TGFiZWwxMjA1MDg3MTI3","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Concurrent%20Mode","name":"Component: Concurrent Mode","color":"ffccd3","default":false,"description":""},{"id":1109407645,"node_id":"MDU6TGFiZWwxMTA5NDA3NjQ1","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Suspense","name":"Component: Suspense","color":"8ffcd6","default":false,"description":""},{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-20T11:17:47Z","updated_at":"2020-09-23T12:09:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Given I have two resources stored and initiated in the `useState` of two nested components.\r\nAnd both components have a `<Suspense>` \r\nAnd the resources are read by child components rendered within these Suspense-Boundaries.\r\n\r\nThen I expect both resources to just be created once\r\nAnd I expect the thrown promises to be captured by the closest `<Suspense>`\r\n\r\n⚠️  But when the resources resolve within ~10ms\r\nThen the inner resource is created more then once (i've seen up to 80 creations)\r\nAnd the inner `<Suspense>` seems to be ignored\r\n\r\n\r\nReact version: 0.0.0-experimental-94c0244ba\r\n\r\n\r\n## Steps To Reproduce\r\n\r\n1. Go to: https://codesandbox.io/s/quirky-bassi-1mbt7?file=/src/index.js\r\n2. Open the console\r\n3. Run the code\r\n4. Observe multiple \"CREATE SUB RES (with INIT) \" logs\r\n5. set `DELAY` in line 7 to `1000` or greater\r\n6. Rerun the code\r\n7. Observe only one \"CREATE SUB RES (with INIT)\"\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/s/quirky-bassi-1mbt7?file=/src/index.js\r\n\r\n\r\n## The current behavior\r\n\r\nlazy state initiation in nested component is called multiple times when promises/resources resolve fast\r\nand called only once when promises/resources resolve slow\r\n\r\n## The expected behavior\r\n\r\nno change in behaviour weather the promises/resources resolve fast or not\r\n\r\n---\r\n\r\nNot sure if this maybe is intended and meant to prevent UI flickering / loading-waterfalls.\r\nOr I am not supposed to create resources in lazy state initiations\r\n\r\nIn both cases I'd love to see deep docs about the why and how I am supposed to setup my resources.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19869","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19869/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19869/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19869/events","html_url":"https://github.com/facebook/react/pull/19869","id":705088432,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg5ODg4MTg2","number":19869,"title":"eslint-plugin-react-hooks: JSX support for react-hooks/exhaustive-deps (#18051)","user":{"login":"chrstnv","id":17298953,"node_id":"MDQ6VXNlcjE3Mjk4OTUz","avatar_url":"https://avatars3.githubusercontent.com/u/17298953?v=4","gravatar_id":"","url":"https://api.github.com/users/chrstnv","html_url":"https://github.com/chrstnv","followers_url":"https://api.github.com/users/chrstnv/followers","following_url":"https://api.github.com/users/chrstnv/following{/other_user}","gists_url":"https://api.github.com/users/chrstnv/gists{/gist_id}","starred_url":"https://api.github.com/users/chrstnv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chrstnv/subscriptions","organizations_url":"https://api.github.com/users/chrstnv/orgs","repos_url":"https://api.github.com/users/chrstnv/repos","events_url":"https://api.github.com/users/chrstnv/events{/privacy}","received_events_url":"https://api.github.com/users/chrstnv/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-09-20T10:56:02Z","updated_at":"2020-10-01T07:50:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19869","html_url":"https://github.com/facebook/react/pull/19869","diff_url":"https://github.com/facebook/react/pull/19869.diff","patch_url":"https://github.com/facebook/react/pull/19869.patch"},"body":"## Summary\r\n\r\n#18051\r\n\r\nAs mentioned in the [discussion](https://github.com/eslint/eslint-scope/issues/61), ESLint does not implement React-specific logic, and therefore JSX Identifiers will not be treated by ESLint as regular variables with references to them in scopes.\r\n\r\nBecause of this circumstance, when we collect hook callback dependencies, JSX variables don't end up in the list of dependencies and JSX-component variables declared in the hook dependencies array are considered exhaustive, but they are not.\r\n\r\nSo I implemented a prototype of a possible solution to this problem — handling JSX-expressions in the dependency gathering logic of the plugin.\r\n\r\nIn a nutshell, if JSX is found in the callback hook, then I traverse the JSX tree of elements and collect a list of React components. In the process, I filter out all elements that are not React components. Then I add the resulting array to the list of collected dependencies, which will be checked for exhaustiveness or lack of dependencies.\r\n\r\nMy prototype solution is imperfect at the moment, it doesn't find JSX-expressions in if/else constructions, it does not fully support JSXMemberExpressions, I have not yet written Typescript tests, etc. But I will do my best if I know that this is the right way.\r\n\r\nThanks!\r\n\r\n## Test Plan\r\n✅ All test, test-prod, lint, flow checks are passed.\r\nAdded some new tests for positive and negative cases of JSX support.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19867","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19867/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19867/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19867/events","html_url":"https://github.com/facebook/react/pull/19867","id":705003926,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg5ODI3MjQ0","number":19867,"title":"Bug: Handling of symbols when used as deps incorrectly to create error message results in an unrelated TypeError: Cannot convert a Symbol value to a string ","user":{"login":"omarsy","id":15034695,"node_id":"MDQ6VXNlcjE1MDM0Njk1","avatar_url":"https://avatars0.githubusercontent.com/u/15034695?v=4","gravatar_id":"","url":"https://api.github.com/users/omarsy","html_url":"https://github.com/omarsy","followers_url":"https://api.github.com/users/omarsy/followers","following_url":"https://api.github.com/users/omarsy/following{/other_user}","gists_url":"https://api.github.com/users/omarsy/gists{/gist_id}","starred_url":"https://api.github.com/users/omarsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omarsy/subscriptions","organizations_url":"https://api.github.com/users/omarsy/orgs","repos_url":"https://api.github.com/users/omarsy/repos","events_url":"https://api.github.com/users/omarsy/events{/privacy}","received_events_url":"https://api.github.com/users/omarsy/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-09-19T21:54:25Z","updated_at":"2020-09-29T13:09:46Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19867","html_url":"https://github.com/facebook/react/pull/19867","diff_url":"https://github.com/facebook/react/pull/19867.diff","patch_url":"https://github.com/facebook/react/pull/19867.patch"},"body":"<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\nFixes #19848\r\n## Summary\r\n![image](https://user-images.githubusercontent.com/15034695/93689994-0c06bb80-fad4-11ea-8da5-422408772782.png)\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19865","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19865/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19865/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19865/events","html_url":"https://github.com/facebook/react/issues/19865","id":704675708,"node_id":"MDU6SXNzdWU3MDQ2NzU3MDg=","number":19865,"title":"Removal of <script> functionality needs to be added to https://reactjs.org/docs/ and a warning displayed while in development mode.","user":{"login":"infoeon","id":6994751,"node_id":"MDQ6VXNlcjY5OTQ3NTE=","avatar_url":"https://avatars2.githubusercontent.com/u/6994751?v=4","gravatar_id":"","url":"https://api.github.com/users/infoeon","html_url":"https://github.com/infoeon","followers_url":"https://api.github.com/users/infoeon/followers","following_url":"https://api.github.com/users/infoeon/following{/other_user}","gists_url":"https://api.github.com/users/infoeon/gists{/gist_id}","starred_url":"https://api.github.com/users/infoeon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/infoeon/subscriptions","organizations_url":"https://api.github.com/users/infoeon/orgs","repos_url":"https://api.github.com/users/infoeon/repos","events_url":"https://api.github.com/users/infoeon/events{/privacy}","received_events_url":"https://api.github.com/users/infoeon/received_events","type":"User","site_admin":false},"labels":[{"id":710375792,"node_id":"MDU6TGFiZWw3MTAzNzU3OTI=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Discussion","name":"Type: Discussion","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-18T21:44:45Z","updated_at":"2020-09-19T02:20:15Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When a <script> tag is used within JSX there is functionality that tricks the browser into not executing the contained code or from fetching the `src`. There is a code comment indicating this behaviour:\r\n\r\n`Create the script via .innerHTML so its \"parser-inserted\" flag is set to true and it does not execute`\r\n\r\nbut for those who are expecting the tag to work like _every other html tag_ in React it is a bit of a surprise that wastes several hours tracking down the cause.  This \"feature\" is obviously there for security reasons, but there are numerous ways around it (changing the case of a letter such as <sCript src=\"...\">).\r\n\r\nPlease either remove this feature and add a warning while in dev mode stating that adding <script> tags is not best practices, or keep the feature but warn that <script> tags are not supported inline and document this behaviour in the React docs. I personally recommend the first once since it simplifies the React code base while allowing the developer to still proceed at their own risk.  The \"risk\" is minor since this isn't readily exploitable as the dangerouslySetHtml feature.\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19860","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19860/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19860/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19860/events","html_url":"https://github.com/facebook/react/issues/19860","id":704377236,"node_id":"MDU6SXNzdWU3MDQzNzcyMzY=","number":19860,"title":"Bug: input[type=\"radio\"] cannot be readOnly","user":{"login":"eps1lon","id":12292047,"node_id":"MDQ6VXNlcjEyMjkyMDQ3","avatar_url":"https://avatars3.githubusercontent.com/u/12292047?v=4","gravatar_id":"","url":"https://api.github.com/users/eps1lon","html_url":"https://github.com/eps1lon","followers_url":"https://api.github.com/users/eps1lon/followers","following_url":"https://api.github.com/users/eps1lon/following{/other_user}","gists_url":"https://api.github.com/users/eps1lon/gists{/gist_id}","starred_url":"https://api.github.com/users/eps1lon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eps1lon/subscriptions","organizations_url":"https://api.github.com/users/eps1lon/orgs","repos_url":"https://api.github.com/users/eps1lon/repos","events_url":"https://api.github.com/users/eps1lon/events{/privacy}","received_events_url":"https://api.github.com/users/eps1lon/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-18T13:26:15Z","updated_at":"2020-09-23T07:45:14Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"body":"\r\n\r\nReact version: 16.13.1 and 17.0.0-alpha.0-2d131d782\r\n\r\n## Steps To Reproduce\r\n\r\n1. Render two `input[type=\"radio\"][name=\"radio\"]`: one is checked, one isn't\r\n2. Get warning about passing `onChange` or `readOnly`\r\n3. Add empty `onChange` to both\r\n\r\nLink to code example:\r\n\r\n- [React 16 repro](https://codesandbox.io/s/react-16-radio-cannot-be-read-only-z9ldc)\r\n- [React 17 repro](https://codesandbox.io/s/react-17-radio-cannot-be-read-only-forked-r6m9r)\r\n\r\n## The current behavior\r\n\r\n![screencapture of the described behavior](https://i.ibb.co/CMGcrSH/react-readonly-radio.gif)\r\n\r\n1. React recommends `readOnly` for `input[type=\"radio\"]` even though this isn't supported natively (though React could polyfill it)\r\n2. After looping through the radios once with arrow key navigation the checked state changes\r\n\r\n## The expected behavior\r\n\r\nArrow key navigation shouldn't break out of the controlled value. It's debateable whether React should recommend `readOnly` when this isn't a standard attribute like `readOnly` for `<input type=\"text\" />`.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19857","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19857/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19857/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19857/events","html_url":"https://github.com/facebook/react/issues/19857","id":704225352,"node_id":"MDU6SXNzdWU3MDQyMjUzNTI=","number":19857,"title":"Bug: React Portals - Memory Leak","user":{"login":"seanlandsman","id":1329081,"node_id":"MDQ6VXNlcjEzMjkwODE=","avatar_url":"https://avatars0.githubusercontent.com/u/1329081?v=4","gravatar_id":"","url":"https://api.github.com/users/seanlandsman","html_url":"https://github.com/seanlandsman","followers_url":"https://api.github.com/users/seanlandsman/followers","following_url":"https://api.github.com/users/seanlandsman/following{/other_user}","gists_url":"https://api.github.com/users/seanlandsman/gists{/gist_id}","starred_url":"https://api.github.com/users/seanlandsman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seanlandsman/subscriptions","organizations_url":"https://api.github.com/users/seanlandsman/orgs","repos_url":"https://api.github.com/users/seanlandsman/repos","events_url":"https://api.github.com/users/seanlandsman/events{/privacy}","received_events_url":"https://api.github.com/users/seanlandsman/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-18T09:19:11Z","updated_at":"2020-09-18T09:19:11Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"\r\nWe use React and interact with a 3rd party JS library - we use React Portals to create & destroy React Components within the overall application.\r\n\r\nThe supplied repo demonstrates a very simplified version of what we do - after destroying/cleaning up components and detached HTML elements still remain in memory.\r\n\r\nReact version: 16.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Check out https://github.com/seanlandsman/react-portal-memory-leak.git\r\n2. take a snapshot (or several until the memory footprint stabilises)\r\n3. click \"Create Portal\"\r\n4. click \"Delete Portal\"\r\n5. If you now take another snapshot and compare against the first one you'll see a \"Detached HTMLDivElement\", as well as the supplied \"TestComponent\"\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://github.com/seanlandsman/react-portal-memory-leak.git\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nPost forceUpdate components and HTML elements remain in memory.\r\n\r\n## The expected behavior\r\n\r\nMemory before and after create/destroy(update) should be the same\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19855","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19855/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19855/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19855/events","html_url":"https://github.com/facebook/react/pull/19855","id":704012652,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg5MDEzNTI2","number":19855,"title":"Automatically stringify keys with type of 'symbol'","user":{"login":"bpernick","id":57197898,"node_id":"MDQ6VXNlcjU3MTk3ODk4","avatar_url":"https://avatars1.githubusercontent.com/u/57197898?v=4","gravatar_id":"","url":"https://api.github.com/users/bpernick","html_url":"https://github.com/bpernick","followers_url":"https://api.github.com/users/bpernick/followers","following_url":"https://api.github.com/users/bpernick/following{/other_user}","gists_url":"https://api.github.com/users/bpernick/gists{/gist_id}","starred_url":"https://api.github.com/users/bpernick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpernick/subscriptions","organizations_url":"https://api.github.com/users/bpernick/orgs","repos_url":"https://api.github.com/users/bpernick/repos","events_url":"https://api.github.com/users/bpernick/events{/privacy}","received_events_url":"https://api.github.com/users/bpernick/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-09-18T01:29:37Z","updated_at":"2020-09-30T19:00:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19855","html_url":"https://github.com/facebook/react/pull/19855","diff_url":"https://github.com/facebook/react/pull/19855.diff","patch_url":"https://github.com/facebook/react/pull/19855.patch"},"body":"\r\n\r\n## Summary\r\n\r\nAddresses #19851.\r\n\r\nCurrently using a symbol as a unique key causes a cryptic-ish error.\r\n\r\nNow Symbol keys are stringified just like number keys, etc.\r\nSymbol keys don't automatically crash the app.\r\nIf the dev does something bad, like \" return (<><div key={ Symbol('foo') } ><div key={ Symbol('foo') } ></> \", they will get a descriptive error about duplicate keys.\r\n\r\n## Test Plan\r\nI ran yarn test and yarn test-prod.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19851","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19851/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19851/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19851/events","html_url":"https://github.com/facebook/react/issues/19851","id":703804545,"node_id":"MDU6SXNzdWU3MDM4MDQ1NDU=","number":19851,"title":"Bug:  Component with a Symbol as key, causes Crash","user":{"login":"omarsy","id":15034695,"node_id":"MDQ6VXNlcjE1MDM0Njk1","avatar_url":"https://avatars0.githubusercontent.com/u/15034695?v=4","gravatar_id":"","url":"https://api.github.com/users/omarsy","html_url":"https://github.com/omarsy","followers_url":"https://api.github.com/users/omarsy/followers","following_url":"https://api.github.com/users/omarsy/following{/other_user}","gists_url":"https://api.github.com/users/omarsy/gists{/gist_id}","starred_url":"https://api.github.com/users/omarsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omarsy/subscriptions","organizations_url":"https://api.github.com/users/omarsy/orgs","repos_url":"https://api.github.com/users/omarsy/repos","events_url":"https://api.github.com/users/omarsy/events{/privacy}","received_events_url":"https://api.github.com/users/omarsy/received_events","type":"User","site_admin":false},"labels":[{"id":710375792,"node_id":"MDU6TGFiZWw3MTAzNzU3OTI=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Discussion","name":"Type: Discussion","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2020-09-17T18:14:16Z","updated_at":"2020-10-01T01:38:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n16.13.1\r\n# Steps To Reproduce\r\n\r\n1. Go To the link https://codesandbox.io/s/happy-ramanujan-xlegp?file=/src/App.js\r\n2. We can see errors caused by this part of code: https://github.com/facebook/react/blob/6fddca27e75950adda92ab4f4946442907dc3bb7/packages/react/src/ReactElement.js#L228\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/happy-ramanujan-xlegp?file=/src/App.js\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nCrash\r\n## The expected behavior\r\nNo crash\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19848","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19848/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19848/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19848/events","html_url":"https://github.com/facebook/react/issues/19848","id":703600132,"node_id":"MDU6SXNzdWU3MDM2MDAxMzI=","number":19848,"title":"Bug: Handling of symbols when used as deps incorrectly to create error message results in an unrelated TypeError: Cannot convert a Symbol value to a string","user":{"login":"leidegre","id":63085,"node_id":"MDQ6VXNlcjYzMDg1","avatar_url":"https://avatars2.githubusercontent.com/u/63085?v=4","gravatar_id":"","url":"https://api.github.com/users/leidegre","html_url":"https://github.com/leidegre","followers_url":"https://api.github.com/users/leidegre/followers","following_url":"https://api.github.com/users/leidegre/following{/other_user}","gists_url":"https://api.github.com/users/leidegre/gists{/gist_id}","starred_url":"https://api.github.com/users/leidegre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leidegre/subscriptions","organizations_url":"https://api.github.com/users/leidegre/orgs","repos_url":"https://api.github.com/users/leidegre/repos","events_url":"https://api.github.com/users/leidegre/events{/privacy}","received_events_url":"https://api.github.com/users/leidegre/received_events","type":"User","site_admin":false},"labels":[{"id":1109410193,"node_id":"MDU6TGFiZWwxMTA5NDEwMTkz","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Hooks","name":"Component: Hooks","color":"c2f27b","default":false,"description":""},{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"omarsy","id":15034695,"node_id":"MDQ6VXNlcjE1MDM0Njk1","avatar_url":"https://avatars0.githubusercontent.com/u/15034695?v=4","gravatar_id":"","url":"https://api.github.com/users/omarsy","html_url":"https://github.com/omarsy","followers_url":"https://api.github.com/users/omarsy/followers","following_url":"https://api.github.com/users/omarsy/following{/other_user}","gists_url":"https://api.github.com/users/omarsy/gists{/gist_id}","starred_url":"https://api.github.com/users/omarsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omarsy/subscriptions","organizations_url":"https://api.github.com/users/omarsy/orgs","repos_url":"https://api.github.com/users/omarsy/repos","events_url":"https://api.github.com/users/omarsy/events{/privacy}","received_events_url":"https://api.github.com/users/omarsy/received_events","type":"User","site_admin":false},"assignees":[{"login":"omarsy","id":15034695,"node_id":"MDQ6VXNlcjE1MDM0Njk1","avatar_url":"https://avatars0.githubusercontent.com/u/15034695?v=4","gravatar_id":"","url":"https://api.github.com/users/omarsy","html_url":"https://github.com/omarsy","followers_url":"https://api.github.com/users/omarsy/followers","following_url":"https://api.github.com/users/omarsy/following{/other_user}","gists_url":"https://api.github.com/users/omarsy/gists{/gist_id}","starred_url":"https://api.github.com/users/omarsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/omarsy/subscriptions","organizations_url":"https://api.github.com/users/omarsy/orgs","repos_url":"https://api.github.com/users/omarsy/repos","events_url":"https://api.github.com/users/omarsy/events{/privacy}","received_events_url":"https://api.github.com/users/omarsy/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2020-09-17T13:40:58Z","updated_at":"2020-09-18T06:27:21Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"React version: 16.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Click the button in this Code Sandbox https://codesandbox.io/s/blissful-sun-e0lle?file=/src/App.js\r\n\r\n## The current behavior\r\n\r\nThe wrong error is generated\r\n\r\n## The expected behavior\r\n\r\nAn error should still be generated but the error message should be correct. The problem is that if you do `[Symbol('...')].join(',')` JavaScript will freak out which is what happens if you put symbols incorrectly in the deps to hooks.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19846","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19846/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19846/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19846/events","html_url":"https://github.com/facebook/react/issues/19846","id":703287683,"node_id":"MDU6SXNzdWU3MDMyODc2ODM=","number":19846,"title":"Bug: manually created 'change' events via new Event() don't trigger React event handlers","user":{"login":"jesseko","id":153062,"node_id":"MDQ6VXNlcjE1MzA2Mg==","avatar_url":"https://avatars0.githubusercontent.com/u/153062?v=4","gravatar_id":"","url":"https://api.github.com/users/jesseko","html_url":"https://github.com/jesseko","followers_url":"https://api.github.com/users/jesseko/followers","following_url":"https://api.github.com/users/jesseko/following{/other_user}","gists_url":"https://api.github.com/users/jesseko/gists{/gist_id}","starred_url":"https://api.github.com/users/jesseko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jesseko/subscriptions","organizations_url":"https://api.github.com/users/jesseko/orgs","repos_url":"https://api.github.com/users/jesseko/repos","events_url":"https://api.github.com/users/jesseko/events{/privacy}","received_events_url":"https://api.github.com/users/jesseko/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-09-17T05:48:34Z","updated_at":"2020-09-22T09:10:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Description:\r\nManually created events created via `new Event` and emitted from a hidden input work great for `'input'` events, they bubble as expected and can be caught via `onInput` handlers, but using `'change'` events this way doesn't work -- `onChange` handlers are never called.\r\n\r\nThe vanilla JS `'change'` events do bubble normally and can be caught by parents with vanilla JS listeners ( using `addEventListener`), but the React `onChange` listeners don't register anything. \r\n\r\nI've created a codepen to demonstrate a minimal case for this via console logging.  See repro steps below and code comments for additional details.\r\n\r\n### React version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open https://codepen.io/jesseko/pen/dyMqGKG\r\n2. Observe that logging shows a single entry, the `change` event being emitted from a child component after render.  We expect a second log from a parent's `onChange` but it never comes.\r\n3. Change `EVENT_TYPE` to `'input'`\r\n4. Observe that logging shows two entries, one for the event being emitted and a second for it being detected via an `onInput` handler in the parent component.\r\n5. optional: there's some commented out code at the bottom to test a vanilla JS listener.  Change `EVENT_TYPE` back to `'change'` and uncomment that code and you'll see that that listener does work\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19845","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19845/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19845/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19845/events","html_url":"https://github.com/facebook/react/pull/19845","id":703115012,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg4Mjc3Mjcy","number":19845,"title":"Continuations should yield after the deadline","user":{"login":"rickhanlonii","id":2440089,"node_id":"MDQ6VXNlcjI0NDAwODk=","avatar_url":"https://avatars0.githubusercontent.com/u/2440089?v=4","gravatar_id":"","url":"https://api.github.com/users/rickhanlonii","html_url":"https://github.com/rickhanlonii","followers_url":"https://api.github.com/users/rickhanlonii/followers","following_url":"https://api.github.com/users/rickhanlonii/following{/other_user}","gists_url":"https://api.github.com/users/rickhanlonii/gists{/gist_id}","starred_url":"https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rickhanlonii/subscriptions","organizations_url":"https://api.github.com/users/rickhanlonii/orgs","repos_url":"https://api.github.com/users/rickhanlonii/repos","events_url":"https://api.github.com/users/rickhanlonii/events{/privacy}","received_events_url":"https://api.github.com/users/rickhanlonii/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-09-16T22:25:53Z","updated_at":"2020-09-17T17:41:16Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19845","html_url":"https://github.com/facebook/react/pull/19845","diff_url":"https://github.com/facebook/react/pull/19845.diff","patch_url":"https://github.com/facebook/react/pull/19845.patch"},"body":"## Summary\r\n\r\nFixes a bug in the scheduler that allowed continuations to starve the event loop (see test).\r\n\r\n## Test Plan\r\n\r\nAdded a test.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19839","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19839/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19839/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19839/events","html_url":"https://github.com/facebook/react/issues/19839","id":702262617,"node_id":"MDU6SXNzdWU3MDIyNjI2MTc=","number":19839,"title":"Error: \"Maximum call stack size exceeded\"","user":{"login":"mungojam","id":3154635,"node_id":"MDQ6VXNlcjMxNTQ2MzU=","avatar_url":"https://avatars1.githubusercontent.com/u/3154635?v=4","gravatar_id":"","url":"https://api.github.com/users/mungojam","html_url":"https://github.com/mungojam","followers_url":"https://api.github.com/users/mungojam/followers","following_url":"https://api.github.com/users/mungojam/following{/other_user}","gists_url":"https://api.github.com/users/mungojam/gists{/gist_id}","starred_url":"https://api.github.com/users/mungojam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mungojam/subscriptions","organizations_url":"https://api.github.com/users/mungojam/orgs","repos_url":"https://api.github.com/users/mungojam/repos","events_url":"https://api.github.com/users/mungojam/events{/privacy}","received_events_url":"https://api.github.com/users/mungojam/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-09-15T20:56:05Z","updated_at":"2020-09-26T16:54:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Describe what you were doing when the bug occurred:\r\n1. Clicking back to go back through the frames following a profile session. I think I got to zero and then clicked it again and then it errored\r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.8.2-fed4ae024\r\n\r\nCall stack: at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17661:26)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17710:30)\r\n\r\nComponent stack: at CommitRankedAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31963:48)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26139:23)\r\n    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33363:48)\r\n    at ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27172:5)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27303:32)\r\n    at div\r\n    at div\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30463:23)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:22538:23)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:23040:27)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28328:23)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33797:21)","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19838","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19838/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19838/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19838/events","html_url":"https://github.com/facebook/react/issues/19838","id":702122395,"node_id":"MDU6SXNzdWU3MDIxMjIzOTU=","number":19838,"title":"Bug: window.onerror handler not invoked on unhandled exception in react rendering","user":{"login":"RandomEngy","id":9450861,"node_id":"MDQ6VXNlcjk0NTA4NjE=","avatar_url":"https://avatars1.githubusercontent.com/u/9450861?v=4","gravatar_id":"","url":"https://api.github.com/users/RandomEngy","html_url":"https://github.com/RandomEngy","followers_url":"https://api.github.com/users/RandomEngy/followers","following_url":"https://api.github.com/users/RandomEngy/following{/other_user}","gists_url":"https://api.github.com/users/RandomEngy/gists{/gist_id}","starred_url":"https://api.github.com/users/RandomEngy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RandomEngy/subscriptions","organizations_url":"https://api.github.com/users/RandomEngy/orgs","repos_url":"https://api.github.com/users/RandomEngy/repos","events_url":"https://api.github.com/users/RandomEngy/events{/privacy}","received_events_url":"https://api.github.com/users/RandomEngy/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-15T17:34:07Z","updated_at":"2020-09-15T17:34:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The global JS error handler `window.onerror` is not invoked when there is an unhandled exception in the React rendering pipeline when running in optimized \"production\" build.\r\n\r\nThough due to special handling, it is fired during a dev build.\r\n\r\n[The documentation](https://reactjs.org/docs/error-boundaries.html) does not seem to indicate what the desired behavior is here. They mention you need such a handler to catch non-react errors but do not say anything about what happens to uncaught react errors. We can work around this by adding an error boundary at the root (in addition to our current `window.onerror` handling), but this seems like unexpected behavior to me.\r\n\r\nReact version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Set up a global error handler `window.onerror = (message) => { alert(message) };`\r\n2. Throw an exception during react rendering that is not caught by any error boundary\r\n3. Run the production build\r\n\r\nLink to code example:\r\nhttps://github.com/RandomEngy/test-error-boundary\r\n\r\n## The current behavior\r\nHandler is not fired.\r\n\r\n## The expected behavior\r\n`window.onerror` handler fires","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19834","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19834/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19834/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19834/events","html_url":"https://github.com/facebook/react/issues/19834","id":701411768,"node_id":"MDU6SXNzdWU3MDE0MTE3Njg=","number":19834,"title":"Bug: memoized component not re-rendering when prop changes after suspense resume","user":{"login":"sfc-gh-sbessler","id":63468307,"node_id":"MDQ6VXNlcjYzNDY4MzA3","avatar_url":"https://avatars1.githubusercontent.com/u/63468307?v=4","gravatar_id":"","url":"https://api.github.com/users/sfc-gh-sbessler","html_url":"https://github.com/sfc-gh-sbessler","followers_url":"https://api.github.com/users/sfc-gh-sbessler/followers","following_url":"https://api.github.com/users/sfc-gh-sbessler/following{/other_user}","gists_url":"https://api.github.com/users/sfc-gh-sbessler/gists{/gist_id}","starred_url":"https://api.github.com/users/sfc-gh-sbessler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sfc-gh-sbessler/subscriptions","organizations_url":"https://api.github.com/users/sfc-gh-sbessler/orgs","repos_url":"https://api.github.com/users/sfc-gh-sbessler/repos","events_url":"https://api.github.com/users/sfc-gh-sbessler/events{/privacy}","received_events_url":"https://api.github.com/users/sfc-gh-sbessler/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-14T20:42:09Z","updated_at":"2020-09-14T20:47:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Given 3 React.memo'd components: A which contains B which contains C all inside a suspense context.\r\n2. If A changes a context that causes B to throw a promise on re-render, and upon getting the result of that promise passes a value to C (changing C's prop) C will not re-render.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://codesandbox.io/s/upbeat-buck-f6ntj\r\n_This also shows a workaround, that if we don't use context to \"pass\" the \"val\" from A to B and instead actually pass a prop, it all works as-expected._\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nC does not re-render in the above scenario. Altho, C2 does.\r\n\r\n## The expected behavior\r\n\r\nComponent C should re-render in the above scenario.  Just like C2 does.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19833","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19833/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19833/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19833/events","html_url":"https://github.com/facebook/react/pull/19833","id":701294954,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg2Nzc1OTIw","number":19833,"title":"eslint-plugin-react-hooks: support async functions in additional hooks (#19034)","user":{"login":"MichaelBelousov","id":16315257,"node_id":"MDQ6VXNlcjE2MzE1MjU3","avatar_url":"https://avatars2.githubusercontent.com/u/16315257?v=4","gravatar_id":"","url":"https://api.github.com/users/MichaelBelousov","html_url":"https://github.com/MichaelBelousov","followers_url":"https://api.github.com/users/MichaelBelousov/followers","following_url":"https://api.github.com/users/MichaelBelousov/following{/other_user}","gists_url":"https://api.github.com/users/MichaelBelousov/gists{/gist_id}","starred_url":"https://api.github.com/users/MichaelBelousov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MichaelBelousov/subscriptions","organizations_url":"https://api.github.com/users/MichaelBelousov/orgs","repos_url":"https://api.github.com/users/MichaelBelousov/repos","events_url":"https://api.github.com/users/MichaelBelousov/events{/privacy}","received_events_url":"https://api.github.com/users/MichaelBelousov/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-09-14T17:37:21Z","updated_at":"2020-09-15T12:44:59Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19833","html_url":"https://github.com/facebook/react/pull/19833","diff_url":"https://github.com/facebook/react/pull/19833.diff","patch_url":"https://github.com/facebook/react/pull/19833.patch"},"body":"## Summary\r\n\r\nsupport async functions in additional hooks (#19034)\r\n\r\nSimply don't warn users about using an async function as the first\r\nargument when linting additional hooks, since it is an unfounded\r\nrestriction to custom dependency-using hooks.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19825","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19825/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19825/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19825/events","html_url":"https://github.com/facebook/react/pull/19825","id":700511107,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg2MTM5MjQy","number":19825,"title":"Updates to grammar, formatting of README file ","user":{"login":"thejessicafelts","id":10212524,"node_id":"MDQ6VXNlcjEwMjEyNTI0","avatar_url":"https://avatars0.githubusercontent.com/u/10212524?v=4","gravatar_id":"","url":"https://api.github.com/users/thejessicafelts","html_url":"https://github.com/thejessicafelts","followers_url":"https://api.github.com/users/thejessicafelts/followers","following_url":"https://api.github.com/users/thejessicafelts/following{/other_user}","gists_url":"https://api.github.com/users/thejessicafelts/gists{/gist_id}","starred_url":"https://api.github.com/users/thejessicafelts/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thejessicafelts/subscriptions","organizations_url":"https://api.github.com/users/thejessicafelts/orgs","repos_url":"https://api.github.com/users/thejessicafelts/repos","events_url":"https://api.github.com/users/thejessicafelts/events{/privacy}","received_events_url":"https://api.github.com/users/thejessicafelts/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-13T06:45:30Z","updated_at":"2020-09-16T00:36:12Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19825","html_url":"https://github.com/facebook/react/pull/19825","diff_url":"https://github.com/facebook/react/pull/19825.diff","patch_url":"https://github.com/facebook/react/pull/19825.patch"},"body":"Updates to grammar and formatting of the README file.\r\n\r\n## Summary\r\n\r\nWhen reading through the README.md file, I thought some changes could be made to make the file easier to read, and more grammatically correct.\r\n\r\n## Test Plan\r\n\r\nN/A - As this is simply a copy update to a .md file, no test plan was created or needed.\r\n\r\n## CLA\r\n\r\nThe CLA has been completed and signed.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19823","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19823/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19823/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19823/events","html_url":"https://github.com/facebook/react/issues/19823","id":700183312,"node_id":"MDU6SXNzdWU3MDAxODMzMTI=","number":19823,"title":"Feature request: bind event to react hook component. especially for typescript","user":{"login":"thinksource","id":2766693,"node_id":"MDQ6VXNlcjI3NjY2OTM=","avatar_url":"https://avatars0.githubusercontent.com/u/2766693?v=4","gravatar_id":"","url":"https://api.github.com/users/thinksource","html_url":"https://github.com/thinksource","followers_url":"https://api.github.com/users/thinksource/followers","following_url":"https://api.github.com/users/thinksource/following{/other_user}","gists_url":"https://api.github.com/users/thinksource/gists{/gist_id}","starred_url":"https://api.github.com/users/thinksource/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thinksource/subscriptions","organizations_url":"https://api.github.com/users/thinksource/orgs","repos_url":"https://api.github.com/users/thinksource/repos","events_url":"https://api.github.com/users/thinksource/events{/privacy}","received_events_url":"https://api.github.com/users/thinksource/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-12T10:29:24Z","updated_at":"2020-09-22T23:51:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I have two components the children component will emit 'onchange' event to parent component and the parent hook will deal with this event like:\r\n\r\nparent component.\r\n\r\n```\r\nconst App = ()=>{\r\n    const initvalue=['abc']\r\n    const handleChange(e:InputEvent)=>{\r\n         return e.target.value\r\n    }\r\n    return (\r\n   <>\r\n         <InputArray  value={initvalue} onChange={handleChange}/>\r\n   </>\r\n   )\r\n\r\n}\r\n```\r\nthe children Component like:\r\n\r\n```\r\nconst InputArray = (props: React.HTMLProps<HTMLInputElement>) =>{\r\n     const {fields, onChang}= props\r\n     const ulEl = useRef<HTMLInputElement>(null);\r\n\r\n   useEffect(()=>{\r\n        ulEl.current?.addEventListener('change', props.onChange)\r\n       return (()=>{\r\n                 ulEI.current?.removeEventListener('change', props.onChange)\r\n                 }\r\n              )\r\n\r\n    })\r\n\r\n    return (\r\n    <ul ref={ulEl}>\r\n        <p><button type=\"button\" onClick={addfields}>\r\n            Add \r\n        </button>\r\n        <button type=\"button\" onClick={removefields}>\r\n            remove \r\n        </button></p>\r\n        {fields.map((key, index)=>(<li key={`k${index}`} ><input type=\"text\" value={key} onChange={(val: ChangeEvent<HTMLInputElement>)=>{\r\n            props.values[index]=e.target.value\r\n            emit('change', props.values)  // I just want input can emit an event to UL and UL can deal with InputEvent.\r\n        }}/></li>))}\r\n    </ul>)\r\n}\r\n```\r\nI want the feature react hook can add new eventListener and children input can emit some even to outside.\r\n(esp for typescript as UL is not input-element and it do not have matched types) ","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19822","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19822/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19822/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19822/events","html_url":"https://github.com/facebook/react/pull/19822","id":700059290,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg1NzQ3OTU4","number":19822,"title":"Updates to grammar, formatting of CoC","user":{"login":"thejessicafelts","id":10212524,"node_id":"MDQ6VXNlcjEwMjEyNTI0","avatar_url":"https://avatars0.githubusercontent.com/u/10212524?v=4","gravatar_id":"","url":"https://api.github.com/users/thejessicafelts","html_url":"https://github.com/thejessicafelts","followers_url":"https://api.github.com/users/thejessicafelts/followers","following_url":"https://api.github.com/users/thejessicafelts/following{/other_user}","gists_url":"https://api.github.com/users/thejessicafelts/gists{/gist_id}","starred_url":"https://api.github.com/users/thejessicafelts/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thejessicafelts/subscriptions","organizations_url":"https://api.github.com/users/thejessicafelts/orgs","repos_url":"https://api.github.com/users/thejessicafelts/repos","events_url":"https://api.github.com/users/thejessicafelts/events{/privacy}","received_events_url":"https://api.github.com/users/thejessicafelts/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-09-12T05:00:10Z","updated_at":"2020-09-29T12:34:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19822","html_url":"https://github.com/facebook/react/pull/19822","diff_url":"https://github.com/facebook/react/pull/19822.diff","patch_url":"https://github.com/facebook/react/pull/19822.patch"},"body":"Updates to grammar and formatting of the Code of Conduct file.\r\n\r\n## Summary\r\n\r\nWhen reading the Code of Conduct file, I thought some changes could be made to make the file easier to read, and more grammatically correct.\r\n\r\n## Test Plan\r\n\r\nN/A - As this is simply a copy update to a .md file, no test plan was created or needed.\r\n\r\n## CLA\r\nThe CLA has been completed and signed.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19819","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19819/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19819/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19819/events","html_url":"https://github.com/facebook/react/pull/19819","id":699428080,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg1MTcwNjE3","number":19819,"title":"Include JSX callsite in the missing key warning","user":{"login":"gaearon","id":810438,"node_id":"MDQ6VXNlcjgxMDQzOA==","avatar_url":"https://avatars0.githubusercontent.com/u/810438?v=4","gravatar_id":"","url":"https://api.github.com/users/gaearon","html_url":"https://github.com/gaearon","followers_url":"https://api.github.com/users/gaearon/followers","following_url":"https://api.github.com/users/gaearon/following{/other_user}","gists_url":"https://api.github.com/users/gaearon/gists{/gist_id}","starred_url":"https://api.github.com/users/gaearon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaearon/subscriptions","organizations_url":"https://api.github.com/users/gaearon/orgs","repos_url":"https://api.github.com/users/gaearon/repos","events_url":"https://api.github.com/users/gaearon/events{/privacy}","received_events_url":"https://api.github.com/users/gaearon/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2020-09-11T15:06:24Z","updated_at":"2020-09-20T05:06:36Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19819","html_url":"https://github.com/facebook/react/pull/19819","diff_url":"https://github.com/facebook/react/pull/19819.diff","patch_url":"https://github.com/facebook/react/pull/19819.patch"},"body":"React 17 uses native browser frames for stack traces, which means that host elements like `<div>` no longer have line numbers. And for components, you get the definition frame rather than the JSX callsite frame. For the most part this is fine — especially if the browsers start using sourcemaps for when stack frames URLs are printed via `console.error`. However, there is one particular case that I feel has regressed in usability.\r\n\r\nKey warnings really _are_ scoped to the particular JSX callsite. Often you may have several `map()` or such in one component, and figuring out which key is missing is annoying. Unlike other warnings where the fault may lie with props passed to the wrapper \"design system\" components, with missing keys in my experience the fix tends to be exactly where the JSX callsite is.\r\n\r\nWe already use source location in a custom way for the \"invalid type\" warning. In this PR, I'm reusing it (if available) to append an addendum with the line number and the filename to the message. This doesn't mess with the stack format but provides the exact pointer to what you need to fix for this particular warning. All other warnings are left as they are.\r\n\r\n### React 16\r\n\r\n<img width=\"598\" alt=\"Screenshot 2020-09-11 at 15 29 09\" src=\"https://user-images.githubusercontent.com/810438/92941691-9d2cc100-f448-11ea-9c52-c6bc4e234a34.png\">\r\n\r\n### React 17 (before this PR)\r\n\r\n<img width=\"651\" alt=\"Screenshot 2020-09-11 at 15 02 51\" src=\"https://user-images.githubusercontent.com/810438/92946179-31e5ed80-f44e-11ea-9c47-b72afc56c4c7.png\">\r\n\r\n### React 17 (after this PR)\r\n\r\n<img width=\"673\" alt=\"Screenshot 2020-09-11 at 15 28 06\" src=\"https://user-images.githubusercontent.com/810438/92941770-b33a8180-f448-11ea-8d22-24b67656aaee.png\">\r\n\r\nI verified the change in a real app with both new and old JSX transforms.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19818","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19818/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19818/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19818/events","html_url":"https://github.com/facebook/react/issues/19818","id":699350716,"node_id":"MDU6SXNzdWU2OTkzNTA3MTY=","number":19818,"title":"Bug: Glitchy behaviour when rendering/setState in an onKeyDown event callback","user":{"login":"maximedupre","id":5158181,"node_id":"MDQ6VXNlcjUxNTgxODE=","avatar_url":"https://avatars0.githubusercontent.com/u/5158181?v=4","gravatar_id":"","url":"https://api.github.com/users/maximedupre","html_url":"https://github.com/maximedupre","followers_url":"https://api.github.com/users/maximedupre/followers","following_url":"https://api.github.com/users/maximedupre/following{/other_user}","gists_url":"https://api.github.com/users/maximedupre/gists{/gist_id}","starred_url":"https://api.github.com/users/maximedupre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maximedupre/subscriptions","organizations_url":"https://api.github.com/users/maximedupre/orgs","repos_url":"https://api.github.com/users/maximedupre/repos","events_url":"https://api.github.com/users/maximedupre/events{/privacy}","received_events_url":"https://api.github.com/users/maximedupre/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-11T13:56:29Z","updated_at":"2020-09-30T04:27:53Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"React version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Please open the [minimal reproduction](https://codesandbox.io/s/silly-glitter-5xrdl)\r\n2. Focus your cursor at the end of the third input text\r\n3. Press CMD + Backspace\r\n\r\nThis successfully removes the third todo, but also sets the `text` attribute of the forth to an empty string, because the onChange event callback is called on the same input, but a new model is attached to it. Since CMD + Backspace has deleted the content of the input, the value of `e.target` in the `onChange` callback is an empty string, thus setting the value of the newly attached model to `''`.\r\n\r\nNote that if the input is not being focused on in the `componentDidUpdate` method, the onChange event does not occur. The onChange event also does not occur if we wrap the focusing of the input in a `setTimeout(..., 0)`.\r\n\r\n## The expected behavior\r\n\r\nThe input probably shouldn't be reused for a different model. The parent of the input is `<div key={todo.id}>`, so the input element should probably be recreated.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19800","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19800/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19800/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19800/events","html_url":"https://github.com/facebook/react/issues/19800","id":696941269,"node_id":"MDU6SXNzdWU2OTY5NDEyNjk=","number":19800,"title":"Bug: Memory leakage with setInterval","user":{"login":"secretlifeof","id":38684618,"node_id":"MDQ6VXNlcjM4Njg0NjE4","avatar_url":"https://avatars2.githubusercontent.com/u/38684618?v=4","gravatar_id":"","url":"https://api.github.com/users/secretlifeof","html_url":"https://github.com/secretlifeof","followers_url":"https://api.github.com/users/secretlifeof/followers","following_url":"https://api.github.com/users/secretlifeof/following{/other_user}","gists_url":"https://api.github.com/users/secretlifeof/gists{/gist_id}","starred_url":"https://api.github.com/users/secretlifeof/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/secretlifeof/subscriptions","organizations_url":"https://api.github.com/users/secretlifeof/orgs","repos_url":"https://api.github.com/users/secretlifeof/repos","events_url":"https://api.github.com/users/secretlifeof/events{/privacy}","received_events_url":"https://api.github.com/users/secretlifeof/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-09T16:00:17Z","updated_at":"2020-09-11T07:15:54Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nI am building an image carousel which changes images on an interval. Because my browser (Brave) showed an increasing memory usage I did a profile and discovered a memory leak. And my fans are are on mental overdrive..\r\n\r\nReact version: 16.13.1\r\nSandbox: https://codesandbox.io/s/eager-franklin-3km4k?file=/src/App.js (not made by me)\r\n\r\n<img width=\"1353\" alt=\"image\" src=\"https://user-images.githubusercontent.com/38684618/92622156-05529a00-f2c5-11ea-82d4-e87fd5feaaab.png\">\r\n\r\nThe image above is taken from profiling this [sandbox](https://codesandbox.io/s/eager-franklin-3km4k?file=/src/App.js). The example is rather simple and can be viewed below.\r\n\r\n```javascript\r\nexport default function App() {\r\n  const [counter, changeCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      changeCounter(prevCounter => prevCounter + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []); // setting [counter] does not remove memory leakage\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>SetInterval()</h1>\r\n      <h2>Sandbox counter: {counter}</h2>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nWhat seems to make it worse (more rapid incline) is putting more useEffects hooks that depend on counter.\r\nIs this a bug? Can I provide more information?","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19789","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19789/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19789/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19789/events","html_url":"https://github.com/facebook/react/pull/19789","id":696136761,"node_id":"MDExOlB1bGxSZXF1ZXN0NDgyMjYzMTg4","number":19789,"title":"`act` should work without mock Scheduler","user":{"login":"acdlite","id":3624098,"node_id":"MDQ6VXNlcjM2MjQwOTg=","avatar_url":"https://avatars0.githubusercontent.com/u/3624098?v=4","gravatar_id":"","url":"https://api.github.com/users/acdlite","html_url":"https://github.com/acdlite","followers_url":"https://api.github.com/users/acdlite/followers","following_url":"https://api.github.com/users/acdlite/following{/other_user}","gists_url":"https://api.github.com/users/acdlite/gists{/gist_id}","starred_url":"https://api.github.com/users/acdlite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acdlite/subscriptions","organizations_url":"https://api.github.com/users/acdlite/orgs","repos_url":"https://api.github.com/users/acdlite/repos","events_url":"https://api.github.com/users/acdlite/events{/privacy}","received_events_url":"https://api.github.com/users/acdlite/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-08T19:55:58Z","updated_at":"2020-09-09T19:33:59Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19789","html_url":"https://github.com/facebook/react/pull/19789","diff_url":"https://github.com/facebook/react/pull/19789.diff","patch_url":"https://github.com/facebook/react/pull/19789.patch"},"body":"Updates `act` so that it works in Concurrent and Blocking Mode without a mock Scheduler.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19781","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19781/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19781/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19781/events","html_url":"https://github.com/facebook/react/issues/19781","id":694517520,"node_id":"MDU6SXNzdWU2OTQ1MTc1MjA=","number":19781,"title":"Relax eslint-plugin-react-hooks for __DEV__ conditional hooks","user":{"login":"pke","id":164625,"node_id":"MDQ6VXNlcjE2NDYyNQ==","avatar_url":"https://avatars0.githubusercontent.com/u/164625?v=4","gravatar_id":"","url":"https://api.github.com/users/pke","html_url":"https://github.com/pke","followers_url":"https://api.github.com/users/pke/followers","following_url":"https://api.github.com/users/pke/following{/other_user}","gists_url":"https://api.github.com/users/pke/gists{/gist_id}","starred_url":"https://api.github.com/users/pke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pke/subscriptions","organizations_url":"https://api.github.com/users/pke/orgs","repos_url":"https://api.github.com/users/pke/repos","events_url":"https://api.github.com/users/pke/events{/privacy}","received_events_url":"https://api.github.com/users/pke/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-06T20:29:09Z","updated_at":"2020-09-11T04:20:10Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I think the usage of\r\n\r\n```\r\nif (__DEV__) {\r\n  useXXX()\r\n}\r\n```\r\n\r\nshould not trigger the ESLint rule for hooks. While it is a condition, the value of `__DEV__` can not change during the runtime of the app.\r\n\r\nCurrently I disable the rule on a per-line basis but I wonder if this pattern could be excluded from the the rules?","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19778","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19778/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19778/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19778/events","html_url":"https://github.com/facebook/react/issues/19778","id":694168387,"node_id":"MDU6SXNzdWU2OTQxNjgzODc=","number":19778,"title":"Bug: React devtools \"highlight updates when components render\" and profiler output not matching when using memo","user":{"login":"saranshkataria","id":1450819,"node_id":"MDQ6VXNlcjE0NTA4MTk=","avatar_url":"https://avatars1.githubusercontent.com/u/1450819?v=4","gravatar_id":"","url":"https://api.github.com/users/saranshkataria","html_url":"https://github.com/saranshkataria","followers_url":"https://api.github.com/users/saranshkataria/followers","following_url":"https://api.github.com/users/saranshkataria/following{/other_user}","gists_url":"https://api.github.com/users/saranshkataria/gists{/gist_id}","starred_url":"https://api.github.com/users/saranshkataria/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saranshkataria/subscriptions","organizations_url":"https://api.github.com/users/saranshkataria/orgs","repos_url":"https://api.github.com/users/saranshkataria/repos","events_url":"https://api.github.com/users/saranshkataria/events{/privacy}","received_events_url":"https://api.github.com/users/saranshkataria/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-05T20:27:48Z","updated_at":"2020-09-07T20:05:08Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: N/A\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create a dynamic list component\r\n2. Use memo to memoize the list, dynamically change one of the properties of an item on the list\r\n3. Open devtools and check the \"highlight updates when components render\" and \"record why component rendered while profiling\" option\r\n4. Start profiling and recording\r\n5. All components of the list are shown as being re-rendered\r\n6. Open React profiler and see the re-rendered items\r\n7. React profiler shows that only the selected item on the list was re-rendered\r\n\r\n\r\n![2020-09-05 13-23-43](https://user-images.githubusercontent.com/1450819/92313029-9222ee00-ef7b-11ea-97c2-6ee0212b2d1d.gif)\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://codesandbox.io/s/practical-lovelace-ch4mw\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nReact Devtools \"highlight updates when components render\" highlights all components. When using the profiler to do the same recording, it shows that only one component was re-rendering.\r\n\r\n(My guess is that highlight updates is hooking into the function call itself and the profiler is looking into DOM changes and showing only those that actually re-render.)\r\n\r\n## The expected behavior\r\nReact Devtools \"highlight updates when components render\" should only show the components that were re-rendered","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19765","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19765/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19765/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19765/events","html_url":"https://github.com/facebook/react/issues/19765","id":692217829,"node_id":"MDU6SXNzdWU2OTIyMTc4Mjk=","number":19765,"title":"App crashes upon the automatic attempt to inspect hooks on a Fiber with tag of type ClassComponent","user":{"login":"shmuelhizmi","id":48323313,"node_id":"MDQ6VXNlcjQ4MzIzMzEz","avatar_url":"https://avatars0.githubusercontent.com/u/48323313?v=4","gravatar_id":"","url":"https://api.github.com/users/shmuelhizmi","html_url":"https://github.com/shmuelhizmi","followers_url":"https://api.github.com/users/shmuelhizmi/followers","following_url":"https://api.github.com/users/shmuelhizmi/following{/other_user}","gists_url":"https://api.github.com/users/shmuelhizmi/gists{/gist_id}","starred_url":"https://api.github.com/users/shmuelhizmi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shmuelhizmi/subscriptions","organizations_url":"https://api.github.com/users/shmuelhizmi/orgs","repos_url":"https://api.github.com/users/shmuelhizmi/repos","events_url":"https://api.github.com/users/shmuelhizmi/events{/privacy}","received_events_url":"https://api.github.com/users/shmuelhizmi/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-03T19:04:55Z","updated_at":"2020-09-04T15:59:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"the issue from https://github.com/facebook/react-devtools/issues/1352 still occur when trying to use react-devtools with a nodejs react application (the issue was closed due to the react-devtools rewrite of version 4)","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19756","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19756/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19756/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19756/events","html_url":"https://github.com/facebook/react/issues/19756","id":691656708,"node_id":"MDU6SXNzdWU2OTE2NTY3MDg=","number":19756,"title":"Bug: React DevTools throws ReferenceError: regeneratorRuntime is not defined","user":{"login":"leidegre","id":63085,"node_id":"MDQ6VXNlcjYzMDg1","avatar_url":"https://avatars2.githubusercontent.com/u/63085?v=4","gravatar_id":"","url":"https://api.github.com/users/leidegre","html_url":"https://github.com/leidegre","followers_url":"https://api.github.com/users/leidegre/followers","following_url":"https://api.github.com/users/leidegre/following{/other_user}","gists_url":"https://api.github.com/users/leidegre/gists{/gist_id}","starred_url":"https://api.github.com/users/leidegre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leidegre/subscriptions","organizations_url":"https://api.github.com/users/leidegre/orgs","repos_url":"https://api.github.com/users/leidegre/repos","events_url":"https://api.github.com/users/leidegre/events{/privacy}","received_events_url":"https://api.github.com/users/leidegre/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2020-09-03T05:36:57Z","updated_at":"2020-09-08T13:39:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"React version: 16.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. In the Chrome script debugger, enable \"Pause on caught exceptions\"\r\n2. Open React DevTools in a app that doesn't use babel or webpack\r\n3. ReferenceError: regeneratorRuntime is not defined\r\n\r\n## The current behavior\r\n\r\n```\r\nReferenceError: regeneratorRuntime is not defined\r\n```\r\n\r\nThe source of this error seems to be something like this:\r\n\r\n```\r\ntry {\r\n  // add if support for Symbol.iterator is present\r\n  __webpack_require__(23)(Yallist);\r\n} catch (er) {}\r\n```\r\n\r\nFrom `chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/react_devtools_backend.js`\r\n\r\n## The expected behavior\r\n\r\nNo errors are thrown. It's really annoying when React or it's tooling is throwing exceptions because it makes me having to step through a lot of noise when I'm debugging my own stuff. If this could be avoided that would be much appreciated.\r\n\r\n---\r\n\r\nI get that his might not be fixable and if so, feel free to close but please keep it in mind. Please don't throw exceptions if you absolutely musn't.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19753","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19753/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19753/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19753/events","html_url":"https://github.com/facebook/react/pull/19753","id":691384612,"node_id":"MDExOlB1bGxSZXF1ZXN0NDc4MTM3Njc4","number":19753,"title":"Clarify default message for what changed","user":{"login":"bpernick","id":57197898,"node_id":"MDQ6VXNlcjU3MTk3ODk4","avatar_url":"https://avatars1.githubusercontent.com/u/57197898?v=4","gravatar_id":"","url":"https://api.github.com/users/bpernick","html_url":"https://github.com/bpernick","followers_url":"https://api.github.com/users/bpernick/followers","following_url":"https://api.github.com/users/bpernick/following{/other_user}","gists_url":"https://api.github.com/users/bpernick/gists{/gist_id}","starred_url":"https://api.github.com/users/bpernick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bpernick/subscriptions","organizations_url":"https://api.github.com/users/bpernick/orgs","repos_url":"https://api.github.com/users/bpernick/repos","events_url":"https://api.github.com/users/bpernick/events{/privacy}","received_events_url":"https://api.github.com/users/bpernick/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-02T20:07:47Z","updated_at":"2020-09-13T21:30:13Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19753","html_url":"https://github.com/facebook/react/pull/19753","diff_url":"https://github.com/facebook/react/pull/19753.diff","patch_url":"https://github.com/facebook/react/pull/19753.patch"},"body":"\r\n## Summary\r\nAddresses #19732\r\n\r\nThe default answer to 'Why did this component render?' was 'The parent component rendered'. However React is not checking to see if the parent component re-rendered; it is simply guessing and isn't always correct. I changed the message to 'Not verified. Likely that parent component rendered.' to clarify that this is a default message.\r\n\r\nI think the next step is to track down the specific rendering case that caused the developer to report this bug and write a message for that as well.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19749","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19749/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19749/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19749/events","html_url":"https://github.com/facebook/react/issues/19749","id":690966878,"node_id":"MDU6SXNzdWU2OTA5NjY4Nzg=","number":19749,"title":"Bug: react-hooks/exhaustive-deps includes too much logic?","user":{"login":"dartess","id":15047511,"node_id":"MDQ6VXNlcjE1MDQ3NTEx","avatar_url":"https://avatars2.githubusercontent.com/u/15047511?v=4","gravatar_id":"","url":"https://api.github.com/users/dartess","html_url":"https://github.com/dartess","followers_url":"https://api.github.com/users/dartess/followers","following_url":"https://api.github.com/users/dartess/following{/other_user}","gists_url":"https://api.github.com/users/dartess/gists{/gist_id}","starred_url":"https://api.github.com/users/dartess/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dartess/subscriptions","organizations_url":"https://api.github.com/users/dartess/orgs","repos_url":"https://api.github.com/users/dartess/repos","events_url":"https://api.github.com/users/dartess/events{/privacy}","received_events_url":"https://api.github.com/users/dartess/received_events","type":"User","site_admin":false},"labels":[{"id":1249821345,"node_id":"MDU6TGFiZWwxMjQ5ODIxMzQ1","url":"https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules","name":"Component: ESLint Rules","color":"f7afdb","default":false,"description":""},{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-02T12:08:27Z","updated_at":"2020-09-02T21:44:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Judging by the name the rule should check `deps` of some hooks. Instead, it checks for other things as well, such as the asynchronous effects. This violates the single responsibility principle and reduces the flexibility of the rule.\r\n\r\nExample:\r\n\r\nI am writing a new hook that must accept an asynchronous function, but must have deps.\r\n\r\nIf I just write it, I won't get linter errors for missing dependencies:\r\n\r\n```\r\n    useEffectAsync(\r\n        async (getIsIgnore) => {\r\n            console.log(roleCode)\r\n        },\r\n        [], // missing deps: roleCode\r\n    );\r\n```\r\n\r\nNow I can set up a rule, which is very cool:\r\n\r\n```\r\n        'react-hooks/exhaustive-deps': ['warn', {\r\n            'additionalHooks': '(useEffectAsync|useEffectOnUpdate)'\r\n        }],\r\n```\r\n\r\nBut if I do that, I get a warning from the linter about the async function.\r\n\r\n\r\n```\r\n    useEffectAsync(\r\n        async (getIsIgnore) => { // warn about async func, what is useless here\r\n            console.log(roleCode)\r\n        },\r\n        [roleCode], // ok, can be fixed automatically\r\n    );\r\n```\r\n\r\nI think the rule for checking the correctness of the effects functions should be separate. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19732","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19732/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19732/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19732/events","html_url":"https://github.com/facebook/react/issues/19732","id":689604207,"node_id":"MDU6SXNzdWU2ODk2MDQyMDc=","number":19732,"title":"Bug: React DevTools 'Why did this component render?' incorrectly reports 'The parent component rendered'","user":{"login":"bgirard","id":793565,"node_id":"MDQ6VXNlcjc5MzU2NQ==","avatar_url":"https://avatars0.githubusercontent.com/u/793565?v=4","gravatar_id":"","url":"https://api.github.com/users/bgirard","html_url":"https://github.com/bgirard","followers_url":"https://api.github.com/users/bgirard/followers","following_url":"https://api.github.com/users/bgirard/following{/other_user}","gists_url":"https://api.github.com/users/bgirard/gists{/gist_id}","starred_url":"https://api.github.com/users/bgirard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bgirard/subscriptions","organizations_url":"https://api.github.com/users/bgirard/orgs","repos_url":"https://api.github.com/users/bgirard/repos","events_url":"https://api.github.com/users/bgirard/events{/privacy}","received_events_url":"https://api.github.com/users/bgirard/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-31T23:15:59Z","updated_at":"2020-09-03T12:33:50Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"React Devtools shows why a component has re-render but sometimes it says 'The parent component rendered' when it just doesn't know. Ideally we would split out these two scenario, otherwise the string should highlight the uncertainty. Me and another Jimmy both went debugging the wrong thing and I lost time assuming the message was correct.\r\n\r\nReact version: React DevTools 4.8.2\r\n\r\n## Steps To Reproduce\r\n\r\nI believe this bug happens when there's a context changing but I'm not positive.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19731","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19731/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19731/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19731/events","html_url":"https://github.com/facebook/react/issues/19731","id":689421552,"node_id":"MDU6SXNzdWU2ODk0MjE1NTI=","number":19731,"title":"Craft a demo profile for the scheduling profiler","user":{"login":"kartikcho","id":48270786,"node_id":"MDQ6VXNlcjQ4MjcwNzg2","avatar_url":"https://avatars1.githubusercontent.com/u/48270786?v=4","gravatar_id":"","url":"https://api.github.com/users/kartikcho","html_url":"https://github.com/kartikcho","followers_url":"https://api.github.com/users/kartikcho/followers","following_url":"https://api.github.com/users/kartikcho/following{/other_user}","gists_url":"https://api.github.com/users/kartikcho/gists{/gist_id}","starred_url":"https://api.github.com/users/kartikcho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kartikcho/subscriptions","organizations_url":"https://api.github.com/users/kartikcho/orgs","repos_url":"https://api.github.com/users/kartikcho/repos","events_url":"https://api.github.com/users/kartikcho/events{/privacy}","received_events_url":"https://api.github.com/users/kartikcho/received_events","type":"User","site_admin":false},"labels":[{"id":2281766624,"node_id":"MDU6TGFiZWwyMjgxNzY2NjI0","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Scheduling%20Profiler","name":"Component: Scheduling Profiler","color":"1dc3d6","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-31T18:53:34Z","updated_at":"2020-08-31T20:42:36Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"We should create a custom demo profile to show the various performance 'patterns' observed in the scheduling profiler.\r\n\r\n**cc: @bvaughn @taneliang**","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19730","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19730/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19730/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19730/events","html_url":"https://github.com/facebook/react/pull/19730","id":689276502,"node_id":"MDExOlB1bGxSZXF1ZXN0NDc2MzU1NDUw","number":19730,"title":"Remove unused argument from `getStateFromUpdate`","user":{"login":"inottn","id":18509404,"node_id":"MDQ6VXNlcjE4NTA5NDA0","avatar_url":"https://avatars2.githubusercontent.com/u/18509404?v=4","gravatar_id":"","url":"https://api.github.com/users/inottn","html_url":"https://github.com/inottn","followers_url":"https://api.github.com/users/inottn/followers","following_url":"https://api.github.com/users/inottn/following{/other_user}","gists_url":"https://api.github.com/users/inottn/gists{/gist_id}","starred_url":"https://api.github.com/users/inottn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/inottn/subscriptions","organizations_url":"https://api.github.com/users/inottn/orgs","repos_url":"https://api.github.com/users/inottn/repos","events_url":"https://api.github.com/users/inottn/events{/privacy}","received_events_url":"https://api.github.com/users/inottn/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-31T15:02:27Z","updated_at":"2020-09-01T04:06:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19730","html_url":"https://github.com/facebook/react/pull/19730","diff_url":"https://github.com/facebook/react/pull/19730.diff","patch_url":"https://github.com/facebook/react/pull/19730.patch"},"body":"This PR just removes an unused argument.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19713","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19713/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19713/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19713/events","html_url":"https://github.com/facebook/react/issues/19713","id":687585476,"node_id":"MDU6SXNzdWU2ODc1ODU0NzY=","number":19713,"title":"Consider improving React.cloneElement validation in DEV","user":{"login":"markspolakovs","id":2904440,"node_id":"MDQ6VXNlcjI5MDQ0NDA=","avatar_url":"https://avatars3.githubusercontent.com/u/2904440?v=4","gravatar_id":"","url":"https://api.github.com/users/markspolakovs","html_url":"https://github.com/markspolakovs","followers_url":"https://api.github.com/users/markspolakovs/followers","following_url":"https://api.github.com/users/markspolakovs/following{/other_user}","gists_url":"https://api.github.com/users/markspolakovs/gists{/gist_id}","starred_url":"https://api.github.com/users/markspolakovs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markspolakovs/subscriptions","organizations_url":"https://api.github.com/users/markspolakovs/orgs","repos_url":"https://api.github.com/users/markspolakovs/repos","events_url":"https://api.github.com/users/markspolakovs/events{/privacy}","received_events_url":"https://api.github.com/users/markspolakovs/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-27T22:35:36Z","updated_at":"2020-08-27T22:36:19Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"React version: 16.12.0\r\n\r\nThis bit me earlier: if you try to `cloneElement` a component type, you'll get a confusing error message. `createElement` has validation for silly inputs in DEV, maybe `cloneElement` should have the same.\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create new React app\r\n2. `React.render(React.cloneElement(App, {}), document.getElementById('root'));`\r\n\r\nLink to code example: https://codesandbox.io/s/cranky-dawn-ret64?file=/src/index.js\r\n\r\n## The current behavior\r\n\r\n`Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.`\r\n\r\n## The expected behavior\r\n\r\nA more helpful error message, like `createElement` would give, for example `React.cloneElement: element type is invalid -- expected a React element but got: function. You're likely trying to clone a component - you want createElement instead.`","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19710","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19710/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19710/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19710/events","html_url":"https://github.com/facebook/react/pull/19710","id":687437949,"node_id":"MDExOlB1bGxSZXF1ZXN0NDc0ODY0MDg3","number":19710,"title":"Add an option to DevTools to enable double-logging","user":{"login":"Jchinonso","id":23220841,"node_id":"MDQ6VXNlcjIzMjIwODQx","avatar_url":"https://avatars0.githubusercontent.com/u/23220841?v=4","gravatar_id":"","url":"https://api.github.com/users/Jchinonso","html_url":"https://github.com/Jchinonso","followers_url":"https://api.github.com/users/Jchinonso/followers","following_url":"https://api.github.com/users/Jchinonso/following{/other_user}","gists_url":"https://api.github.com/users/Jchinonso/gists{/gist_id}","starred_url":"https://api.github.com/users/Jchinonso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jchinonso/subscriptions","organizations_url":"https://api.github.com/users/Jchinonso/orgs","repos_url":"https://api.github.com/users/Jchinonso/repos","events_url":"https://api.github.com/users/Jchinonso/events{/privacy}","received_events_url":"https://api.github.com/users/Jchinonso/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-08-27T18:05:40Z","updated_at":"2020-09-17T09:01:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19710","html_url":"https://github.com/facebook/react/pull/19710","diff_url":"https://github.com/facebook/react/pull/19710.diff","patch_url":"https://github.com/facebook/react/pull/19710.patch"},"body":"## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n We currently plan to suppress double-logging in development by overriding console in #18547. However, this can be confusing for some scenarios and double logging may be preferable in them. This change adds a toggle to DevTools that would allow to re-enable it on this screen:\r\n\r\n![90825360-b7372000-e330-11ea-9128-803d35d27e07](https://user-images.githubusercontent.com/23220841/91745574-13146b00-ebb3-11ea-9035-2eff4ed213a6.png)\r\n\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n![Screenshot from 2020-09-04 00-18-20](https://user-images.githubusercontent.com/23220841/92182794-6ea95780-ee44-11ea-8156-0d77ec47487a.png)\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19709","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19709/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19709/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19709/events","html_url":"https://github.com/facebook/react/pull/19709","id":687210578,"node_id":"MDExOlB1bGxSZXF1ZXN0NDc0NjczMjU3","number":19709,"title":"Remove `Snapshot` from the `useMutableSource` subscribe function's type","user":{"login":"jamesknelson","id":161707,"node_id":"MDQ6VXNlcjE2MTcwNw==","avatar_url":"https://avatars3.githubusercontent.com/u/161707?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesknelson","html_url":"https://github.com/jamesknelson","followers_url":"https://api.github.com/users/jamesknelson/followers","following_url":"https://api.github.com/users/jamesknelson/following{/other_user}","gists_url":"https://api.github.com/users/jamesknelson/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesknelson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesknelson/subscriptions","organizations_url":"https://api.github.com/users/jamesknelson/orgs","repos_url":"https://api.github.com/users/jamesknelson/repos","events_url":"https://api.github.com/users/jamesknelson/events{/privacy}","received_events_url":"https://api.github.com/users/jamesknelson/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-27T12:40:19Z","updated_at":"2020-08-27T12:49:25Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19709","html_url":"https://github.com/facebook/react/pull/19709","diff_url":"https://github.com/facebook/react/pull/19709.diff","patch_url":"https://github.com/facebook/react/pull/19709.patch"},"body":"<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nCurrently, the types for the subscribe function passed to `useMutableSource` indicate that the subscribe callback should receive a `Snapshot`. However, this snapshot is never actually used.\r\n\r\nThis PR removes the Snapshot type from the callback, which makes it clearer that it's possible to `useMutableSource` without passing a snapshot to subscribe callbacks. This is important for library developers, as the requirement for subscribe callbacks to receive a snapshot could significantly change the design of library code.\r\n\r\n## Test Plan\r\n\r\nThis PR only changes types, and `yarn lint` and `yarn flow` pass, so it seems there are no extra tests needed.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19702","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19702/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19702/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19702/events","html_url":"https://github.com/facebook/react/pull/19702","id":686555545,"node_id":"MDExOlB1bGxSZXF1ZXN0NDc0MTAyMjcw","number":19702,"title":"Failing test for Context.Consumer in suspended Suspense","user":{"login":"overlookmotel","id":557937,"node_id":"MDQ6VXNlcjU1NzkzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/557937?v=4","gravatar_id":"","url":"https://api.github.com/users/overlookmotel","html_url":"https://github.com/overlookmotel","followers_url":"https://api.github.com/users/overlookmotel/followers","following_url":"https://api.github.com/users/overlookmotel/following{/other_user}","gists_url":"https://api.github.com/users/overlookmotel/gists{/gist_id}","starred_url":"https://api.github.com/users/overlookmotel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/overlookmotel/subscriptions","organizations_url":"https://api.github.com/users/overlookmotel/orgs","repos_url":"https://api.github.com/users/overlookmotel/repos","events_url":"https://api.github.com/users/overlookmotel/events{/privacy}","received_events_url":"https://api.github.com/users/overlookmotel/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-26T19:14:27Z","updated_at":"2020-09-25T13:01:24Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19702","html_url":"https://github.com/facebook/react/pull/19702","diff_url":"https://github.com/facebook/react/pull/19702.diff","patch_url":"https://github.com/facebook/react/pull/19702.patch"},"body":"Failing test for issue #19701.\r\n\r\nApologies if I'm not understanding the correct use of `expect(Scheduler).toHaveYielded()`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19701","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19701/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19701/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19701/events","html_url":"https://github.com/facebook/react/issues/19701","id":686516734,"node_id":"MDU6SXNzdWU2ODY1MTY3MzQ=","number":19701,"title":"Bug: `Context.Consumer` inside `Suspense` does not receive context updates while suspended","user":{"login":"overlookmotel","id":557937,"node_id":"MDQ6VXNlcjU1NzkzNw==","avatar_url":"https://avatars0.githubusercontent.com/u/557937?v=4","gravatar_id":"","url":"https://api.github.com/users/overlookmotel","html_url":"https://github.com/overlookmotel","followers_url":"https://api.github.com/users/overlookmotel/followers","following_url":"https://api.github.com/users/overlookmotel/following{/other_user}","gists_url":"https://api.github.com/users/overlookmotel/gists{/gist_id}","starred_url":"https://api.github.com/users/overlookmotel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/overlookmotel/subscriptions","organizations_url":"https://api.github.com/users/overlookmotel/orgs","repos_url":"https://api.github.com/users/overlookmotel/repos","events_url":"https://api.github.com/users/overlookmotel/events{/privacy}","received_events_url":"https://api.github.com/users/overlookmotel/received_events","type":"User","site_admin":false},"labels":[{"id":739761016,"node_id":"MDU6TGFiZWw3Mzk3NjEwMTY=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Reconciler","name":"Component: Reconciler","color":"f9a798","default":false,"description":null},{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-08-26T18:09:04Z","updated_at":"2020-10-01T17:37:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"A `<Context.Consumer>` callback inside a suspended `<Suspense>` boundary does not receive updates when context value changes.\r\n\r\nThis issue was originally found with React Router (https://github.com/ReactTraining/react-router/issues/7137) but can be reproduced with React alone.\r\n\r\nReact version: 16.13.1 or 17.0.0-rc.0 (and at least *some* earlier versions too)\r\n\r\n## Steps To Reproduce\r\n\r\nhttps://codesandbox.io/s/suspense-context-test-case-6jlsq\r\n\r\n## The current behavior\r\n\r\nIn the example above, clicking on the \"About\" button puts the `<Suspense>` boundary into a suspended state. Clicking \"Home\" updates the context value, but the `<Context.Consumer>` callback is not called with this updated value. Therefore the page never navigates back to \"Home\".\r\n\r\nPlease note that `Received context: home` is not logged after the \"Home\" button is pressed.\r\n\r\n## The expected behavior\r\n\r\nThe `<Context.Consumer>` callback should be called with value `'home'` when the value of the context is updated.\r\n\r\nPlease note that the problem does not occur if any of:\r\n\r\n1. the Suspense boundary is never suspended (uncomment the first line of `About` function to verify).\r\n2. `useContext()` is used in place of `<Context.Consumer>` (substitute `<SwitchWithUseContext />` for `<Switch />`).\r\n3. the contents of `Switch` function is inlined within the `<Suspense>` rather than in a separate component.\r\n\r\nThe last of these leads me to suspect that the problem may be related to https://github.com/facebook/react/issues/17356. In the example, `<Context.Consumer>` is within a `Switch` component. But the `<Switch>` element inside `<Suspense>` never changes - so it's effectively memoized. I wonder if this is why it doesn't receive context updates?","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19695","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19695/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19695/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19695/events","html_url":"https://github.com/facebook/react/issues/19695","id":685962666,"node_id":"MDU6SXNzdWU2ODU5NjI2NjY=","number":19695,"title":"Bug ?: Weird reconciliation result on list elements from array with same length as the list.","user":{"login":"mark-night","id":48889700,"node_id":"MDQ6VXNlcjQ4ODg5NzAw","avatar_url":"https://avatars3.githubusercontent.com/u/48889700?v=4","gravatar_id":"","url":"https://api.github.com/users/mark-night","html_url":"https://github.com/mark-night","followers_url":"https://api.github.com/users/mark-night/followers","following_url":"https://api.github.com/users/mark-night/following{/other_user}","gists_url":"https://api.github.com/users/mark-night/gists{/gist_id}","starred_url":"https://api.github.com/users/mark-night/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mark-night/subscriptions","organizations_url":"https://api.github.com/users/mark-night/orgs","repos_url":"https://api.github.com/users/mark-night/repos","events_url":"https://api.github.com/users/mark-night/events{/privacy}","received_events_url":"https://api.github.com/users/mark-night/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2020-08-26T02:49:35Z","updated_at":"2020-09-04T17:14:21Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.13.1\r\n\r\n**The thing turns out to be possible something else other than what it looks like when I first post this. So I've changed the title to better reflect the issue and updated some comment to the example code below. Nothing else were modified just to keep a clear record how things are discovered.**\r\n\r\n## Steps To Reproduce\r\n\r\n1. Run this code and check in browser what elements are destroyed or reused.\r\n```\r\nimport React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst num = [3, 4, 5, 6]; // array serving content for list elements\r\nconst loop = [1, 2, 3, 4]; // array to be mapped to generate list\r\n\r\nconst RollingNums = () => {\r\n  const [cur, setCur] = React.useState(0); // control number rolling\r\n\r\n  return (\r\n    <div className=\"problem\">\r\n      <ul>\r\n        {loop.map((value, index) => { // list item counts are fixed to loop.length\r\n          // some simple CS to get continued list item\r\n          let idx = index + cur; \r\n          idx =\r\n            idx >= 0\r\n              ? idx % num.length\r\n              : ((idx % num.length) + num.length) % num.length;\r\n          const target = num[idx].toString(); // get content from array num for current list element\r\n          return (\r\n            <li key={target} className={target}>\r\n              {target}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className=\"control\">\r\n        <button onClick={() => setCur((prev) => prev - 1)}>-</button>\r\n        <span>{cur}</span>\r\n        <button onClick={() => setCur((prev) => prev + 1)}>+</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<RollingNums />, document.querySelector('#root'));\r\n```  \r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\n[Example on codepen](https://codepen.io/mark-night/pen/bGpqvyL).\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nClicking on `+` destroys the first item and recreates it as the last item, while reusing all others. Clicking on `-` reuses first item (the last item from last render) and destroys/recreates all others.\r\n**This only happens if `num` and `loop` have same length.** If `num` has more items than `loop` does, items are destroyed/reused as expected.\r\n\r\n## The expected behavior\r\nAll items should be reused instead of being destroyed.\r\n\r\nAlthough it looks perfectly fine in this simple app, everything still work. However, all class driven transitions mess up due to item destroy/recreate, and children elements underneath `<li>` will reinitialize (e.g. `<img>` reload) due to the same reason.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19692","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19692/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19692/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19692/events","html_url":"https://github.com/facebook/react/issues/19692","id":685609502,"node_id":"MDU6SXNzdWU2ODU2MDk1MDI=","number":19692,"title":"Bug: different handling of onMouseEnter & onMouseLeave based on pointerEvents in Chrome","user":{"login":"layershifter","id":14183168,"node_id":"MDQ6VXNlcjE0MTgzMTY4","avatar_url":"https://avatars0.githubusercontent.com/u/14183168?v=4","gravatar_id":"","url":"https://api.github.com/users/layershifter","html_url":"https://github.com/layershifter","followers_url":"https://api.github.com/users/layershifter/followers","following_url":"https://api.github.com/users/layershifter/following{/other_user}","gists_url":"https://api.github.com/users/layershifter/gists{/gist_id}","starred_url":"https://api.github.com/users/layershifter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/layershifter/subscriptions","organizations_url":"https://api.github.com/users/layershifter/orgs","repos_url":"https://api.github.com/users/layershifter/repos","events_url":"https://api.github.com/users/layershifter/events{/privacy}","received_events_url":"https://api.github.com/users/layershifter/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-25T16:05:35Z","updated_at":"2020-08-25T18:06:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"React: 16.13.1\r\nReact-DOM: 16.13.1\r\n\r\nChrome 84.0.4147.135.\r\nMS Edge 84.0.522.63.\r\n\r\n---\r\n\r\n_This looks somehow related to #4251._\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open a CodeSandbox, https://codesandbox.io/s/laughing-sound-ox5yz\r\n2. Move your mouse from the \"point 1\" to \"point 2\". Move your mouse from the \"point 2\" to \"point 1\". \r\n\r\n## The current behavior\r\n\r\n![image](https://user-images.githubusercontent.com/14183168/91198165-81ad8080-e6fc-11ea-9148-5a3aac8102e4.png)\r\n\r\nNotice in your console:\r\n```\r\n#disabled:mouseenter \r\n```\r\n\r\nFor the button `#disabled-style` with the same movement:\r\n\r\n```\r\n#disabled-style:mouseenter \r\n#disabled-style:mouseleave \r\n```\r\n\r\n_The difference is that `#disabled-style` has `pointer-events: none`._\r\n\r\n## The expected behavior\r\n\r\nBoth buttons should log the same output.\r\n\r\n## It works?\r\n\r\n- for the native DOM (https://codesandbox.io/s/recursing-leftpad-y5xbb)\r\n- in IE11, Edge Dev 86, Firefox 79/80\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19683","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19683/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19683/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19683/events","html_url":"https://github.com/facebook/react/issues/19683","id":684475103,"node_id":"MDU6SXNzdWU2ODQ0NzUxMDM=","number":19683,"title":"Support Firefox profiles in scheduling profiler","user":{"login":"taneliang","id":12784593,"node_id":"MDQ6VXNlcjEyNzg0NTkz","avatar_url":"https://avatars2.githubusercontent.com/u/12784593?v=4","gravatar_id":"","url":"https://api.github.com/users/taneliang","html_url":"https://github.com/taneliang","followers_url":"https://api.github.com/users/taneliang/followers","following_url":"https://api.github.com/users/taneliang/following{/other_user}","gists_url":"https://api.github.com/users/taneliang/gists{/gist_id}","starred_url":"https://api.github.com/users/taneliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taneliang/subscriptions","organizations_url":"https://api.github.com/users/taneliang/orgs","repos_url":"https://api.github.com/users/taneliang/repos","events_url":"https://api.github.com/users/taneliang/events{/privacy}","received_events_url":"https://api.github.com/users/taneliang/received_events","type":"User","site_admin":false},"labels":[{"id":2281766624,"node_id":"MDU6TGFiZWwyMjgxNzY2NjI0","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Scheduling%20Profiler","name":"Component: Scheduling Profiler","color":"1dc3d6","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-24T08:30:58Z","updated_at":"2020-08-31T14:49:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"The scheduling profiler only supports Chrome profiles at the moment.\r\n\r\nMigrated from https://github.com/MLH-Fellowship/scheduling-profiler-prototype/issues/52\r\n\r\n## Possible Implementation Plan\r\n\r\n1. Export Firefox importing code from Speedscope in this file in our fork: https://github.com/taneliang/speedscope/blob/fork-for-scheduling-profiler/src/library.ts\r\n1. Refactor `preprocessData` to remove dependency on Chrome-specific types\r\n1. Add Firefox profile support to `preprocessData`. Possibly use this line to read the JSON data: https://github.com/jlfwong/speedscope/blob/64fe369c42d956f6e35f8eb79c19f52cd6427fd6/src/import/index.ts#L146\r\n1. Add separate Firefox profile import button to `ImportPage` (so that we don't have to guess the profile type)","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19671","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19671/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19671/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19671/events","html_url":"https://github.com/facebook/react/issues/19671","id":683461914,"node_id":"MDU6SXNzdWU2ODM0NjE5MTQ=","number":19671,"title":"Discussion: Async cleanups of useEffect","user":{"login":"Andarist","id":9800850,"node_id":"MDQ6VXNlcjk4MDA4NTA=","avatar_url":"https://avatars2.githubusercontent.com/u/9800850?v=4","gravatar_id":"","url":"https://api.github.com/users/Andarist","html_url":"https://github.com/Andarist","followers_url":"https://api.github.com/users/Andarist/followers","following_url":"https://api.github.com/users/Andarist/following{/other_user}","gists_url":"https://api.github.com/users/Andarist/gists{/gist_id}","starred_url":"https://api.github.com/users/Andarist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Andarist/subscriptions","organizations_url":"https://api.github.com/users/Andarist/orgs","repos_url":"https://api.github.com/users/Andarist/repos","events_url":"https://api.github.com/users/Andarist/events{/privacy}","received_events_url":"https://api.github.com/users/Andarist/received_events","type":"User","site_admin":false},"labels":[{"id":710375792,"node_id":"MDU6TGFiZWw3MTAzNzU3OTI=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Discussion","name":"Type: Discussion","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2020-08-21T10:26:29Z","updated_at":"2020-09-14T19:16:53Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Hi 👋 \r\n\r\nI've been asking about this on Twitter but was told that the issues here might be better to discuss this stuff.\r\n\r\nMy general concern is that async cleanups might lead to weird race conditions. It may be unwarranted but the concept itself sounds quite alarming to me and I'd like to discuss this, if possible.\r\n\r\nIf you go with the async cleanups then there is no guarantee that a scheduled work (or just any listeners) would get cleaned up before you get rid of a component instance, so for example:\r\n```js\r\nuseEffect(() => {\r\n  if (state !== 'foo') return\r\n  const id = setTimeout(() => setShouldAnimate(true), 300)\r\n  return () => clearTimeout(id)\r\n}, [state])\r\n```\r\nThis might not work as intended. There is an off-chance that the scheduled timeout will fire after the containing component unmounts but before the timer gets disposed.\r\n\r\nCalling `setState` after unmounting was always a sign of broken assumptions in the code or some programming error and React has been warning about it. I was told though that this has been accounted for and the warning is being suppressed now - so it won't pop up for users if `setState` got called in that short timeframe. So at least that's OK.\r\n\r\nI'm worried though that a disposed component can still cause an unwanted side-effect in a parent. One can imagine some scenarios where that would matter.\r\n\r\n1. orchestrating animation - an unmounted component tells the parent to trigger some sort of animation. The reason why the animation should happen is owned by a child, but it's also based on an additional timer because the reason might become invalid if the user performs some invalidating action quickly enough. It's not obvious here that `useLayoutEffect` should be used here to achieve instant cleanup.\r\n2. similar case: orchestrating some in-product tour, triggering tooltips, arrows, whatever in the parent. It becomes even less apparent that this should be `useLayoutEffect`-based to achieve instant clean up as this is not related to layout, even remotely. This is business logic.\r\n\r\nI hope my concerns are not warranted and you could clear up them for me, but right now I'm worried a lot that this is such a small difference for most of the people and that's it's hard to spot in the code that this might become a source of many very subtle bugs. \r\n\r\ncc @gaearon @bvaughn ","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19670","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19670/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19670/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19670/events","html_url":"https://github.com/facebook/react/issues/19670","id":683461312,"node_id":"MDU6SXNzdWU2ODM0NjEzMTI=","number":19670,"title":"Add documentation for views abstraction","user":{"login":"kartikcho","id":48270786,"node_id":"MDQ6VXNlcjQ4MjcwNzg2","avatar_url":"https://avatars1.githubusercontent.com/u/48270786?v=4","gravatar_id":"","url":"https://api.github.com/users/kartikcho","html_url":"https://github.com/kartikcho","followers_url":"https://api.github.com/users/kartikcho/followers","following_url":"https://api.github.com/users/kartikcho/following{/other_user}","gists_url":"https://api.github.com/users/kartikcho/gists{/gist_id}","starred_url":"https://api.github.com/users/kartikcho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kartikcho/subscriptions","organizations_url":"https://api.github.com/users/kartikcho/orgs","repos_url":"https://api.github.com/users/kartikcho/repos","events_url":"https://api.github.com/users/kartikcho/events{/privacy}","received_events_url":"https://api.github.com/users/kartikcho/received_events","type":"User","site_admin":false},"labels":[{"id":2281766624,"node_id":"MDU6TGFiZWwyMjgxNzY2NjI0","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Scheduling%20Profiler","name":"Component: Scheduling Profiler","color":"1dc3d6","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-21T10:25:23Z","updated_at":"2020-08-21T12:50:58Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"https://github.com/MLH-Fellowship/scheduling-profiler-prototype/pull/80 implemented a views abstraction for the Scheduling Profiler. Although the PR description is reasonably comprehensive, it needs clearer documentation for future contributors.\r\n\r\nThese blogs written by @taneliang explain the design and implementation in detail. We should port these to a MD file as discussed with @bvaughn.\r\n\r\n- https://blog.eliangtan.com/view-framework-1/\r\n- https://blog.eliangtan.com/view-framework-2/","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19669","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19669/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19669/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19669/events","html_url":"https://github.com/facebook/react/issues/19669","id":683438981,"node_id":"MDU6SXNzdWU2ODM0Mzg5ODE=","number":19669,"title":"Show User Timing measures in the Scheduling Profiler UI","user":{"login":"kartikcho","id":48270786,"node_id":"MDQ6VXNlcjQ4MjcwNzg2","avatar_url":"https://avatars1.githubusercontent.com/u/48270786?v=4","gravatar_id":"","url":"https://api.github.com/users/kartikcho","html_url":"https://github.com/kartikcho","followers_url":"https://api.github.com/users/kartikcho/followers","following_url":"https://api.github.com/users/kartikcho/following{/other_user}","gists_url":"https://api.github.com/users/kartikcho/gists{/gist_id}","starred_url":"https://api.github.com/users/kartikcho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kartikcho/subscriptions","organizations_url":"https://api.github.com/users/kartikcho/orgs","repos_url":"https://api.github.com/users/kartikcho/repos","events_url":"https://api.github.com/users/kartikcho/events{/privacy}","received_events_url":"https://api.github.com/users/kartikcho/received_events","type":"User","site_admin":false},"labels":[{"id":2281766624,"node_id":"MDU6TGFiZWwyMjgxNzY2NjI0","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Scheduling%20Profiler","name":"Component: Scheduling Profiler","color":"1dc3d6","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-21T09:47:37Z","updated_at":"2020-08-21T12:50:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Follows up from https://github.com/MLH-Fellowship/scheduling-profiler-prototype/issues/72, which implemented User Timing marks but not measures.\r\n\r\nWe should also highlight a User Timing measure's marks together when one is hovered\r\nThis is a similar idea to https://github.com/MLH-Fellowship/scheduling-profiler-prototype/issues/44. When a measure's start/end mark is hovered over, we can highlight its corresponding mark.\r\n\r\n### Iteration 1: Highlight a User Timing measure's marks together when one is hovered\r\n\r\n#### Steps\r\n\r\nThere are multiple ways to implement this; the easiest way will be to implement something similar to suspense wakeable IDs ([more context](https://github.com/MLH-Fellowship/scheduling-profiler-prototype/issues/44)), so that we can reuse the rendering logic.\r\n\r\n- [ ] Modify types with a measure ID.\r\n- [ ] Update `preprocessData` to process User Timing measures.\r\n- [ ] Update `renderCanvas` to highlight related marks.\r\n\r\n#### Acceptance Criteria\r\n\r\n- When a custom User Timing mark is moused over, all User Timing marks with the same `id` should be highlighted.\r\n- No Flow errors in affected code.\r\n\r\n### Iteration 2: Display User Timing measures\r\n\r\nThis is trickier than the above iteration, as this requires a variable number of rows (or 1 variable-height row) whereas the above only require a fixed-height row.\r\n\r\nThe end result should be something similar to a combination of our React measures and the Chrome Performance tab's Timings section (screenshot below).\r\n\r\n![image](https://user-images.githubusercontent.com/12784593/88007975-b9476c80-cb41-11ea-9177-0fa483886f86.png)\r\n\r\n##### Acceptance Criteria\r\n\r\n- If no User Timing measures are present, there should be no change in the UI.\r\n- Custom User Timing measures should appear as bars in a new canvas section.\r\n- Custom User Timing measures should not overlap.\r\n- Measures should be ordered roughly similar to how Chrome orders them.\r\n- Hovering over the User Timing measures should display a tooltip with more information such as the measure's name, start time, and duration.\r\n- Hovering over other items onscreen should not be broken.\r\n- No Flow errors in affected code.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19668","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19668/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19668/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19668/events","html_url":"https://github.com/facebook/react/issues/19668","id":683431376,"node_id":"MDU6SXNzdWU2ODM0MzEzNzY=","number":19668,"title":"Show React version in Scheduling Profiler UI","user":{"login":"kartikcho","id":48270786,"node_id":"MDQ6VXNlcjQ4MjcwNzg2","avatar_url":"https://avatars1.githubusercontent.com/u/48270786?v=4","gravatar_id":"","url":"https://api.github.com/users/kartikcho","html_url":"https://github.com/kartikcho","followers_url":"https://api.github.com/users/kartikcho/followers","following_url":"https://api.github.com/users/kartikcho/following{/other_user}","gists_url":"https://api.github.com/users/kartikcho/gists{/gist_id}","starred_url":"https://api.github.com/users/kartikcho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kartikcho/subscriptions","organizations_url":"https://api.github.com/users/kartikcho/orgs","repos_url":"https://api.github.com/users/kartikcho/repos","events_url":"https://api.github.com/users/kartikcho/events{/privacy}","received_events_url":"https://api.github.com/users/kartikcho/received_events","type":"User","site_admin":false},"labels":[{"id":2281766624,"node_id":"MDU6TGFiZWwyMjgxNzY2NjI0","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Scheduling%20Profiler","name":"Component: Scheduling Profiler","color":"1dc3d6","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-21T09:34:35Z","updated_at":"2020-08-21T12:50:49Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"\r\n\r\nDisplay React version in the profiler UI somewhere. \r\n\r\nReact version mark was added to profiling in #19553 \r\n\r\n**Related:** The idea to display lane labels has been put on hold as discussed in the [original issue.](https://github.com/MLH-Fellowship/scheduling-profiler-prototype/issues/73)","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19667","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19667/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19667/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19667/events","html_url":"https://github.com/facebook/react/issues/19667","id":683431315,"node_id":"MDU6SXNzdWU2ODM0MzEzMTU=","number":19667,"title":"Normalize panning across browsers in the Scheduling Profiler","user":{"login":"kartikcho","id":48270786,"node_id":"MDQ6VXNlcjQ4MjcwNzg2","avatar_url":"https://avatars1.githubusercontent.com/u/48270786?v=4","gravatar_id":"","url":"https://api.github.com/users/kartikcho","html_url":"https://github.com/kartikcho","followers_url":"https://api.github.com/users/kartikcho/followers","following_url":"https://api.github.com/users/kartikcho/following{/other_user}","gists_url":"https://api.github.com/users/kartikcho/gists{/gist_id}","starred_url":"https://api.github.com/users/kartikcho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kartikcho/subscriptions","organizations_url":"https://api.github.com/users/kartikcho/orgs","repos_url":"https://api.github.com/users/kartikcho/repos","events_url":"https://api.github.com/users/kartikcho/events{/privacy}","received_events_url":"https://api.github.com/users/kartikcho/received_events","type":"User","site_admin":false},"labels":[{"id":2281766624,"node_id":"MDU6TGFiZWwyMjgxNzY2NjI0","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Scheduling%20Profiler","name":"Component: Scheduling Profiler","color":"1dc3d6","default":false,"description":""}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-21T09:34:28Z","updated_at":"2020-08-21T12:50:44Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Pan behavior differs in different situations:\r\n\r\n* Safari on macOS on a Retina display: pans at about half the speed of Firefox/Chrome\r\n* Chrome when zoomed in: pans faster than the mouse","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19666","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19666/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19666/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19666/events","html_url":"https://github.com/facebook/react/issues/19666","id":683094002,"node_id":"MDU6SXNzdWU2ODMwOTQwMDI=","number":19666,"title":"Add an option to DevTools to enable double-logging","user":{"login":"gaearon","id":810438,"node_id":"MDQ6VXNlcjgxMDQzOA==","avatar_url":"https://avatars0.githubusercontent.com/u/810438?v=4","gravatar_id":"","url":"https://api.github.com/users/gaearon","html_url":"https://github.com/gaearon","followers_url":"https://api.github.com/users/gaearon/followers","following_url":"https://api.github.com/users/gaearon/following{/other_user}","gists_url":"https://api.github.com/users/gaearon/gists{/gist_id}","starred_url":"https://api.github.com/users/gaearon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaearon/subscriptions","organizations_url":"https://api.github.com/users/gaearon/orgs","repos_url":"https://api.github.com/users/gaearon/repos","events_url":"https://api.github.com/users/gaearon/events{/privacy}","received_events_url":"https://api.github.com/users/gaearon/received_events","type":"User","site_admin":false},"labels":[{"id":40929153,"node_id":"MDU6TGFiZWw0MDkyOTE1Mw==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Enhancement","name":"Type: Enhancement","color":"84b6eb","default":false,"description":null},{"id":725156255,"node_id":"MDU6TGFiZWw3MjUxNTYyNTU=","url":"https://api.github.com/repos/facebook/react/labels/good%20first%20issue%20(taken)","name":"good first issue (taken)","color":"b60205","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-08-20T21:01:45Z","updated_at":"2020-09-14T16:35:45Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"We currently plan to suppress double-logging in development by overriding console in 17: https://github.com/facebook/react/pull/18547\r\n\r\nHowever this can be confusing for some scenarios and double logging may be preferable in them.\r\n\r\nIdeally we'd add a toggle to DevTools that would allow to re-enable it on this screen:\r\n\r\n![Ef3bFlWWoAARjz9](https://user-images.githubusercontent.com/810438/90825360-b7372000-e330-11ea-9128-803d35d27e07.png)\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19649","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19649/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19649/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19649/events","html_url":"https://github.com/facebook/react/issues/19649","id":681874090,"node_id":"MDU6SXNzdWU2ODE4NzQwOTA=","number":19649,"title":"Bug: (17.0.0-rc.0) No changes to Native Component Stacks in production environment","user":{"login":"tjvantoll","id":544280,"node_id":"MDQ6VXNlcjU0NDI4MA==","avatar_url":"https://avatars1.githubusercontent.com/u/544280?v=4","gravatar_id":"","url":"https://api.github.com/users/tjvantoll","html_url":"https://github.com/tjvantoll","followers_url":"https://api.github.com/users/tjvantoll/followers","following_url":"https://api.github.com/users/tjvantoll/following{/other_user}","gists_url":"https://api.github.com/users/tjvantoll/gists{/gist_id}","starred_url":"https://api.github.com/users/tjvantoll/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tjvantoll/subscriptions","organizations_url":"https://api.github.com/users/tjvantoll/orgs","repos_url":"https://api.github.com/users/tjvantoll/repos","events_url":"https://api.github.com/users/tjvantoll/events{/privacy}","received_events_url":"https://api.github.com/users/tjvantoll/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":16,"created_at":"2020-08-19T14:12:42Z","updated_at":"2020-08-20T07:16:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"The React 17 RC blog post states “In React 17, the component stacks are generated using a different mechanism that stitches them together from the regular native JavaScript stacks. This lets you get the fully symbolicated React component stack traces in a production environment.”\r\n\r\nI’ve been trying to see a difference between React 16.13.1 and React 17.0.0.rc.0, and so far have been unable to do so.\r\n\r\nReact version: 17.0.0.rc.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Start a new app with Create React App.\r\n2. Run `npm install react-error-boundary`.\r\n3. Use the code shown below in your `App.js`.\r\n4. Run `npm run build` to create a production build.\r\n5. Start a web server and open in a browser to see the error.\r\n\r\n``` JavaScript\r\nimport React from 'react';\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\n\r\nfunction ErrorFallback({ error }) {\r\n  return (\r\n    <div>\r\n      <p>Something went wrong:</p>\r\n      <pre style={{ color: \"red\" }}>{error.message}</pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Bomb(foo) {\r\n  return (\r\n    <>\r\n      <h1>💣</h1>\r\n      {foo.toUpperCase()}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <ErrorBoundary FallbackComponent={ErrorFallback} onReset={() => {}}>\r\n      <h1>Error Testing</h1>\r\n      <Bomb />\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n## The current behavior\r\n\r\nThe stack trace I’m getting is exactly the same with React 16.13.1 and React 17.0.0-rc.0.\r\n\r\n![error-trace](https://user-images.githubusercontent.com/544280/90645684-42ff5e00-e204-11ea-8661-857346068939.png)\r\n\r\n## The expected behavior\r\n\r\nI’m expecting to get component names in my stack trace, or to see some difference in the stack traces between React versions.\r\n\r\nApologies if I’m debugging the wrong thing here, but I’m trying to figure out what actually changed in React 17. Appreciate your time.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19648","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19648/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19648/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19648/events","html_url":"https://github.com/facebook/react/pull/19648","id":681866536,"node_id":"MDExOlB1bGxSZXF1ZXN0NDcwMTg2NzE0","number":19648,"title":"Failing test for #19608","user":{"login":"gaearon","id":810438,"node_id":"MDQ6VXNlcjgxMDQzOA==","avatar_url":"https://avatars0.githubusercontent.com/u/810438?v=4","gravatar_id":"","url":"https://api.github.com/users/gaearon","html_url":"https://github.com/gaearon","followers_url":"https://api.github.com/users/gaearon/followers","following_url":"https://api.github.com/users/gaearon/following{/other_user}","gists_url":"https://api.github.com/users/gaearon/gists{/gist_id}","starred_url":"https://api.github.com/users/gaearon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaearon/subscriptions","organizations_url":"https://api.github.com/users/gaearon/orgs","repos_url":"https://api.github.com/users/gaearon/repos","events_url":"https://api.github.com/users/gaearon/events{/privacy}","received_events_url":"https://api.github.com/users/gaearon/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-19T14:02:33Z","updated_at":"2020-08-19T14:09:56Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19648","html_url":"https://github.com/facebook/react/pull/19648","diff_url":"https://github.com/facebook/react/pull/19648.diff","patch_url":"https://github.com/facebook/react/pull/19648.patch"},"body":"Test from https://github.com/facebook/react/issues/19608#issuecomment-674157239.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19645","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19645/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19645/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19645/events","html_url":"https://github.com/facebook/react/issues/19645","id":681710256,"node_id":"MDU6SXNzdWU2ODE3MTAyNTY=","number":19645,"title":"Deepcode.ai found 67 issues, 4 of which are critical ( security and defects )","user":{"login":"Spoor2709","id":13295935,"node_id":"MDQ6VXNlcjEzMjk1OTM1","avatar_url":"https://avatars1.githubusercontent.com/u/13295935?v=4","gravatar_id":"","url":"https://api.github.com/users/Spoor2709","html_url":"https://github.com/Spoor2709","followers_url":"https://api.github.com/users/Spoor2709/followers","following_url":"https://api.github.com/users/Spoor2709/following{/other_user}","gists_url":"https://api.github.com/users/Spoor2709/gists{/gist_id}","starred_url":"https://api.github.com/users/Spoor2709/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Spoor2709/subscriptions","organizations_url":"https://api.github.com/users/Spoor2709/orgs","repos_url":"https://api.github.com/users/Spoor2709/repos","events_url":"https://api.github.com/users/Spoor2709/events{/privacy}","received_events_url":"https://api.github.com/users/Spoor2709/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-19T09:59:33Z","updated_at":"2020-08-19T11:39:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"After running react through [deepcode.ai] (https://www.deepcode.ai/app/gh/facebook/react/d7feeb25ac8cc23133c294fa01932658023130c0/_/dashboard) 67 issues were found, I think integrating deepcode into the pipeline and into pull requests would be a good idea. Should I create a separate issue for each issue?","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19644","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19644/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19644/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19644/events","html_url":"https://github.com/facebook/react/issues/19644","id":681599536,"node_id":"MDU6SXNzdWU2ODE1OTk1MzY=","number":19644,"title":"Bug: react-hooks/exhaustive-deps does not recognize different signaturres","user":{"login":"swissspidy","id":841956,"node_id":"MDQ6VXNlcjg0MTk1Ng==","avatar_url":"https://avatars1.githubusercontent.com/u/841956?v=4","gravatar_id":"","url":"https://api.github.com/users/swissspidy","html_url":"https://github.com/swissspidy","followers_url":"https://api.github.com/users/swissspidy/followers","following_url":"https://api.github.com/users/swissspidy/following{/other_user}","gists_url":"https://api.github.com/users/swissspidy/gists{/gist_id}","starred_url":"https://api.github.com/users/swissspidy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swissspidy/subscriptions","organizations_url":"https://api.github.com/users/swissspidy/orgs","repos_url":"https://api.github.com/users/swissspidy/repos","events_url":"https://api.github.com/users/swissspidy/events{/privacy}","received_events_url":"https://api.github.com/users/swissspidy/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-08-19T07:01:23Z","updated_at":"2020-09-15T08:29:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"`eslint-plugin-react-hooks` version: 4.1.2\r\n\r\n## Steps To Reproduce\r\n\r\nThe current `additionalHooks` in the react-hooks/exhaustive-deps eslint plugin accepts a regular expression to match hook names. It always assumes the following format:\r\n \r\n```\r\nfunction useCustomHook(callback, deps) {}\r\n```\r\n\r\nHowever, this format is not always convenient when other arguments are available in the hook's signature, because the set of dependencies could potentially be large. In those cases, it'd be more convenient to place callback and deps as the last two arguments. For instance, the standard `useImperativeHandle` has an additional first argument:\r\n\r\n```\r\nfunction useImperativeHandle(ref, callback, deps) {}\r\n```\r\n\r\n## The current behavior\r\n\r\nThe `react-hooks/exhaustive-deps` rule does not recognize hooks with a function signature as mentioned above.\r\n\r\n## The expected behavior\r\n\r\nThe `react-hooks/exhaustive-deps` rule allows customization to specify the argument offset via the `additionalHooks` cconfig option.\r\n\r\n----\r\n\r\n**Note:** A PR for this already exists at #18861. This issue is meant to increase visibility for it, and allow any additional discussion if necessary.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19641","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19641/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19641/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19641/events","html_url":"https://github.com/facebook/react/pull/19641","id":681257651,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY5Njc1NDQw","number":19641,"title":"Updated ReadMe docs","user":{"login":"harjeevs17","id":38102297,"node_id":"MDQ6VXNlcjM4MTAyMjk3","avatar_url":"https://avatars3.githubusercontent.com/u/38102297?v=4","gravatar_id":"","url":"https://api.github.com/users/harjeevs17","html_url":"https://github.com/harjeevs17","followers_url":"https://api.github.com/users/harjeevs17/followers","following_url":"https://api.github.com/users/harjeevs17/following{/other_user}","gists_url":"https://api.github.com/users/harjeevs17/gists{/gist_id}","starred_url":"https://api.github.com/users/harjeevs17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harjeevs17/subscriptions","organizations_url":"https://api.github.com/users/harjeevs17/orgs","repos_url":"https://api.github.com/users/harjeevs17/repos","events_url":"https://api.github.com/users/harjeevs17/events{/privacy}","received_events_url":"https://api.github.com/users/harjeevs17/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-18T18:50:10Z","updated_at":"2020-08-18T19:20:41Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19641","html_url":"https://github.com/facebook/react/pull/19641","diff_url":"https://github.com/facebook/react/pull/19641.diff","patch_url":"https://github.com/facebook/react/pull/19641.patch"},"body":"Updated the ReadMe docs ","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19637","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19637/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19637/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19637/events","html_url":"https://github.com/facebook/react/issues/19637","id":680994677,"node_id":"MDU6SXNzdWU2ODA5OTQ2Nzc=","number":19637,"title":"Portal Event Bubbling Use Cases","user":{"login":"gaearon","id":810438,"node_id":"MDQ6VXNlcjgxMDQzOA==","avatar_url":"https://avatars0.githubusercontent.com/u/810438?v=4","gravatar_id":"","url":"https://api.github.com/users/gaearon","html_url":"https://github.com/gaearon","followers_url":"https://api.github.com/users/gaearon/followers","following_url":"https://api.github.com/users/gaearon/following{/other_user}","gists_url":"https://api.github.com/users/gaearon/gists{/gist_id}","starred_url":"https://api.github.com/users/gaearon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaearon/subscriptions","organizations_url":"https://api.github.com/users/gaearon/orgs","repos_url":"https://api.github.com/users/gaearon/repos","events_url":"https://api.github.com/users/gaearon/events{/privacy}","received_events_url":"https://api.github.com/users/gaearon/received_events","type":"User","site_admin":false},"labels":[{"id":710375792,"node_id":"MDU6TGFiZWw3MTAzNzU3OTI=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Discussion","name":"Type: Discussion","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-18T12:16:29Z","updated_at":"2020-08-18T12:48:15Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"This is a spillover from https://github.com/facebook/react/issues/11387.\r\n\r\nThe goal of this issue is **not** to argue about whether the current React's behavior makes sense in all situations. Rather, it is **collect a list of use cases, both when the current behavior works well, and when it doesn't**, so that they can inform the next iteration of the related APIs. We can't commit to any concrete timeframe on this at the moment, but a list like this will definitely reduce the amount of time that we'd need to spend to get up to speed on the problem space when we're ready to approach it.\r\n\r\nIf you'd like to contribute a use case, please comment with:\r\n\r\n- A name for your pattern (come up with something unique so we can refer to it later)\r\n- A brief description of the UI (but a screenshot is worth a thousand words)\r\n- A small CodeSandbox demo, if you want to make a stronger case\r\n- How React event bubbling behavior breaks (or helps) your case\r\n  - Include any information about other pitfalls you encountered, be very specific\r\n- A workaround you are currently using, if any\r\n  - If you tried some workarounds but they cause issues, let us know which ones\r\n\r\nPlease keep this thread on topic and let's keep general discussion in https://github.com/facebook/react/issues/11387. This is not a good thread for \"+1\" or requests to solve this faster — it's a thread for gathering research.\r\n\r\nThank you!","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19633","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19633/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19633/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19633/events","html_url":"https://github.com/facebook/react/issues/19633","id":680756123,"node_id":"MDU6SXNzdWU2ODA3NTYxMjM=","number":19633,"title":"Error: \"Commit tree does not contain fiber 2094. This is a bug in React DevTools.\"","user":{"login":"nyurik","id":1641515,"node_id":"MDQ6VXNlcjE2NDE1MTU=","avatar_url":"https://avatars0.githubusercontent.com/u/1641515?v=4","gravatar_id":"","url":"https://api.github.com/users/nyurik","html_url":"https://github.com/nyurik","followers_url":"https://api.github.com/users/nyurik/followers","following_url":"https://api.github.com/users/nyurik/following{/other_user}","gists_url":"https://api.github.com/users/nyurik/gists{/gist_id}","starred_url":"https://api.github.com/users/nyurik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nyurik/subscriptions","organizations_url":"https://api.github.com/users/nyurik/orgs","repos_url":"https://api.github.com/users/nyurik/repos","events_url":"https://api.github.com/users/nyurik/events{/privacy}","received_events_url":"https://api.github.com/users/nyurik/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":620368407,"node_id":"MDU6TGFiZWw2MjAzNjg0MDc=","url":"https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information","name":"Resolution: Needs More Information","color":"fffde7","default":false,"description":null},{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-18T07:14:13Z","updated_at":"2020-08-31T19:35:28Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Describe what you were doing when the bug occurred:\r\n1. recorded profiling results\r\n2. browsing results by paging to the right\r\n3. crash\r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.8.2-fed4ae024\r\n\r\nCall stack: at updateTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17854:21)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17717:25)\r\n    at ProfilingCache.getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18265:14)\r\n    at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31718:33)\r\n    at vh (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11067:7)\r\n    at fi (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11733:7)\r\n    at ck (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:14430:86)\r\n    at bk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13779:11)\r\n    at ak (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13768:5)\r\n    at Sj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13750:7)\r\n\r\nComponent stack: at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31701:48)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26139:23)\r\n    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33363:48)\r\n    at ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27172:5)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27303:32)\r\n    at div\r\n    at div\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30463:23)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:22538:23)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:23040:27)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28328:23)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33797:21)","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19631","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19631/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19631/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19631/events","html_url":"https://github.com/facebook/react/pull/19631","id":680681617,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY5MTkzOTM5","number":19631,"title":"feat: backport allowing noModule attribute on script tags to React 15","user":{"login":"snyamathi","id":1328852,"node_id":"MDQ6VXNlcjEzMjg4NTI=","avatar_url":"https://avatars3.githubusercontent.com/u/1328852?v=4","gravatar_id":"","url":"https://api.github.com/users/snyamathi","html_url":"https://github.com/snyamathi","followers_url":"https://api.github.com/users/snyamathi/followers","following_url":"https://api.github.com/users/snyamathi/following{/other_user}","gists_url":"https://api.github.com/users/snyamathi/gists{/gist_id}","starred_url":"https://api.github.com/users/snyamathi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/snyamathi/subscriptions","organizations_url":"https://api.github.com/users/snyamathi/orgs","repos_url":"https://api.github.com/users/snyamathi/repos","events_url":"https://api.github.com/users/snyamathi/events{/privacy}","received_events_url":"https://api.github.com/users/snyamathi/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-18T04:32:55Z","updated_at":"2020-09-18T18:05:06Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19631","html_url":"https://github.com/facebook/react/pull/19631","diff_url":"https://github.com/facebook/react/pull/19631.diff","patch_url":"https://github.com/facebook/react/pull/19631.patch"},"body":"## Summary\r\n\r\nThis PR backports [this PR](https://github.com/facebook/react/pull/11900) which added support for the `nomodule` attribute to React 15 as well. I'm not sure how likely this is to get into a release, but we're still stuck on React 15 for a variety of reasons. It would be great if we could add support for this attribute to React 15.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-nomodule\r\n>**nomodule**\r\nThis Boolean attribute is set to indicate that the script should not be executed in browsers that support ES2015 modules — in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code.\r\n\r\n## Test Plan\r\n\r\nThe tests pass locally, though I didn't add a new test since it seems like we haven't added one for each attribute (example for the PR which added `nonce` [here](https://github.com/facebook/react/pull/5442)) though I could look into that if need be.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19622","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19622/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19622/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19622/events","html_url":"https://github.com/facebook/react/pull/19622","id":679612378,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY4MzQ0MzEy","number":19622,"title":"fix : grammatical typo for test description","user":{"login":"brijeshprasad89","id":10307799,"node_id":"MDQ6VXNlcjEwMzA3Nzk5","avatar_url":"https://avatars2.githubusercontent.com/u/10307799?v=4","gravatar_id":"","url":"https://api.github.com/users/brijeshprasad89","html_url":"https://github.com/brijeshprasad89","followers_url":"https://api.github.com/users/brijeshprasad89/followers","following_url":"https://api.github.com/users/brijeshprasad89/following{/other_user}","gists_url":"https://api.github.com/users/brijeshprasad89/gists{/gist_id}","starred_url":"https://api.github.com/users/brijeshprasad89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brijeshprasad89/subscriptions","organizations_url":"https://api.github.com/users/brijeshprasad89/orgs","repos_url":"https://api.github.com/users/brijeshprasad89/repos","events_url":"https://api.github.com/users/brijeshprasad89/events{/privacy}","received_events_url":"https://api.github.com/users/brijeshprasad89/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-08-15T17:22:50Z","updated_at":"2020-08-15T18:37:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19622","html_url":"https://github.com/facebook/react/pull/19622","diff_url":"https://github.com/facebook/react/pull/19622.diff","patch_url":"https://github.com/facebook/react/pull/19622.patch"},"body":"<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test Plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19620","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19620/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19620/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19620/events","html_url":"https://github.com/facebook/react/pull/19620","id":679398427,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY4MTgwNDIx","number":19620,"title":"docs: adding the logo in README.md","user":{"login":"adnaanbheda","id":25040547,"node_id":"MDQ6VXNlcjI1MDQwNTQ3","avatar_url":"https://avatars0.githubusercontent.com/u/25040547?v=4","gravatar_id":"","url":"https://api.github.com/users/adnaanbheda","html_url":"https://github.com/adnaanbheda","followers_url":"https://api.github.com/users/adnaanbheda/followers","following_url":"https://api.github.com/users/adnaanbheda/following{/other_user}","gists_url":"https://api.github.com/users/adnaanbheda/gists{/gist_id}","starred_url":"https://api.github.com/users/adnaanbheda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adnaanbheda/subscriptions","organizations_url":"https://api.github.com/users/adnaanbheda/orgs","repos_url":"https://api.github.com/users/adnaanbheda/repos","events_url":"https://api.github.com/users/adnaanbheda/events{/privacy}","received_events_url":"https://api.github.com/users/adnaanbheda/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2020-08-14T20:58:49Z","updated_at":"2020-08-17T20:49:42Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19620","html_url":"https://github.com/facebook/react/pull/19620","diff_url":"https://github.com/facebook/react/pull/19620.diff","patch_url":"https://github.com/facebook/react/pull/19620.patch"},"body":"### Description \r\n\r\nInclusion of the React icon in README.md.\r\n\r\n\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19617","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19617/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19617/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19617/events","html_url":"https://github.com/facebook/react/pull/19617","id":679388331,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY4MTcyMDU5","number":19617,"title":"test: Add current behavior for label clicking in a browser","user":{"login":"eps1lon","id":12292047,"node_id":"MDQ6VXNlcjEyMjkyMDQ3","avatar_url":"https://avatars3.githubusercontent.com/u/12292047?v=4","gravatar_id":"","url":"https://api.github.com/users/eps1lon","html_url":"https://github.com/eps1lon","followers_url":"https://api.github.com/users/eps1lon/followers","following_url":"https://api.github.com/users/eps1lon/following{/other_user}","gists_url":"https://api.github.com/users/eps1lon/gists{/gist_id}","starred_url":"https://api.github.com/users/eps1lon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eps1lon/subscriptions","organizations_url":"https://api.github.com/users/eps1lon/orgs","repos_url":"https://api.github.com/users/eps1lon/repos","events_url":"https://api.github.com/users/eps1lon/events{/privacy}","received_events_url":"https://api.github.com/users/eps1lon/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-14T20:33:52Z","updated_at":"2020-08-14T21:57:32Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19617","html_url":"https://github.com/facebook/react/pull/19617","diff_url":"https://github.com/facebook/react/pull/19617.diff","patch_url":"https://github.com/facebook/react/pull/19617.patch"},"body":"\r\n## Summary\r\n\r\nFailing test for https://github.com/facebook/react/issues/18591\r\n\r\n## Test Plan\r\n\r\nhttps://codesandbox.io/s/user-label-click-with-associated-checkbox-1zs7z?file=/public/index.html showscases the event order in a real browser (tested with Chrome 84)\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19613","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19613/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19613/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19613/events","html_url":"https://github.com/facebook/react/issues/19613","id":679265085,"node_id":"MDU6SXNzdWU2NzkyNjUwODU=","number":19613,"title":"How to reliably detect *uncaught* errors in production *and* development?","user":{"login":"OliverJAsh","id":921609,"node_id":"MDQ6VXNlcjkyMTYwOQ==","avatar_url":"https://avatars2.githubusercontent.com/u/921609?v=4","gravatar_id":"","url":"https://api.github.com/users/OliverJAsh","html_url":"https://github.com/OliverJAsh","followers_url":"https://api.github.com/users/OliverJAsh/followers","following_url":"https://api.github.com/users/OliverJAsh/following{/other_user}","gists_url":"https://api.github.com/users/OliverJAsh/gists{/gist_id}","starred_url":"https://api.github.com/users/OliverJAsh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OliverJAsh/subscriptions","organizations_url":"https://api.github.com/users/OliverJAsh/orgs","repos_url":"https://api.github.com/users/OliverJAsh/repos","events_url":"https://api.github.com/users/OliverJAsh/events{/privacy}","received_events_url":"https://api.github.com/users/OliverJAsh/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-08-14T16:22:28Z","updated_at":"2020-08-28T20:17:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Related: https://stackoverflow.com/questions/57197936/componentdidcatch-window-addeventlistenererror-cb-dont-behave-as-expecte/57200935\r\n\r\nWe are using error boundaries to catch and handle errors inside of a React render. As for errors which occur outside of a React render (i.e. uncaught errors), we need to register uncaught error handler (`window.addEventListener('error', …)`) to handle these separately (otherwise the user will not be alerted).\r\n\r\nUnfortunately we can only rely on this uncaught error event handler in production, not development. This is because—in development—errors caught by error boundaries will still bubble up to the uncaught error handler. (Unfortunately it's not documented but it's explained here: https://github.com/facebook/react/issues/12897#issuecomment-410036991. PR to add this to the docs: https://github.com/reactjs/reactjs.org/pull/2168.)\r\n\r\nThis means that the uncaught error handler will be called for errors which are actually caught by error boundaries. In turn, this means that the behaviour of errors in development will not match the behaviour of errors in production.\r\n\r\nThis is also the reason that when using the [Fast Refresh webpack plugin](https://github.com/pmmmwh/react-refresh-webpack-plugin) in development, the error overlay still appears even when an error is caught by an error boundary. I would not expect this to happen because the error overlay is traditionally for _uncaught_ errors.\r\n\r\nI would like to ask: why does React need to treat errors differently in development?\r\n\r\nWhatever the reason, I think it's quite important for errors to behave consistently in development and production. When we're working on the user experience around errors in development, it's not obvious that the behaviour of errors could be significantly different in production. For this reason, I'm keen to explore if there is a different approach we can take here, in order to make the behaviour consistent between development and production.\r\n\r\nFailing that, is there a different way (which works in production _and_ development) we can differentiate between \"error caught by boundary\" and \"uncaught error\"?\r\n\r\nTo demonstrate the problem, [here is a reduced test case](https://github.com/OliverJAsh/react-error-boundary-uncaught-issue) which:\r\n\r\n- throws an error both inside and outside of React render\r\n- registers a uncaught error handler and logs events\r\n- uses an error boundary and logs calls to `componentDidCatch` and `getDerivedStateFromError`\r\n\r\nFrom the log screenshots I've included at the bottom, we can see that in development the uncaught error handler is called for the error which is in-fact caught by an error boundary.\r\n\r\n`src/index.jsx`:\r\n```jsx\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nwindow.addEventListener('error', (event) => {\r\n    console.log('window.addEventListener error', event);\r\n});\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    state = { hasError: false };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log('getDerivedStateFromError', { error });\r\n\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log('componentDidCatch', { error, errorInfo });\r\n    }\r\n\r\n    render() {\r\n        return this.state.hasError === false && this.props.children;\r\n    }\r\n}\r\n\r\nconst Boom = () => {\r\n    console.log('Boom');\r\n\r\n    throw new Error('Error inside React render');\r\n\r\n    return null;\r\n};\r\n\r\nconst App = () => {\r\n    console.log('App render');\r\n\r\n    return (\r\n        <ErrorBoundary>\r\n            <Boom />\r\n        </ErrorBoundary>\r\n    );\r\n};\r\n\r\nconst rootEl = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, rootEl);\r\n\r\nsetTimeout(() => {\r\n    throw new Error('Error outside of React render');\r\n}, 5000);\r\n```\r\n\r\n### Development\r\n\r\n![image](https://user-images.githubusercontent.com/921609/90268665-4afb7e80-de4f-11ea-9f1a-abdb21b655d9.png)\r\n\r\n### Production\r\n\r\n![image](https://user-images.githubusercontent.com/921609/90268721-5a7ac780-de4f-11ea-9274-c0f6a86d1b77.png)\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19611","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19611/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19611/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19611/events","html_url":"https://github.com/facebook/react/issues/19611","id":678976321,"node_id":"MDU6SXNzdWU2Nzg5NzYzMjE=","number":19611,"title":"Bug: click event is attached to createPortal","user":{"login":"615349","id":39723820,"node_id":"MDQ6VXNlcjM5NzIzODIw","avatar_url":"https://avatars1.githubusercontent.com/u/39723820?v=4","gravatar_id":"","url":"https://api.github.com/users/615349","html_url":"https://github.com/615349","followers_url":"https://api.github.com/users/615349/followers","following_url":"https://api.github.com/users/615349/following{/other_user}","gists_url":"https://api.github.com/users/615349/gists{/gist_id}","starred_url":"https://api.github.com/users/615349/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/615349/subscriptions","organizations_url":"https://api.github.com/users/615349/orgs","repos_url":"https://api.github.com/users/615349/repos","events_url":"https://api.github.com/users/615349/events{/privacy}","received_events_url":"https://api.github.com/users/615349/received_events","type":"User","site_admin":false},"labels":[{"id":127893911,"node_id":"MDU6TGFiZWwxMjc4OTM5MTE=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20DOM","name":"Component: DOM","color":"fef2c0","default":false,"description":null},{"id":620368407,"node_id":"MDU6TGFiZWw2MjAzNjg0MDc=","url":"https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information","name":"Resolution: Needs More Information","color":"fffde7","default":false,"description":null},{"id":710375792,"node_id":"MDU6TGFiZWw3MTAzNzU3OTI=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Discussion","name":"Type: Discussion","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-08-14T07:57:01Z","updated_at":"2020-08-17T07:17:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\nuse createPortal will have click event attached to the DOM element automatically\r\n\r\n```\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst Modal = ({ children, onClose, open }) =>\r\n  open &&\r\n  createPortal(\r\n    <div />,\r\n    document.getElementById(\"modal\")\r\n  );\r\n```\r\n\r\nthis snippet will add click event attached to the element with id = modal\r\nplease open chrome dev tool to check\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/vibrant-kowalevski-7ginb?file=/src/App.js\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nclick event is added on the element\r\n\r\n## The expected behavior\r\nclick event should not be added\r\n\r\n\r\n## EDIT\r\n------------------------------------------------------------\r\n```\r\ncreatePortal(\r\n    <h1>This is heading</h1>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n```\r\nThe header is read by **jaws** (not sure about nvda) as\r\n**this is heading, heading level one, clickable**","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19602","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19602/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19602/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19602/events","html_url":"https://github.com/facebook/react/issues/19602","id":678398101,"node_id":"MDU6SXNzdWU2NzgzOTgxMDE=","number":19602,"title":"Error: \"getCommitTree(): Unable to reconstruct tree for root \"1\" and commit 21\"","user":{"login":"bhumijgupta","id":30751793,"node_id":"MDQ6VXNlcjMwNzUxNzkz","avatar_url":"https://avatars2.githubusercontent.com/u/30751793?v=4","gravatar_id":"","url":"https://api.github.com/users/bhumijgupta","html_url":"https://github.com/bhumijgupta","followers_url":"https://api.github.com/users/bhumijgupta/followers","following_url":"https://api.github.com/users/bhumijgupta/following{/other_user}","gists_url":"https://api.github.com/users/bhumijgupta/gists{/gist_id}","starred_url":"https://api.github.com/users/bhumijgupta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhumijgupta/subscriptions","organizations_url":"https://api.github.com/users/bhumijgupta/orgs","repos_url":"https://api.github.com/users/bhumijgupta/repos","events_url":"https://api.github.com/users/bhumijgupta/events{/privacy}","received_events_url":"https://api.github.com/users/bhumijgupta/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-13T12:28:03Z","updated_at":"2020-08-31T15:32:54Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Describe what you were doing when the bug occurred:\r\n1. I was going through the profiler result to check each render and what triggered each render\r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.8.2-fed4ae024\r\n\r\nCall stack: at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:17728:9)\r\n    at ProfilingCache.getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18265:14)\r\n    at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31718:33)\r\n    at vh (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11067:7)\r\n    at fi (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11733:7)\r\n    at ck (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:14430:86)\r\n    at bk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13779:11)\r\n    at ak (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13768:5)\r\n    at Sj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13750:7)\r\n    at Mj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13351:105)\r\n\r\nComponent stack: at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31701:48)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26139:23)\r\n    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33363:48)\r\n    at ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27172:5)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27303:32)\r\n    at div\r\n    at div\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30463:23)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:22538:23)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:23040:27)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28328:23)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33797:21)","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19589","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19589/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19589/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19589/events","html_url":"https://github.com/facebook/react/issues/19589","id":677044240,"node_id":"MDU6SXNzdWU2NzcwNDQyNDA=","number":19589,"title":"Bug: SVG foreignObject misplaced on browser zoom in React app","user":{"login":"maazadeeb","id":6594255,"node_id":"MDQ6VXNlcjY1OTQyNTU=","avatar_url":"https://avatars3.githubusercontent.com/u/6594255?v=4","gravatar_id":"","url":"https://api.github.com/users/maazadeeb","html_url":"https://github.com/maazadeeb","followers_url":"https://api.github.com/users/maazadeeb/followers","following_url":"https://api.github.com/users/maazadeeb/following{/other_user}","gists_url":"https://api.github.com/users/maazadeeb/gists{/gist_id}","starred_url":"https://api.github.com/users/maazadeeb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maazadeeb/subscriptions","organizations_url":"https://api.github.com/users/maazadeeb/orgs","repos_url":"https://api.github.com/users/maazadeeb/repos","events_url":"https://api.github.com/users/maazadeeb/events{/privacy}","received_events_url":"https://api.github.com/users/maazadeeb/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":40929151,"node_id":"MDU6TGFiZWw0MDkyOTE1MQ==","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Bug","name":"Type: Bug","color":"b60205","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2020-08-11T17:05:18Z","updated_at":"2020-09-01T16:56:23Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.13.1\r\nUser Agent: `Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36`\r\n\r\n## Steps To Reproduce\r\n\r\n1. Hover over the red circle in the codesandbox. Notice that the Popover comes up above the circle\r\n2. Now, use `CMD/Ctrl` + `+` to zoom the sandbox. Notice how the Popover is displaced\r\n3. Find the red circle in the browser devtools and the React devtools and notice the difference in the position of the red circle. Interestingly enough, the Popover seems to render at the position that the React devtools show it\r\n\r\nNote: Refreshing the page after zooming does not solve the problem.\r\nNote: The problem is reproducible without the `antd` Popover as well, but it's hard to notice visually as nothing looks misplaced\r\n\r\n### Browser devtools\r\n\r\n![Browser devtools](https://i.stack.imgur.com/yFLqS.png)\r\n\r\n### React devtools\r\n\r\n![React devtools](https://i.stack.imgur.com/Pvl2z.png)\r\n\r\nI found this problem when trying to add a popover to a [custom node](https://danielcaldas.github.io/react-d3-graph/docs/#node-view-generator) in [react-d3-graph](https://danielcaldas.github.io/react-d3-graph/). I've removed all other dependencies in order to create this minimal reproducible example.\r\n\r\nI asked this on [SO](https://stackoverflow.com/q/62622105/2950032) and after receiving no response and no success in solving it myself, decided to report it here.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: [Sandbox](https://codesandbox.io/s/nameless-sunset-ld78l) and [running app](https://ld78l.csb.app/) from the sandbox\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nThe `foreignObject` is misplaced on zoom\r\n\r\n## The expected behavior\r\n\r\nI would expect that the `foreignObject` gets a proper position, in sync with the DOM's position\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19588","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19588/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19588/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19588/events","html_url":"https://github.com/facebook/react/pull/19588","id":676939631,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY2MTUzMzcy","number":19588,"title":"Gate DOM attribute stringification on browser bug detection logic","user":{"login":"koto","id":128171,"node_id":"MDQ6VXNlcjEyODE3MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/128171?v=4","gravatar_id":"","url":"https://api.github.com/users/koto","html_url":"https://github.com/koto","followers_url":"https://api.github.com/users/koto/followers","following_url":"https://api.github.com/users/koto/following{/other_user}","gists_url":"https://api.github.com/users/koto/gists{/gist_id}","starred_url":"https://api.github.com/users/koto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koto/subscriptions","organizations_url":"https://api.github.com/users/koto/orgs","repos_url":"https://api.github.com/users/koto/repos","events_url":"https://api.github.com/users/koto/events{/privacy}","received_events_url":"https://api.github.com/users/koto/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-11T14:47:36Z","updated_at":"2020-08-11T16:17:15Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19588","html_url":"https://github.com/facebook/react/pull/19588","diff_url":"https://github.com/facebook/react/pull/19588.diff","patch_url":"https://github.com/facebook/react/pull/19588.patch"},"body":"Instead of using Trusted Types feature flag, check if the browser would stringify the attributes, so that React-DOM doesn't have to. Currently only IE<=9 does not stringify attributes, needing the workaround.\r\n\r\nAdded fixture tests for the logic.\r\n\r\nFor attributes undergoing `sanitizeURL`, the value is stringified in `sanitizeURL` function, unless `enableTrustedTypesIntegration` is true and the value is an immutable `TrustedScriptURL` value. This ascertains that objects with custom `toString()` function cannot be used to bypass the sanitization (now that `DOMPropertyOperations` don't stringify on their own).\r\n\r\nFixes #19587.\r\n\r\n## Summary\r\n\r\nThe PR decouples the attribute stringification from the Trusted Types logic, leaving the former only as a workaround for a browser bug that is feature tested. A small improvement for Trusted Types would be that it moves the most imprortant functionality from behind the flag - i.e. allows most React apps to pass trusted types into DOM sinks without enabling the feature flag. \r\n\r\nSome rare functionality and dev warnings are still gated on the flag, but those are unrelated to the stringification issue.\r\n\r\n## Test Plan\r\n\r\nAdded fixture tests and manually ran them on all major browsers. ","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19587","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19587/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19587/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19587/events","html_url":"https://github.com/facebook/react/issues/19587","id":676815872,"node_id":"MDU6SXNzdWU2NzY4MTU4NzI=","number":19587,"title":"DOM attribute stringification fixes","user":{"login":"koto","id":128171,"node_id":"MDQ6VXNlcjEyODE3MQ==","avatar_url":"https://avatars2.githubusercontent.com/u/128171?v=4","gravatar_id":"","url":"https://api.github.com/users/koto","html_url":"https://github.com/koto","followers_url":"https://api.github.com/users/koto/followers","following_url":"https://api.github.com/users/koto/following{/other_user}","gists_url":"https://api.github.com/users/koto/gists{/gist_id}","starred_url":"https://api.github.com/users/koto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/koto/subscriptions","organizations_url":"https://api.github.com/users/koto/orgs","repos_url":"https://api.github.com/users/koto/repos","events_url":"https://api.github.com/users/koto/events{/privacy}","received_events_url":"https://api.github.com/users/koto/received_events","type":"User","site_admin":false},"labels":[{"id":121709921,"node_id":"MDU6TGFiZWwxMjE3MDk5MjE=","url":"https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request","name":"Type: Feature Request","color":"c7def8","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-08-11T11:54:42Z","updated_at":"2020-08-11T13:35:28Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"This is regarding the discussion in #17773. \r\n\r\nReact-DOM currently stringifies DOM attribute values  before passing them to `Element.setAttribute(NS)` functions. This might be unnecessary, as these functions implicitly stringify attribute values on their own (WebIDL attributes typed as `DOMString`). It also makes it difficult to enforce [Trusted Types](https://w3c.github.io/webappsec-trusted-types/dist/spec/) in React applications, as the trusted type objects would be stringified before values reach the DOM sinks.\r\n\r\nCurrently there is a `enableTrustedTypesIntegration` feature flag to disable stringification, but it seems like this behavior can be safely removed for modern browsers with no backwards-compatibility problems. Let me explain:\r\n\r\nAttribute stringification was introduced in https://github.com/facebook/react/commit/b0455f46709fca94da0b6126b719d6dd07605e65, at that time to workaround a [**jsdom**](https://github.com/jsdom/jsdom) limitation (jsdom's DOM emulation didn't stringify on its own). **IE 8/9** [have a similar issue](https://github.com/facebook/react/commit/3b94abcb3b2c05fc38406b02a501427e58377c44). If an object is passed to a DOM attribute, its value becomes `[object]`, ignoring any stringification rules defined in objects' `toString` function.\r\n\r\n- Jsdom does not have the issue anymore. Since at least 4.0.0 its `setAttribute` function does stringify the values via its IDL layer ([runkit demo](https://runkit.com/kkotowicz/jsdom-setattribute)).\r\n- React doesn't support IE 8 anymore.\r\n- The issue still exists for IE9 (contrary to https://github.com/facebook/react/issues/11735, my tests confirm that the bug still exists, but one needs to try a standard attribute, like `p.title`, and not one with a custom name).\r\n- All other browsers, even in their old versions (I tested IEs, Firefox, Chrome, Safari, Opera and a few mobile browsers ) correctly stringify.\r\n\r\nI propose to remove the stringification (similar to https://github.com/facebook/react/pull/17774) unless a browser bug is detected. \r\n\r\nThat way there is no spurious stringification, and the code branches with the workaround can be removed once buggy browsers stop being supported. My testing shows that only IE9 is affected. The change would be backwards-compatible. I'll send a PR with the proposed change.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19578","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19578/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19578/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19578/events","html_url":"https://github.com/facebook/react/pull/19578","id":676376001,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY1Njk3Njc0","number":19578,"title":"Bump versions for 17 RC","user":{"login":"gaearon","id":810438,"node_id":"MDQ6VXNlcjgxMDQzOA==","avatar_url":"https://avatars0.githubusercontent.com/u/810438?v=4","gravatar_id":"","url":"https://api.github.com/users/gaearon","html_url":"https://github.com/gaearon","followers_url":"https://api.github.com/users/gaearon/followers","following_url":"https://api.github.com/users/gaearon/following{/other_user}","gists_url":"https://api.github.com/users/gaearon/gists{/gist_id}","starred_url":"https://api.github.com/users/gaearon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaearon/subscriptions","organizations_url":"https://api.github.com/users/gaearon/orgs","repos_url":"https://api.github.com/users/gaearon/repos","events_url":"https://api.github.com/users/gaearon/events{/privacy}","received_events_url":"https://api.github.com/users/gaearon/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-08-10T19:52:01Z","updated_at":"2020-08-10T20:16:22Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19578","html_url":"https://github.com/facebook/react/pull/19578","diff_url":"https://github.com/facebook/react/pull/19578.diff","patch_url":"https://github.com/facebook/react/pull/19578.patch"},"body":"Did this manually.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19575","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19575/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19575/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19575/events","html_url":"https://github.com/facebook/react/pull/19575","id":676337398,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY1NjY2Mjkz","number":19575,"title":"Make undefined return value invariant a warning for memo and forwardRef","user":{"login":"bvaughn","id":29597,"node_id":"MDQ6VXNlcjI5NTk3","avatar_url":"https://avatars0.githubusercontent.com/u/29597?v=4","gravatar_id":"","url":"https://api.github.com/users/bvaughn","html_url":"https://github.com/bvaughn","followers_url":"https://api.github.com/users/bvaughn/followers","following_url":"https://api.github.com/users/bvaughn/following{/other_user}","gists_url":"https://api.github.com/users/bvaughn/gists{/gist_id}","starred_url":"https://api.github.com/users/bvaughn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvaughn/subscriptions","organizations_url":"https://api.github.com/users/bvaughn/orgs","repos_url":"https://api.github.com/users/bvaughn/repos","events_url":"https://api.github.com/users/bvaughn/events{/privacy}","received_events_url":"https://api.github.com/users/bvaughn/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-10T18:41:21Z","updated_at":"2020-08-11T19:53:29Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19575","html_url":"https://github.com/facebook/react/pull/19575","diff_url":"https://github.com/facebook/react/pull/19575.diff","patch_url":"https://github.com/facebook/react/pull/19575.patch"},"body":"Opening in case we decided to make this change for v17. I don't think it's the right change though.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19570","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19570/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19570/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19570/events","html_url":"https://github.com/facebook/react/issues/19570","id":676044234,"node_id":"MDU6SXNzdWU2NzYwNDQyMzQ=","number":19570,"title":"Bug: onInput is not firing on contentEditable div in IE11","user":{"login":"cy6eria","id":2938040,"node_id":"MDQ6VXNlcjI5MzgwNDA=","avatar_url":"https://avatars2.githubusercontent.com/u/2938040?v=4","gravatar_id":"","url":"https://api.github.com/users/cy6eria","html_url":"https://github.com/cy6eria","followers_url":"https://api.github.com/users/cy6eria/followers","following_url":"https://api.github.com/users/cy6eria/following{/other_user}","gists_url":"https://api.github.com/users/cy6eria/gists{/gist_id}","starred_url":"https://api.github.com/users/cy6eria/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cy6eria/subscriptions","organizations_url":"https://api.github.com/users/cy6eria/orgs","repos_url":"https://api.github.com/users/cy6eria/repos","events_url":"https://api.github.com/users/cy6eria/events{/privacy}","received_events_url":"https://api.github.com/users/cy6eria/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-10T10:50:30Z","updated_at":"2020-08-10T17:55:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When using onInput event on contentEditable div, the event is not being fired on IE11. It does work on Chrome 84.0.4147.105 (64-bit).\r\n\r\nReact version: 16.13.1\r\n\r\nI can't find any service which supports IE, thats why I provide only code example.\r\n\r\nCode example:\r\n\r\n```\r\nconst MessageBox = () => {\r\n  const [state, setState] = useState('');\r\n  \r\n  const handleInput = useCallback((e) => {\r\n    setState(e.currentTarget.innerHTML);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n        role=\"textbox\"\r\n        tabIndex={0}\r\n        contentEditable\r\n        onInput={handleInput}\r\n      />\r\n  );\r\n};\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19557","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19557/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19557/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19557/events","html_url":"https://github.com/facebook/react/pull/19557","id":675296020,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY0ODM4MTM0","number":19557,"title":"Seperate beforeBlur/afterBlur","user":{"login":"trueadm","id":1519870,"node_id":"MDQ6VXNlcjE1MTk4NzA=","avatar_url":"https://avatars0.githubusercontent.com/u/1519870?v=4","gravatar_id":"","url":"https://api.github.com/users/trueadm","html_url":"https://github.com/trueadm","followers_url":"https://api.github.com/users/trueadm/followers","following_url":"https://api.github.com/users/trueadm/following{/other_user}","gists_url":"https://api.github.com/users/trueadm/gists{/gist_id}","starred_url":"https://api.github.com/users/trueadm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trueadm/subscriptions","organizations_url":"https://api.github.com/users/trueadm/orgs","repos_url":"https://api.github.com/users/trueadm/repos","events_url":"https://api.github.com/users/trueadm/events{/privacy}","received_events_url":"https://api.github.com/users/trueadm/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2020-08-07T21:18:16Z","updated_at":"2020-08-08T21:39:50Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19557","html_url":"https://github.com/facebook/react/pull/19557","diff_url":"https://github.com/facebook/react/pull/19557.diff","patch_url":"https://github.com/facebook/react/pull/19557.patch"},"body":"This PR does two things:\r\n\r\n- Moves the logic for handling `beforeblur`/`afterblur` to a seperate flag internally. Previously, they used the `enableCreateEventHandleAPI` flag, but really the feature of adding functionality for handling focus before and after an active element is removed/hidden has nothing to do with `createEventHandle`.\r\n- Adds support for the React event prop so it's possible to do `<div onBeforeBlur={...}>`. `onAfterBlur` isn't done via a React prop, as the event is always dispatched on the `document`, so no DOM element will ever pick it up.\r\n\r\nThese changes make it possible to extract the important logic around handling focus management, without needing to use `createEventHandle` or needing to change how the timing occurs in React. One of the internal features we have, which is why this previously wasn't already carried out, is that fact we attach events to the experimental Scopes API. In terms of handling that, we could support adding React prop events to either Scopes or Fragments (`<Fragment onClick={...}>`), but really that is a discussion for another day.","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19554","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19554/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19554/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19554/events","html_url":"https://github.com/facebook/react/pull/19554","id":674935976,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY0NTM4MzIw","number":19554,"title":"beforeInputPlugin: add native support for beforeinput","user":{"login":"trueadm","id":1519870,"node_id":"MDQ6VXNlcjE1MTk4NzA=","avatar_url":"https://avatars0.githubusercontent.com/u/1519870?v=4","gravatar_id":"","url":"https://api.github.com/users/trueadm","html_url":"https://github.com/trueadm","followers_url":"https://api.github.com/users/trueadm/followers","following_url":"https://api.github.com/users/trueadm/following{/other_user}","gists_url":"https://api.github.com/users/trueadm/gists{/gist_id}","starred_url":"https://api.github.com/users/trueadm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trueadm/subscriptions","organizations_url":"https://api.github.com/users/trueadm/orgs","repos_url":"https://api.github.com/users/trueadm/repos","events_url":"https://api.github.com/users/trueadm/events{/privacy}","received_events_url":"https://api.github.com/users/trueadm/received_events","type":"User","site_admin":false},"labels":[{"id":196858374,"node_id":"MDU6TGFiZWwxOTY4NTgzNzQ=","url":"https://api.github.com/repos/facebook/react/labels/CLA%20Signed","name":"CLA Signed","color":"e7e7e7","default":false,"description":null},{"id":1775958285,"node_id":"MDU6TGFiZWwxNzc1OTU4Mjg1","url":"https://api.github.com/repos/facebook/react/labels/React%20Core%20Team","name":"React Core Team","color":"9149d1","default":false,"description":"Opened by a member of the React Core Team"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-08-07T10:55:14Z","updated_at":"2020-09-02T17:21:49Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/facebook/react/pulls/19554","html_url":"https://github.com/facebook/react/pull/19554","diff_url":"https://github.com/facebook/react/pull/19554.diff","patch_url":"https://github.com/facebook/react/pull/19554.patch"},"body":"This PR adds support for the native `beforeinput` event (when we detected it), falling back to the alternatives if we don't find support for it. See https://github.com/facebook/react/issues/11211 for more context on this.\r\n\r\nThis PR should fix some long standing issues with DraftJS as well as providing better compatibility with modern browser events. This specific event is supported in all the major evergreen browsers, apart from Firefox.\r\n\r\nTODO:\r\n- Ensure we can use this internally without any issues\r\n- Validate that the detection mechanism is reliable, or maybe switch to a better alternative","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19547","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19547/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19547/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19547/events","html_url":"https://github.com/facebook/react/issues/19547","id":674411480,"node_id":"MDU6SXNzdWU2NzQ0MTE0ODA=","number":19547,"title":"Error: \"Cannot read property 'length' of undefined\"","user":{"login":"dzmitry-haawk","id":53858504,"node_id":"MDQ6VXNlcjUzODU4NTA0","avatar_url":"https://avatars0.githubusercontent.com/u/53858504?v=4","gravatar_id":"","url":"https://api.github.com/users/dzmitry-haawk","html_url":"https://github.com/dzmitry-haawk","followers_url":"https://api.github.com/users/dzmitry-haawk/followers","following_url":"https://api.github.com/users/dzmitry-haawk/following{/other_user}","gists_url":"https://api.github.com/users/dzmitry-haawk/gists{/gist_id}","starred_url":"https://api.github.com/users/dzmitry-haawk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dzmitry-haawk/subscriptions","organizations_url":"https://api.github.com/users/dzmitry-haawk/orgs","repos_url":"https://api.github.com/users/dzmitry-haawk/repos","events_url":"https://api.github.com/users/dzmitry-haawk/events{/privacy}","received_events_url":"https://api.github.com/users/dzmitry-haawk/received_events","type":"User","site_admin":false},"labels":[{"id":710573595,"node_id":"MDU6TGFiZWw3MTA1NzM1OTU=","url":"https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools","name":"Component: Developer Tools","color":"fbca04","default":false,"description":null},{"id":620368407,"node_id":"MDU6TGFiZWw2MjAzNjg0MDc=","url":"https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information","name":"Resolution: Needs More Information","color":"fffde7","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"dzmitry-haawk","id":53858504,"node_id":"MDQ6VXNlcjUzODU4NTA0","avatar_url":"https://avatars0.githubusercontent.com/u/53858504?v=4","gravatar_id":"","url":"https://api.github.com/users/dzmitry-haawk","html_url":"https://github.com/dzmitry-haawk","followers_url":"https://api.github.com/users/dzmitry-haawk/followers","following_url":"https://api.github.com/users/dzmitry-haawk/following{/other_user}","gists_url":"https://api.github.com/users/dzmitry-haawk/gists{/gist_id}","starred_url":"https://api.github.com/users/dzmitry-haawk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dzmitry-haawk/subscriptions","organizations_url":"https://api.github.com/users/dzmitry-haawk/orgs","repos_url":"https://api.github.com/users/dzmitry-haawk/repos","events_url":"https://api.github.com/users/dzmitry-haawk/events{/privacy}","received_events_url":"https://api.github.com/users/dzmitry-haawk/received_events","type":"User","site_admin":false},"assignees":[{"login":"dzmitry-haawk","id":53858504,"node_id":"MDQ6VXNlcjUzODU4NTA0","avatar_url":"https://avatars0.githubusercontent.com/u/53858504?v=4","gravatar_id":"","url":"https://api.github.com/users/dzmitry-haawk","html_url":"https://github.com/dzmitry-haawk","followers_url":"https://api.github.com/users/dzmitry-haawk/followers","following_url":"https://api.github.com/users/dzmitry-haawk/following{/other_user}","gists_url":"https://api.github.com/users/dzmitry-haawk/gists{/gist_id}","starred_url":"https://api.github.com/users/dzmitry-haawk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dzmitry-haawk/subscriptions","organizations_url":"https://api.github.com/users/dzmitry-haawk/orgs","repos_url":"https://api.github.com/users/dzmitry-haawk/repos","events_url":"https://api.github.com/users/dzmitry-haawk/events{/privacy}","received_events_url":"https://api.github.com/users/dzmitry-haawk/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-08-06T15:41:45Z","updated_at":"2020-08-15T14:00:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Describe what you were doing when the bug occurred:\r\n1. \r\n2. \r\n3. \r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.8.2-fed4ae024\r\n\r\nCall stack: at getChartData (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18061:32)\r\n    at ProfilingCache.getFlamegraphChartData (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18301:14)\r\n    at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31722:32)\r\n    at vh (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11067:7)\r\n    at fi (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:11733:7)\r\n    at ck (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:14430:86)\r\n    at bk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13779:11)\r\n    at ak (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13768:5)\r\n    at Sj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13750:7)\r\n    at Jj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:13448:118)\r\n\r\nComponent stack: at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31701:48)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26139:23)\r\n    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33363:48)\r\n    at ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27172:5)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27303:32)\r\n    at div\r\n    at div\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30463:23)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:22538:23)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:23040:27)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28328:23)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33797:21)","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19541","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19541/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19541/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19541/events","html_url":"https://github.com/facebook/react/issues/19541","id":673793917,"node_id":"MDU6SXNzdWU2NzM3OTM5MTc=","number":19541,"title":"Bug: Context doesn't work when exported from a package with multiple entrypoints","user":{"login":"ROODAY","id":5439867,"node_id":"MDQ6VXNlcjU0Mzk4Njc=","avatar_url":"https://avatars3.githubusercontent.com/u/5439867?v=4","gravatar_id":"","url":"https://api.github.com/users/ROODAY","html_url":"https://github.com/ROODAY","followers_url":"https://api.github.com/users/ROODAY/followers","following_url":"https://api.github.com/users/ROODAY/following{/other_user}","gists_url":"https://api.github.com/users/ROODAY/gists{/gist_id}","starred_url":"https://api.github.com/users/ROODAY/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ROODAY/subscriptions","organizations_url":"https://api.github.com/users/ROODAY/orgs","repos_url":"https://api.github.com/users/ROODAY/repos","events_url":"https://api.github.com/users/ROODAY/events{/privacy}","received_events_url":"https://api.github.com/users/ROODAY/received_events","type":"User","site_admin":false},"labels":[{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2020-08-05T19:30:40Z","updated_at":"2020-08-11T13:41:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"React version: **^16.13.1**\r\n\r\nI had some code in my React app that handled loading Firebase and getting an AuthUser. Both the Firebase object and the AuthUser object were stored in their own contexts so they could be used throughout my app, and this worked fine. I then wanted to abstract this functionality into a component library so that I could reuse it easily between projects, and that's where this issue cropped up. I made my library using Neutrino,js since it was recommended on the React docs site, and the \"react-components\" preset for making component libraries creates a separate entrypoint for every file/directory in `src/components`. \r\n\r\nSo in my case, my build directory contained `Firebase.js` and `Session.js`, each of which exported their respective context, However, importing these contexts back into my original React app wouldn't work, as any changes to the value in the context provider (inside the library) would not propagate to the context consumers (outside the library/in my app). I confirmed this by checking the Component tree in dev tools (screenshots [here](https://stackoverflow.com/questions/63267934/react-context-from-library-not-updating-in-consumer)).\r\n\r\nI eventually got around this issue by following [this answer](https://stackoverflow.com/a/60655639/3325942) from SO. Basically just make an index.js that imports/re-exports everything so that it's all considered one module. This made it work, but now my imports went from\r\n```\r\nimport AuthuserContext, {withAuthentication} from \"my-library/Session\";\r\nimport Firebase, {withFirebase} from \"my-library/Firebase\";\r\n```\r\nto\r\n```\r\nimport {AuthuserContext, withAuthentication, Firebase, withFirebase} from \"my-library\";\r\n```\r\nwhich feels a lot messier. Is there a fix for this or is this expected behavior for Contexts? And if so, can that change in the future?\r\n\r\n## Steps To Reproduce\r\n\r\n1. Bootstrap a Neutrino.js react-components preset.\r\n2. Create a file that exports a context and updates the value asynchronously (in my case loads firebase, but you could probably even do a setTimeout).\r\n3. Create a file that uses that contexts provider.\r\n4. Create an HOC that wraps an element with contexts consumer.\r\n5. Build the Neutrino.js project and import the HOC into another project and wrap a component with it. Notice that the consumer won't ever update.\r\n\r\nThe buggy context code is available on [this commit](https://github.com/BUUPE/React-Components/tree/a34cfd58c00dface71031c3ba551cc778c1b8e83) of my component library.\r\n\r\n## The current behavior\r\nContext can be used within the module/library it was defined in, but consumers won't update if they are defined outside the library.\r\n\r\n## The expected behavior\r\nContext would update anywhere the consumer is,","performed_via_github_app":null},{"url":"https://api.github.com/repos/facebook/react/issues/19539","repository_url":"https://api.github.com/repos/facebook/react","labels_url":"https://api.github.com/repos/facebook/react/issues/19539/labels{/name}","comments_url":"https://api.github.com/repos/facebook/react/issues/19539/comments","events_url":"https://api.github.com/repos/facebook/react/issues/19539/events","html_url":"https://github.com/facebook/react/issues/19539","id":673738990,"node_id":"MDU6SXNzdWU2NzM3Mzg5OTA=","number":19539,"title":"Bug: Crash after update","user":{"login":"krishnaTORQUE","id":4960568,"node_id":"MDQ6VXNlcjQ5NjA1Njg=","avatar_url":"https://avatars2.githubusercontent.com/u/4960568?v=4","gravatar_id":"","url":"https://api.github.com/users/krishnaTORQUE","html_url":"https://github.com/krishnaTORQUE","followers_url":"https://api.github.com/users/krishnaTORQUE/followers","following_url":"https://api.github.com/users/krishnaTORQUE/following{/other_user}","gists_url":"https://api.github.com/users/krishnaTORQUE/gists{/gist_id}","starred_url":"https://api.github.com/users/krishnaTORQUE/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/krishnaTORQUE/subscriptions","organizations_url":"https://api.github.com/users/krishnaTORQUE/orgs","repos_url":"https://api.github.com/users/krishnaTORQUE/repos","events_url":"https://api.github.com/users/krishnaTORQUE/events{/privacy}","received_events_url":"https://api.github.com/users/krishnaTORQUE/received_events","type":"User","site_admin":false},"labels":[{"id":620368407,"node_id":"MDU6TGFiZWw2MjAzNjg0MDc=","url":"https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information","name":"Resolution: Needs More Information","color":"fffde7","default":false,"description":null},{"id":155984160,"node_id":"MDU6TGFiZWwxNTU5ODQxNjA=","url":"https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed","name":"Status: Unconfirmed","color":"d4c5f9","default":false,"description":"A potential issue that we haven't yet confirmed as a bug"}],"state":"open","locked":false,"assignee":{"login":"krishnaTORQUE","id":4960568,"node_id":"MDQ6VXNlcjQ5NjA1Njg=","avatar_url":"https://avatars2.githubusercontent.com/u/4960568?v=4","gravatar_id":"","url":"https://api.github.com/users/krishnaTORQUE","html_url":"https://github.com/krishnaTORQUE","followers_url":"https://api.github.com/users/krishnaTORQUE/followers","following_url":"https://api.github.com/users/krishnaTORQUE/following{/other_user}","gists_url":"https://api.github.com/users/krishnaTORQUE/gists{/gist_id}","starred_url":"https://api.github.com/users/krishnaTORQUE/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/krishnaTORQUE/subscriptions","organizations_url":"https://api.github.com/users/krishnaTORQUE/orgs","repos_url":"https://api.github.com/users/krishnaTORQUE/repos","events_url":"https://api.github.com/users/krishnaTORQUE/events{/privacy}","received_events_url":"https://api.github.com/users/krishnaTORQUE/received_events","type":"User","site_admin":false},"assignees":[{"login":"krishnaTORQUE","id":4960568,"node_id":"MDQ6VXNlcjQ5NjA1Njg=","avatar_url":"https://avatars2.githubusercontent.com/u/4960568?v=4","gravatar_id":"","url":"https://api.github.com/users/krishnaTORQUE","html_url":"https://github.com/krishnaTORQUE","followers_url":"https://api.github.com/users/krishnaTORQUE/followers","following_url":"https://api.github.com/users/krishnaTORQUE/following{/other_user}","gists_url":"https://api.github.com/users/krishnaTORQUE/gists{/gist_id}","starred_url":"https://api.github.com/users/krishnaTORQUE/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/krishnaTORQUE/subscriptions","organizations_url":"https://api.github.com/users/krishnaTORQUE/orgs","repos_url":"https://api.github.com/users/krishnaTORQUE/repos","events_url":"https://api.github.com/users/krishnaTORQUE/events{/privacy}","received_events_url":"https://api.github.com/users/krishnaTORQUE/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-08-05T18:01:44Z","updated_at":"2020-08-05T19:30:20Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:16.13.1\r\n\r\nIt was working until I update react to latest version\r\n\r\nNo issue in development server\r\n\r\nOnce I build the project getting this issue\r\n\r\nSyntaxError: missing } after property list\r\nnote: { opened at line 1, column 1998\r\n\r\nChunkLoadError: Loading chunk 1 failed\r\n/static/js/1.75c86cba.chunk.js","performed_via_github_app":null}]